{'sequence': 'public class XCategory extends Category implements OptionHandler final private static String FQCN XCategory class getName private static XFactory factory new XFactory public static final String SUFFIX_OPTION String suffix protected XCategory String name super name public void activateOptions public void debug String message super debug message suffix public static Category getInstance String name return Category getInstance name factory public static Category getInstance Class clazz return getInstance clazz getName factory public String getOptionStrings return new String SUFFIX_OPTION public void lethal String message Throwable if hierarchy isDisabled XPriority LETHAL_INT return if XPriority LETHAL isGreaterOrEqual this getChainedPriority forcedLog FQCN XPriority LETHAL message public void lethal String message if hierarchy isDisabled XPriority LETHAL_INT return if XPriority LETHAL isGreaterOrEqual this getChainedPriority forcedLog FQCN XPriority LETHAL message null public void setOption String option String value if option null return if option equalsIgnoreCase SUFFIX_OPTION this suffix value LogLog debug suffix public String getOption String option if option equalsIgnoreCase SUFFIX_OPTION return this suffix return null public void trace String message Throwable if hierarchy isDisabled XPriority TRACE_INT return if XPriority TRACE isGreaterOrEqual this getChainedPriority forcedLog FQCN XPriority TRACE message public void trace String message if hierarchy isDisabled XPriority TRACE_INT return if XPriority TRACE isGreaterOrEqual this getChainedPriority callAppenders new LoggingEvent FQCN this XPriority TRACE message null public static class XFactory implements CategoryFactory public XFactory public Category makeNewCategoryInstance String name return new XCategory name', 'bug': '1'}
{'sequence': 'abstract public class DateLayout extends Layout public final static String NULL_DATE_FORMAT public final static String RELATIVE_TIME_DATE_FORMAT protected FieldPosition pos new FieldPosition final static public String DATE_FORMAT_OPTION final static public String TIMEZONE_OPTION private String timeZoneID private String dateFormatOption protected DateFormat dateFormat protected Date date new Date public String getOptionStrings return new String DATE_FORMAT_OPTION TIMEZONE_OPTION public void setOption String option String value if option equalsIgnoreCase DATE_FORMAT_OPTION dateFormatOption value toUpperCase else if option equalsIgnoreCase TIMEZONE_OPTION timeZoneID value public void setDateFormat String dateFormat if dateFormat null dateFormatOption dateFormat setDateFormat dateFormatOption TimeZone getDefault public String getDateFormat return dateFormatOption public void setTimeZone String timeZone this timeZoneID timeZone public String getTimeZone return timeZoneID public void activateOptions setDateFormat dateFormatOption if timeZoneID null dateFormat null dateFormat setTimeZone TimeZone getTimeZone timeZoneID public void dateFormat StringBuffer buf LoggingEvent event if dateFormat null date setTime event timeStamp dateFormat format date buf this pos buf append public void setDateFormat DateFormat dateFormat TimeZone timeZone this dateFormat dateFormat this dateFormat setTimeZone timeZone public void setDateFormat String dateFormatType TimeZone timeZone if dateFormatType null this dateFormat null return if dateFormatType equalsIgnoreCase NULL_DATE_FORMAT this dateFormat null else if dateFormatType equalsIgnoreCase RELATIVE_TIME_DATE_FORMAT this dateFormat new RelativeTimeDateFormat else if dateFormatType equalsIgnoreCase AbsoluteTimeDateFormat ABS_TIME_DATE_FORMAT this dateFormat new AbsoluteTimeDateFormat timeZone else if dateFormatType equalsIgnoreCase AbsoluteTimeDateFormat DATE_AND_TIME_DATE_FORMAT this dateFormat new DateTimeDateFormat timeZone else if dateFormatType equalsIgnoreCase AbsoluteTimeDateFormat ISO8601_DATE_FORMAT this dateFormat new ISO8601DateFormat timeZone else this dateFormat new SimpleDateFormat dateFormatType this dateFormat setTimeZone timeZone', 'bug': '1'}
{'sequence': 'public class SocketMin static Category cat Category getInstance SyslogMin class getName static SocketAppender public static void main String argv if argv length init argv argv else usage NDC push if argv equals loop else test close static void usage String msg System err println msg System err println SocketMin class System exit static void init String host String portStr Category root Category getRoot BasicConfigurator configure try int port Integer parseInt portStr cat info host port new SocketAppender host port setName root addAppender catch java lang NumberFormatException printStackTrace usage portStr catch Exception System err println printStackTrace System exit static void loop Category root Category getRoot InputStreamReader in new InputStreamReader System in System out println int int while true cat debug cat info cat warn cat error new Exception try in read catch Exception return if break if break if System out println root removeAppender static void test int cat debug cat info cat warn cat error cat log Priority FATAL cat debug new Exception', 'bug': '0'}
{'sequence': 'class StressCategory static Priority priority new Priority Priority DEBUG Priority INFO Priority WARN Priority ERROR Priority FATAL static Priority defaultPriority Category getRoot getPriority static int LENGTH static String names static Category cat static CT ct static Random random new Random public static void main String args LENGTH args length if LENGTH System err println StressCategory class getName System exit if LENGTH System err println names new String LENGTH for int LENGTH names args cat new Category LENGTH ct new CT LENGTH permute static void permute int if LENGTH createLoop else for int LENGTH swap names permute swap names static void swap String names int int String names names names names public static void permutationDump System out print for int LENGTH System out print names System out println static void createLoop int if LENGTH for int LENGTH if ct null cat null else cat Category getInstance ct catstr cat setPriority ct priority test Category defaultHierarchy clear else ct null createLoop ct new CT names null createLoop int random nextInt if ct new CT names priority createLoop static void test for int LENGTH if checkCorrectness System out println permutationDump ctDump catDump System exit static void ctDump for int LENGTH if ct null System out println ct catstr ct priority else System out println static void catDump for int LENGTH if cat null System out println cat name cat getPriority else System out println static boolean checkCorrectness int CT localCT ct if localCT null return true Priority expected getExpectedPrioriy localCT Priority purported cat getChainedPriority if expected purported System out println localCT catstr expected System out println cat name purported return false return true static Priority getExpectedPrioriy CT ctParam Priority priority ctParam priority if priority null return priority String catstr ctParam catstr for int catstr lastIndexOf catstr length catstr lastIndexOf String substr catstr substring for int LENGTH if ct null substr equals ct catstr Priority ct priority if null return return defaultPriority static class CT public String catstr public Priority priority CT String catstr Priority priority this catstr catstr this priority priority', 'bug': '1'}
{'sequence': 'public class DefaultInit static Category cat Category getInstance DefaultInit class getName public static void main String argv cat debug static void Usage String msg System err println msg System err println System exit', 'bug': '0'}
{'sequence': 'public abstract class Filter implements OptionHandler public Filter next public static final int DENY public static final int NEUTRAL public static final int ACCEPT public void activateOptions abstract public int decide LoggingEvent event', 'bug': '0'}
{'sequence': 'public class FormattingInfo int min int max boolean leftAlign false void reset min max leftAlign false void dump LogLog debug min max leftAlign', 'bug': '0'}
{'sequence': 'public interface Configurator void doConfigure URL url Hierarchy hierarchy', 'bug': '1'}
{'sequence': 'class DefaultRenderer implements ObjectRenderer DefaultRenderer public String doRender Object return toString', 'bug': '0'}
{'sequence': 'public class StressNDC extends Thread static Category root Category getRoot static Random random new Random static final int LOOP_LENGTH static final int PUSH_MISS LOOP_LENGTH static final int POP_MISS PUSH_MISS static int maxThreads static int msgCounter static int threadCounter static double LOG_2 Math log static Object lock new Object public static void main String args root setPriority Priority DEBUG BasicConfigurator configure if args length usage try maxThreads Integer parseInt args catch java lang NumberFormatException System err println usage root debug NDC push while true synchronized lock createChildren randomInt BRANCHING_FACTOR try root debug lock wait root debug catch InterruptedException root warn static void usage System err println System exit Stack parentDC public StressNDC Stack parentDC this setName randomID this parentDC parentDC public void run NDC inherit parentDC int loopLength StressNDC randomInt LOOP_LENGTH root debug loopLength int createIndex loopLength for int loopLength if createIndex createChildren randomInt BRANCHING_FACTOR if randomInt PUSH_MISS String id randomID root debug id NDC push id root debug StressNDC msgCounter if randomInt POP_MISS root debug NDC pop synchronized lock StressNDC threadCounter root debug threadCounter if StressNDC threadCounter root debug if loopLength root debug NDC remove public static void createChildren int if return synchronized lock maxThreadsConstained root debug for int root debug threadCounter new StressNDC NDC cloneStack start static public int maxThreadsConstained int int maxAllowed StressNDC maxThreads StressNDC threadCounter return maxAllowed maxAllowed public static int randomInt int int random nextInt return public static String randomID return Integer toHexString random nextInt', 'bug': '0'}
{'sequence': 'class CategoryKey String name int hashCache CategoryKey String name this name name intern hashCache name hashCode final public int hashCode return hashCache final public boolean equals Object rArg if this rArg return true if rArg null CategoryKey class rArg getClass return name CategoryKey rArg name else return false', 'bug': '0'}
{'sequence': 'public class NTEventLogAppender extends AppenderSkeleton private int public static final String SOURCE_OPTION private String source null private String server null private static final int FATAL Priority FATAL toInt private static final int ERROR Priority ERROR toInt private static final int WARN Priority WARN toInt private static final int INFO Priority INFO toInt private static final int DEBUG Priority DEBUG toInt public NTEventLogAppender this null null null public NTEventLogAppender String source this null source null public NTEventLogAppender String server String source this server source null public NTEventLogAppender Layout layout this null null layout public NTEventLogAppender String source Layout layout this null source layout public NTEventLogAppender String server String source Layout layout if source null source if layout null this layout new TTCCLayout else this layout layout try registerEventSource server source catch Exception printStackTrace public String getOptionStrings return OptionConverter concatanateArrays super getOptionStrings new String SOURCE_OPTION public void setOption String key String value if value null return super setOption key value if key equalsIgnoreCase SOURCE_OPTION source value trim public void close public void activateOptions if source null try registerEventSource server source catch Exception LogLog error public void append LoggingEvent event StringBuffer sbuf new StringBuffer sbuf append layout format event if layout ignoresThrowable String event getThrowableStrRep if null int len length for int len sbuf append int nt_category event priority toInt reportEvent sbuf toString nt_category public void finalize deregisterEventSource public void setSource String source this source source trim public String getSource return source public boolean requiresLayout return true native private int registerEventSource String server String source native private void reportEvent int handle String message int priority native private void deregisterEventSource int handle static System loadLibrary', 'bug': '1'}
{'sequence': 'public class NotLogging static int runLength final static int INITIAL_HASH_SIZE static String SHORT_MSG static Category SHORT_CAT Category getInstance static Category MEDIUM_CAT Category getInstance static Category LONG_CAT Category getInstance static Category INEXISTENT_SHORT_CAT Category getInstance static Category INEXISTENT_MEDIUM_CAT Category getInstance static Category INEXISTENT_LONG_CAT Category getInstance static Category CAT_ARRAY new Category SHORT_CAT MEDIUM_CAT LONG_CAT INEXISTENT_SHORT_CAT INEXISTENT_MEDIUM_CAT INEXISTENT_LONG_CAT static void Usage System err println System exit public static void main String argv if argv length Usage ProgramInit argv double delta System out println for int CAT_ARRAY length delta SimpleMessage CAT_ARRAY SHORT_MSG runLength System out println delta CAT_ARRAY getName System out println for int CAT_ARRAY length delta FullyOptimizedComplexMessage CAT_ARRAY runLength System out println delta CAT_ARRAY getName System out println for int CAT_ARRAY length delta ComplexMessage CAT_ARRAY runLength System out println delta CAT_ARRAY getName static void ProgramInit String args try runLength Integer parseInt args catch java lang NumberFormatException System err println Usage ConsoleAppender appender new ConsoleAppender new SimpleLayout if equals args else if equals args System out println Category getDefaultHierarchy disableInfo else Usage SHORT_CAT setPriority Priority INFO Category getRoot setPriority Priority INFO static double SimpleMessage Category category String msg long runLength long before System currentTimeMillis for int runLength category debug msg return System currentTimeMillis before runLength static double FullyOptimizedComplexMessage Category category long runLength long before System currentTimeMillis for int runLength if category isDebugEnabled category debug return System currentTimeMillis before runLength static double ComplexMessage Category category long runLength long before System currentTimeMillis for int runLength category debug return System currentTimeMillis before runLength', 'bug': '1'}
{'sequence': 'public class NullAppender extends AppenderSkeleton public static String public String public NullAppender public NullAppender Layout layout this layout layout public void close public void doAppend LoggingEvent event if layout null layout format event public void append LoggingEvent event public boolean requiresLayout return true', 'bug': '0'}
{'sequence': 'public class ROFile static Category cat Category getInstance ROFile class getName public static void main String argv if argv length init argv else Usage test static void Usage String msg System err println msg System err println ROFile class getName System exit static void init String configFile PropertyConfigurator configure configFile static void test int cat debug', 'bug': '0'}
{'sequence': 'public class Shallow static Category cat Category getInstance Shallow class public static void main String argv if argv length init argv else usage test static void usage String msg System err println msg System err println Shallow class getName System exit static void init String configFile if configFile endsWith DOMConfigurator configure configFile else PropertyConfigurator configure configFile static void test int NDC push Category root Category getRoot cat debug root debug cat info root info cat warn root warn cat error root error cat log Priority FATAL root log Priority FATAL Exception new Exception cat debug root debug cat info root info cat warn root warn cat error root error cat log Priority FATAL root log Priority FATAL Category shutdown static void delay int amount try Thread currentThread sleep amount catch Exception', 'bug': '1'}
{'sequence': 'class ProvisionNode extends Vector ProvisionNode Category cat super this addElement cat', 'bug': '0'}
{'sequence': 'public class ConfigurationFileParsing public static void main String argv if argv length NDC push PropertyConfigurator configure argv Category root Category getRoot root debug root debug NDC pop Category shutdown else Usage static void Usage String msg System err println msg System err println ConfigurationFileParsing class getName System exit', 'bug': '0'}
{'sequence': 'public class Priority int level String levelStr int syslogEquivalent public final static int FATAL_INT public final static int ERROR_INT public final static int WARN_INT public final static int INFO_INT public final static int DEBUG_INT final static public Priority FATAL new Priority FATAL_INT final static public Priority ERROR new Priority ERROR_INT final static public Priority WARN new Priority WARN_INT final static public Priority INFO new Priority INFO_INT final static public Priority DEBUG new Priority DEBUG_INT protected Priority int level String levelStr int syslogEquivalent this level level this levelStr levelStr this syslogEquivalent syslogEquivalent public final int getSyslogEquivalent return syslogEquivalent final public String toString return levelStr public final int toInt return level public boolean isGreaterOrEqual Priority return level level public static Priority getAllPossiblePriorities return new Priority Priority FATAL Priority ERROR Priority WARN Priority INFO Priority DEBUG public static Priority toPriority String sArg return toPriority sArg Priority DEBUG public static Priority toPriority int val return toPriority val Priority DEBUG public static Priority toPriority int val Priority defaultPriority switch val case DEBUG_INT return DEBUG case INFO_INT return INFO case WARN_INT return WARN case ERROR_INT return ERROR case FATAL_INT return FATAL default return defaultPriority public static Priority toPriority String sArg Priority defaultPriority if sArg null return defaultPriority String sArg toUpperCase if equals return Priority DEBUG if equals return Priority INFO if equals return Priority WARN if equals return Priority ERROR if equals return Priority FATAL return defaultPriority', 'bug': '1'}
{'sequence': 'public interface ErrorHandler extends OptionHandler void error String message Exception int errorCode void error String message', 'bug': '0'}
{'sequence': 'public class LocationInfo implements java io Serializable transient String lineNumber transient String fileName transient String className transient String methodName public String fullInfo private static StringWriter sw new StringWriter private static PrintWriter pw new PrintWriter sw public final static String NA static final long serialVersionUID static boolean inVisualAge false static try Class dummy Class forName inVisualAge true LogLog debug catch Throwable public LocationInfo Throwable String fqnOfCallingClass if null return String synchronized sw printStackTrace pw sw toString sw getBuffer setLength int ibegin iend ibegin lastIndexOf fqnOfCallingClass if ibegin return ibegin indexOf Layout LINE_SEP ibegin if ibegin return ibegin Layout LINE_SEP_LEN iend indexOf Layout LINE_SEP ibegin if iend return if inVisualAge ibegin lastIndexOf iend if ibegin return ibegin this fullInfo substring ibegin iend public String getClassName if fullInfo null return NA if className null int iend fullInfo lastIndexOf if iend className NA else iend fullInfo lastIndexOf iend int ibegin if inVisualAge ibegin fullInfo lastIndexOf iend if iend className NA else className this fullInfo substring ibegin iend return className public String getFileName if fullInfo null return NA if fileName null int iend fullInfo lastIndexOf if iend fileName NA else int ibegin fullInfo lastIndexOf iend fileName this fullInfo substring ibegin iend return fileName public String getLineNumber if fullInfo null return NA if lineNumber null int iend fullInfo lastIndexOf int ibegin fullInfo lastIndexOf iend if ibegin lineNumber NA else lineNumber this fullInfo substring ibegin iend return lineNumber public String getMethodName if fullInfo null return NA if methodName null int iend fullInfo lastIndexOf int ibegin fullInfo lastIndexOf iend if ibegin methodName NA else methodName this fullInfo substring ibegin iend return methodName', 'bug': '0'}
{'sequence': 'public class BoundedFIFO LoggingEvent buf int numElements int first int next int maxSize public BoundedFIFO int maxSize if maxSize throw new IllegalArgumentException maxSize this maxSize maxSize buf new LoggingEvent maxSize public LoggingEvent get if numElements return null LoggingEvent buf first if first maxSize first numElements return public void put LoggingEvent if numElements maxSize buf next if next maxSize next numElements public int getMaxSize return maxSize public boolean isFull return numElements maxSize public int length return numElements int min int int return synchronized public void resize int newSize if newSize maxSize return LoggingEvent tmp new LoggingEvent newSize int len1 maxSize first len1 min len1 newSize len1 min len1 numElements System arraycopy buf first tmp len1 int len2 if len1 numElements len1 newSize len2 numElements len1 len2 min len2 newSize len1 System arraycopy buf tmp len1 len2 this buf tmp this maxSize newSize this first this numElements len1 len2 this next this numElements this next public boolean wasEmpty return numElements public boolean wasFull return numElements maxSize', 'bug': '0'}
{'sequence': 'public class LoggingEvent implements java io Serializable private static long startTime System currentTimeMillis transient public final String fqnOfCategoryClass transient public Category category public final String categoryName transient public Priority priority private String ndc private boolean ndcLookupRequired true transient private Object message private String renderedMessage private String threadName private ThrowableInformation throwableInfo public final long timeStamp private LocationInfo locationInfo static final long serialVersionUID static final Integer PARAM_ARRAY new Integer static final String TO_PRIORITY static final Class TO_PRIORITY_PARAMS new Class int class public LoggingEvent String fqnOfCategoryClass Category category Priority priority Object message Throwable throwable this fqnOfCategoryClass fqnOfCategoryClass this category category this categoryName category getName this priority priority this message message if throwable null this throwableInfo new ThrowableInformation throwable timeStamp System currentTimeMillis public LocationInfo getLocationInformation if locationInfo null locationInfo new LocationInfo new Throwable fqnOfCategoryClass return locationInfo public Object getMessage if message null return message else return getRenderedMessage public String getNDC if ndcLookupRequired ndcLookupRequired false ndc NDC get return ndc public String getRenderedMessage if renderedMessage null message null if message instanceof String renderedMessage String message else renderedMessage category getHierarchy getRendererMap findAndRender message return renderedMessage public static long getStartTime return startTime public String getThreadName if threadName null threadName Thread currentThread getName return threadName public ThrowableInformation getThrowableInformation return throwableInfo public String getThrowableStrRep if throwableInfo null return null else return throwableInfo getThrowableStrRep private void readPriority ObjectInputStream ois throws java io IOException ClassNotFoundException int ois readInt try String className String ois readObject if className null priority Priority toPriority else Method Method methodCache get className if null Class clazz Class forName className clazz getDeclaredMethod TO_PRIORITY TO_PRIORITY_PARAMS methodCache put className PARAM_ARRAY new Integer priority Priority invoke null PARAM_ARRAY catch Exception LogLog warn priority Priority toPriority private void readObject ObjectInputStream ois throws java io IOException ClassNotFoundException ois defaultReadObject readPriority ois if locationInfo null locationInfo new LocationInfo null null private void writeObject ObjectOutputStream oos throws java io IOException this getThreadName this getRenderedMessage this getNDC this getThrowableStrRep oos defaultWriteObject writePriority oos private void writePriority ObjectOutputStream oos throws java io IOException oos writeInt priority toInt Class clazz priority getClass if clazz Priority class oos writeObject null else oos writeObject clazz getName', 'bug': '1'}
{'sequence': 'public class Loader static String TSTR static public URL getResource String resource Class clazz URL url null ClassLoader loader clazz getClassLoader if loader null try LogLog debug resource loader url loader getResource resource if url null return url catch Throwable LogLog warn TSTR LogLog debug resource url ClassLoader getSystemResource resource return url static String resolveName String resource Class clazz String fqcn clazz getName int index fqcn lastIndexOf if index fqcn fqcn substring index replace resource fqcn resource return resource', 'bug': '1'}
{'sequence': 'public class PropertyPrinter implements PropertyGetter PropertyCallback protected int numAppenders protected Hashtable appenderNames new Hashtable protected Hashtable layoutNames new Hashtable protected PrintWriter out protected boolean doCapitalize public PropertyPrinter PrintWriter out this out false public PropertyPrinter PrintWriter out boolean doCapitalize this out out this doCapitalize doCapitalize print out out flush protected String genAppName return numAppenders protected boolean isGenAppName String name if name length name charAt return false for int name length if name charAt name charAt return false return true public void print PrintWriter out printOptions out Category getRoot Enumeration cats Category getCurrentCategories while cats hasMoreElements printOptions out Category cats nextElement protected void printOptions PrintWriter out Category cat Enumeration appenders cat getAllAppenders Priority prio cat getPriority String appenderString prio null prio toString while appenders hasMoreElements Appender app Appender appenders nextElement String name if name String appenderNames get app null if name app getName null isGenAppName name name genAppName appenderNames put app name printOptions out app name if app getLayout null printOptions out app getLayout name appenderString name String catKey cat Category getRoot cat getName if appenderString out println catKey appenderString protected void printOptions PrintWriter out Object obj String fullname out println fullname obj getClass getName PropertyGetter getProperties obj this fullname public void foundProperty Object obj String prefix String name Object value if obj instanceof Appender equals name return if doCapitalize name capitalize name out println prefix name value toString public static String capitalize String name if Character isLowerCase name charAt if name length Character isLowerCase name charAt StringBuffer newname new StringBuffer name newname setCharAt Character toUpperCase name charAt return newname toString return name public static void main String args new PropertyPrinter new PrintWriter System out', 'bug': '0'}
{'sequence': 'public class SpacePad static public void main String args StringBuffer sbuf new StringBuffer for int sbuf setLength sbuf append spacePad sbuf sbuf append System out println sbuf toString sbuf setLength sbuf append spacePad sbuf sbuf append System out println sbuf toString static public void spacePad StringBuffer sbuf int length while length sbuf append SPACES length for int if length sbuf append SPACES', 'bug': '0'}
{'sequence': 'public class RendererMap Hashtable map static ObjectRenderer defaultRenderer new DefaultRenderer public RendererMap map new Hashtable public String findAndRender Object if null return null else return get getClass doRender public ObjectRenderer get Object if null return null else return get getClass public ObjectRenderer get Class clazz ObjectRenderer null for Class clazz null getSuperclass ObjectRenderer map get if null return searchInterfaces if null return return defaultRenderer ObjectRenderer searchInterfaces Class ObjectRenderer ObjectRenderer map get if null return else Class ia getInterfaces for int ia length searchInterfaces ia if null return return null public ObjectRenderer getDefaultRenderer return defaultRenderer public void clear map clear public void put Class clazz ObjectRenderer or map put clazz or', 'bug': '0'}
{'sequence': 'public class SysoutConfigurator implements Configurator public void doConfigure java net URL url Hierarchy hierarchy Category getRoot addAppender new ConsoleAppender new SimpleLayout ConsoleAppender SYSTEM_OUT', 'bug': '1'}
{'sequence': 'public class CyclicBuffer LoggingEvent ea int first int last int numElems int maxSize public CyclicBuffer int maxSize throws IllegalArgumentException if maxSize throw new IllegalArgumentException maxSize this maxSize maxSize ea new LoggingEvent maxSize first last numElems public void add LoggingEvent event ea last event if last maxSize last if numElems maxSize numElems else if first maxSize first public LoggingEvent get int if numElems return null return ea first maxSize public int getMaxSize return maxSize public LoggingEvent get LoggingEvent null if numElems numElems ea first ea first null if first maxSize first return public int length return numElems public void resize int newSize if newSize throw new IllegalArgumentException newSize if newSize numElems LoggingEvent temp new LoggingEvent newSize int loopLen newSize numElems newSize numElems for int loopLen temp ea first ea first null if first numElems first ea temp first numElems loopLen maxSize newSize if loopLen newSize last else last loopLen', 'bug': '0'}
{'sequence': 'class DefaultCategoryFactory implements CategoryFactory DefaultCategoryFactory public Category makeNewCategoryInstance String name return new Category name', 'bug': '0'}
{'sequence': 'public class StressAsyncAppender extends Thread static Category root Category getRoot static Random random new Random static final int LOOP_LENGTH static final int BRANCHING_FACTOR static int maxThreads static long msgCounter static int threadCounter static double LOG_2 Math log static Object lock new Object public static void main String args if args length usage DOMConfigurator configure try maxThreads Integer parseInt args catch java lang NumberFormatException System err println usage while true synchronized lock createChildren randomInt BRANCHING_FACTOR try root debug lock wait root debug catch InterruptedException root warn static void usage System err println StressAsyncAppender class getName System exit public StressAsyncAppender public void run int loopLength StressAsyncAppender randomInt LOOP_LENGTH root debug loopLength int createIndex loopLength for int loopLength if createIndex createChildren randomInt BRANCHING_FACTOR synchronized lock root debug msgCounter synchronized lock StressAsyncAppender threadCounter root debug threadCounter if StressAsyncAppender threadCounter root debug public static void createChildren int if return synchronized lock maxThreadsConstrained root debug for int root debug threadCounter new StressAsyncAppender start static public int maxThreadsConstrained int int maxAllowed StressAsyncAppender maxThreads StressAsyncAppender threadCounter return maxAllowed maxAllowed public static int randomInt int int random nextInt return public void delay long millis try Thread currentThread sleep millis catch Exception', 'bug': '0'}
{'sequence': 'public class AsyncAppender extends AppenderSkeleton implements AppenderAttachable public static final String LOCATION_INFO_OPTION public static final String BUFFER_SIZE_OPTION public static final int DEFAULT_BUFFER_SIZE BoundedFIFO bf new BoundedFIFO DEFAULT_BUFFER_SIZE AppenderAttachableImpl aai Dispatcher dispatcher boolean locationInfo false boolean interruptedWarningMessage false public AsyncAppender aai new AppenderAttachableImpl dispatcher new Dispatcher bf this dispatcher start public void addAppender Appender newAppender synchronized aai aai addAppender newAppender public void append LoggingEvent event event getNDC event getThreadName if locationInfo event getLocationInformation synchronized bf while bf isFull try bf wait catch InterruptedException if interruptedWarningMessage interruptedWarningMessage true LogLog warn else LogLog warn bf put event if bf wasEmpty bf notify public void close synchronized this return closed true dispatcher close try dispatcher join catch InterruptedException LogLog error dispatcher null bf null public Enumeration getAllAppenders synchronized aai return aai getAllAppenders public Appender getAppender String name synchronized aai return aai getAppender name public boolean getLocationInfo return locationInfo public boolean requiresLayout return false public void removeAllAppenders synchronized aai aai removeAllAppenders public void removeAppender Appender appender synchronized aai aai removeAppender appender public void removeAppender String name synchronized aai aai removeAppender name public void setLocationInfo boolean flag locationInfo flag public void setBufferSize int size bf resize size public int getBufferSize return bf getMaxSize public String getOptionStrings return OptionConverter concatanateArrays super getOptionStrings new String LOCATION_INFO_OPTION BUFFER_SIZE_OPTION public void setOption String option String value if value null return super setOption option value if option equals LOCATION_INFO_OPTION locationInfo OptionConverter toBoolean value locationInfo else if option equals BUFFER_SIZE_OPTION int newSize OptionConverter toInt value DEFAULT_BUFFER_SIZE bf resize newSize class Dispatcher extends Thread BoundedFIFO bf AppenderAttachableImpl aai boolean interrupted false AsyncAppender container Dispatcher BoundedFIFO bf AsyncAppender container this bf bf this container container this aai container aai this setPriority Thread MIN_PRIORITY this setName getName void close synchronized bf interrupted true if bf length bf notify public void run LoggingEvent event while true synchronized bf if bf length if interrupted return try bf wait catch InterruptedException LogLog error break event bf get if bf wasFull bf notify synchronized container aai if aai null event null aai appendLoopOnAppenders event', 'bug': '1'}
{'sequence': 'public class DateTimeDateFormat extends AbsoluteTimeDateFormat String shortMonths public DateTimeDateFormat super shortMonths new DateFormatSymbols getShortMonths public DateTimeDateFormat TimeZone timeZone this setCalendar Calendar getInstance timeZone public StringBuffer format Date date StringBuffer sbuf FieldPosition fieldPosition calendar setTime date int day calendar get Calendar DAY_OF_MONTH if day sbuf append sbuf append day sbuf append sbuf append shortMonths calendar get Calendar MONTH sbuf append int year calendar get Calendar YEAR sbuf append year sbuf append return super format date sbuf fieldPosition public Date parse java lang String ParsePosition pos return null', 'bug': '0'}
{'sequence': 'public class Loop public static void main String args Category root Category getRoot Category cat Category getInstance Loop class getName if args length usage String host args int port try port Integer valueOf args intValue catch NumberFormatException usage args SocketAppender sa new SocketAppender host port Layout layout new PatternLayout Appender so new ConsoleAppender layout root addAppender sa root addAppender so int while true NDC push cat debug root info NDC pop static void usage String msg System err println msg System err println Loop class getName System exit', 'bug': '0'}
{'sequence': 'public class ThreadGroupRenderer implements ObjectRenderer public ThreadGroupRenderer public String doRender Object if instanceof ThreadGroup StringBuffer sbuf new StringBuffer ThreadGroup tg ThreadGroup sbuf append sbuf append tg getName sbuf append sbuf append tg getMaxPriority sbuf append Thread new Thread tg activeCount tg enumerate for int length sbuf append Layout LINE_SEP sbuf append sbuf append getName sbuf append sbuf append getPriority sbuf append sbuf append isDaemon sbuf append return sbuf toString else return toString', 'bug': '0'}
{'sequence': 'public class SyslogMin static Category CAT Category getInstance SyslogMin class getName public static void main String argv if argv length ProgramInit argv else Usage test static void Usage String msg System err println msg System err println SyslogMin class System exit static void ProgramInit String configFile int port PropertyConfigurator configure configFile static void test String host NDC push host int CAT debug CAT info CAT warn CAT error CAT log Priority FATAL CAT debug new Exception', 'bug': '0'}
{'sequence': 'public interface ErrorCode public final int GENERIC_FAILURE public final int WRITE_FAILURE public final int FLUSH_FAILURE public final int CLOSE_FAILURE public final int FILE_OPEN_FAILURE public final int MISSING_LAYOUT public final int ADDRESS_PARSE_FAILURE', 'bug': '0'}
{'sequence': 'public class RelativeTimeDateFormat extends DateFormat protected final long startTime public RelativeTimeDateFormat this startTime System currentTimeMillis public StringBuffer format Date date StringBuffer sbuf FieldPosition fieldPosition return sbuf append date getTime startTime public Date parse java lang String ParsePosition pos return null', 'bug': '0'}
{'sequence': 'public class RollingFileAppenderBeanInfo extends SimpleBeanInfo private PropertyDescriptor props public RollingFileAppenderBeanInfo Class clazz RollingFileAppender class try BeanInfo bi Introspector getBeanInfo clazz Introspector IGNORE_ALL_BEANINFO props bi getPropertyDescriptors if props null for int props length if props getName equals Method clazz getMethod new Class String class props new PropertyDescriptor null Introspector flushFromCaches RollingFileAppender class catch IntrospectionException LogLog error catch NoSuchMethodException LogLog error public PropertyDescriptor getPropertyDescriptors return props', 'bug': '0'}
{'sequence': 'public class AbsoluteTimeDateFormat extends DateFormat public final static String ABS_TIME_DATE_FORMAT public final static String DATE_AND_TIME_DATE_FORMAT public final static String ISO8601_DATE_FORMAT public AbsoluteTimeDateFormat setCalendar Calendar getInstance public AbsoluteTimeDateFormat TimeZone timeZone setCalendar Calendar getInstance timeZone public StringBuffer format Date date StringBuffer sbuf FieldPosition fieldPosition calendar setTime date int hour calendar get Calendar HOUR_OF_DAY if hour sbuf append sbuf append hour sbuf append int mins calendar get Calendar MINUTE if mins sbuf append sbuf append mins sbuf append int secs calendar get Calendar SECOND if secs sbuf append sbuf append secs sbuf append int millis calendar get Calendar MILLISECOND if millis sbuf append if millis sbuf append sbuf append millis return sbuf public Date parse String ParsePosition pos return null', 'bug': '0'}
{'sequence': 'public class DelayedLoop static Category cat Category getInstance DelayedLoop class static int loopLength public static void main String argv if argv length init argv else usage test static void usage String msg System err println msg System err println DelayedLoop class getName System exit static void init String configFile if configFile endsWith DOMConfigurator configureAndWatch configFile else PropertyConfigurator configureAndWatch configFile static void test int while true cat debug try Thread currentThread sleep catch Exception', 'bug': '0'}
{'sequence': 'public interface ObjectRenderer public String doRender Object', 'bug': '0'}
{'sequence': 'public class SimpleSocketServer static Category cat Category getInstance SimpleSocketServer class getName static int port public static void main String argv if argv length init argv argv else usage try cat info port ServerSocket serverSocket new ServerSocket port while true cat info Socket socket serverSocket accept cat info socket getInetAddress cat info new Thread new SocketNode socket Category getDefaultHierarchy start catch Exception printStackTrace static void usage String msg System err println msg System err println SimpleSocketServer class getName System exit static void init String portStr String configFile try port Integer parseInt portStr catch java lang NumberFormatException printStackTrace usage portStr PropertyConfigurator configure configFile', 'bug': '1'}
{'sequence': 'public class SocketNode implements Runnable Socket socket Hierarchy hierarchy ObjectInputStream ois static Category cat Category getInstance SocketNode class getName public SocketNode Socket socket Hierarchy hierarchy this socket socket this hierarchy hierarchy try ois new ObjectInputStream socket getInputStream catch Exception cat error socket public void run LoggingEvent event Category remoteCategory try while true event LoggingEvent ois readObject remoteCategory hierarchy getInstance event categoryName event category remoteCategory if event priority isGreaterOrEqual remoteCategory getChainedPriority remoteCategory callAppenders event catch java io EOFException cat info catch java net SocketException cat info catch Exception cat error try ois close catch Exception cat info', 'bug': '1'}
{'sequence': 'public class ListVsVector static int RUN_LENGTH static Vector new Vector static Chain head static String tmp static public void main String args addElement addElement addElement addElement addElement Chain new Chain head next new Chain next next new Chain next next new Chain next next new Chain double loopChain System out println loopVector System out println static double loopChain long before System currentTimeMillis Chain for int RUN_LENGTH head while null tmp next return System currentTimeMillis before RUN_LENGTH static double loopVector long before System currentTimeMillis int size size for int RUN_LENGTH for int size tmp String elementAt return System currentTimeMillis before RUN_LENGTH static class Chain public String public Chain next Chain String this void setNext Chain next', 'bug': '0'}
{'sequence': 'public class MultipleAppenders public static void main String argv PropertyConfigurator configure argv Category root Category getRoot Enumeration e1 root getAllAppenders Vector new Vector while e1 hasMoreElements Appender Appender e1 nextElement addElement String appenderName getName if root getAppender appenderName System out println appenderName System exit root addAppender root addAppender null Enumeration e2 root getAllAppenders for int size if elementAt e2 nextElement if e2 hasMoreElements System out println System exit System out println', 'bug': '0'}
{'sequence': 'public interface CategoryFactory public Category makeNewCategoryInstance String name', 'bug': '0'}
{'sequence': 'public class PatternParser private static final char ESCAPE_CHAR private static final int LITERAL_STATE private static final int CONVERTER_STATE private static final int MINUS_STATE private static final int DOT_STATE private static final int MIN_STATE private static final int MAX_STATE static final int FULL_LOCATION_CONVERTER static final int METHOD_LOCATION_CONVERTER static final int CLASS_LOCATION_CONVERTER static final int LINE_LOCATION_CONVERTER static final int FILE_LOCATION_CONVERTER static final int RELATIVE_TIME_CONVERTER static final int THREAD_CONVERTER static final int PRIORITY_CONVERTER static final int NDC_CONVERTER static final int MESSAGE_CONVERTER int state protected StringBuffer currentLiteral new StringBuffer protected int patternLength protected int PatternConverter head PatternConverter tail protected FormattingInfo formattingInfo new FormattingInfo protected String pattern public PatternParser String pattern this pattern pattern patternLength pattern length state LITERAL_STATE private void addToList PatternConverter pc if head null head tail pc else tail next pc tail pc private String extractOption if patternLength pattern charAt int end pattern indexOf if end String pattern substring end end return return null private int extractPrecisionOption String opt extractOption int if opt null try Integer parseInt opt if LogLog error opt catch NumberFormatException LogLog error opt return public PatternConverter parse char while patternLength pattern charAt switch state case LITERAL_STATE if patternLength currentLiteral append continue if ESCAPE_CHAR switch pattern charAt case ESCAPE_CHAR currentLiteral append break case currentLiteral append Layout LINE_SEP break default if currentLiteral length addToList new LiteralPatternConverter currentLiteral toString currentLiteral setLength state CONVERTER_STATE formattingInfo reset else currentLiteral append break case CONVERTER_STATE currentLiteral append switch case formattingInfo leftAlign true break case state DOT_STATE break default if formattingInfo min state MIN_STATE else finalizeConverter break case MIN_STATE currentLiteral append if formattingInfo min formattingInfo min else if state DOT_STATE else finalizeConverter break case DOT_STATE currentLiteral append if formattingInfo max state MAX_STATE else LogLog error state LITERAL_STATE break case MAX_STATE currentLiteral append if formattingInfo max formattingInfo max else finalizeConverter state LITERAL_STATE break if currentLiteral length addToList new LiteralPatternConverter currentLiteral toString return head protected void finalizeConverter char PatternConverter pc null switch case pc new CategoryPatternConverter formattingInfo extractPrecisionOption currentLiteral setLength break case pc new ClassNamePatternConverter formattingInfo extractPrecisionOption currentLiteral setLength break case String dateFormatStr AbsoluteTimeDateFormat ISO8601_DATE_FORMAT DateFormat df String dOpt extractOption if dOpt null dateFormatStr dOpt if dateFormatStr equalsIgnoreCase AbsoluteTimeDateFormat ISO8601_DATE_FORMAT df new ISO8601DateFormat else if dateFormatStr equalsIgnoreCase AbsoluteTimeDateFormat ABS_TIME_DATE_FORMAT df new AbsoluteTimeDateFormat else if dateFormatStr equalsIgnoreCase AbsoluteTimeDateFormat DATE_AND_TIME_DATE_FORMAT df new DateTimeDateFormat else try df new SimpleDateFormat dateFormatStr catch IllegalArgumentException LogLog error dateFormatStr df DateFormat OptionConverter instantiateByClassName DateFormat class null pc new DatePatternConverter formattingInfo df currentLiteral setLength break case pc new LocationPatternConverter formattingInfo FILE_LOCATION_CONVERTER currentLiteral setLength break case pc new LocationPatternConverter formattingInfo FULL_LOCATION_CONVERTER currentLiteral setLength break case pc new LocationPatternConverter formattingInfo LINE_LOCATION_CONVERTER currentLiteral setLength break case pc new BasicPatternConverter formattingInfo MESSAGE_CONVERTER currentLiteral setLength break case pc new LocationPatternConverter formattingInfo METHOD_LOCATION_CONVERTER currentLiteral setLength break case pc new BasicPatternConverter formattingInfo PRIORITY_CONVERTER currentLiteral setLength break case pc new BasicPatternConverter formattingInfo RELATIVE_TIME_CONVERTER currentLiteral setLength break case pc new BasicPatternConverter formattingInfo THREAD_CONVERTER currentLiteral setLength break case pc new BasicPatternConverter formattingInfo NDC_CONVERTER currentLiteral setLength break default LogLog error pc new LiteralPatternConverter currentLiteral toString currentLiteral setLength addConverter pc protected void addConverter PatternConverter pc currentLiteral setLength addToList pc state LITERAL_STATE formattingInfo reset private static class BasicPatternConverter extends PatternConverter int type BasicPatternConverter FormattingInfo formattingInfo int type super formattingInfo this type type public String convert LoggingEvent event switch type case RELATIVE_TIME_CONVERTER return Long toString event timeStamp LoggingEvent getStartTime case THREAD_CONVERTER return event getThreadName case PRIORITY_CONVERTER return event priority toString case NDC_CONVERTER return event getNDC case MESSAGE_CONVERTER return event getRenderedMessage default return null private static class LiteralPatternConverter extends PatternConverter private String literal LiteralPatternConverter String value literal value public final void format StringBuffer sbuf LoggingEvent event sbuf append literal public String convert LoggingEvent event return literal private static class DatePatternConverter extends PatternConverter private DateFormat df private Date date DatePatternConverter FormattingInfo formattingInfo DateFormat df super formattingInfo date new Date this df df public String convert LoggingEvent event date setTime event timeStamp String converted null try converted df format date catch Exception ex LogLog error ex return converted private class LocationPatternConverter extends PatternConverter int type LocationPatternConverter FormattingInfo formattingInfo int type super formattingInfo this type type public String convert LoggingEvent event LocationInfo locationInfo event getLocationInformation switch type case FULL_LOCATION_CONVERTER return locationInfo fullInfo case METHOD_LOCATION_CONVERTER return locationInfo getMethodName case LINE_LOCATION_CONVERTER return locationInfo getLineNumber case FILE_LOCATION_CONVERTER return locationInfo getFileName default return null private static abstract class NamedPatternConverter extends PatternConverter int precision NamedPatternConverter FormattingInfo formattingInfo int precision super formattingInfo this precision precision abstract String getFullyQualifiedName LoggingEvent event public String convert LoggingEvent event String getFullyQualifiedName event if precision return else int len length int end len for int precision end lastIndexOf end if end return return substring end len private class ClassNamePatternConverter extends NamedPatternConverter ClassNamePatternConverter FormattingInfo formattingInfo int precision super formattingInfo precision String getFullyQualifiedName LoggingEvent event return event getLocationInformation getClassName private class CategoryPatternConverter extends NamedPatternConverter CategoryPatternConverter FormattingInfo formattingInfo int precision super formattingInfo precision String getFullyQualifiedName LoggingEvent event return event categoryName', 'bug': '0'}
{'sequence': 'public class SocketServer static String GENERIC static String CONFIG_FILE_EXT static Category cat Category getInstance SocketServer class static SocketServer server static int port Hashtable hierarchyMap Hierarchy genericHierarchy File dir public static void main String argv if argv length init argv argv argv else usage try cat info port ServerSocket serverSocket new ServerSocket port while true cat info Socket socket serverSocket accept InetAddress inetAddress socket getInetAddress cat info inetAddress Hierarchy Hierarchy server hierarchyMap get inetAddress if null server configureHierarchy inetAddress cat info new Thread new SocketNode socket start catch Exception printStackTrace static void usage String msg System err println msg System err println SocketServer class getName System exit static void init String portStr String configFile String dirStr try port Integer parseInt portStr catch java lang NumberFormatException printStackTrace usage portStr PropertyConfigurator configure configFile File dir new File dirStr if dir isDirectory usage dirStr server new SocketServer dir public SocketServer File directory this dir directory hierarchyMap new Hashtable Hierarchy configureHierarchy InetAddress inetAddress cat info inetAddress String inetAddress toString int indexOf if cat warn inetAddress return genericHierarchy else String key substring File configFile new File dir key CONFIG_FILE_EXT if configFile exists Hierarchy new Hierarchy new RootCategory Priority DEBUG hierarchyMap put inetAddress new PropertyConfigurator doConfigure configFile getAbsolutePath return else cat warn configFile return genericHierarchy Hierarchy genericHierarchy if genericHierarchy null File new File dir GENERIC CONFIG_FILE_EXT if exists genericHierarchy new Hierarchy new RootCategory Priority DEBUG new PropertyConfigurator doConfigure getAbsolutePath genericHierarchy else cat warn genericHierarchy Category getDefaultHierarchy return genericHierarchy', 'bug': '1'}
{'sequence': 'public class PropertySetter protected Object obj protected PropertyDescriptor props public PropertySetter Object obj this obj obj protected void introspect try BeanInfo bi Introspector getBeanInfo obj getClass props bi getPropertyDescriptors catch IntrospectionException ex LogLog error obj ex getMessage props new PropertyDescriptor public static void setProperties Object obj Properties properties String prefix new PropertySetter obj setProperties properties prefix public void setProperties Properties properties String prefix int len prefix length for Enumeration properties keys hasMoreElements String key String nextElement if key startsWith prefix if key indexOf len continue String value OptionConverter findAndSubst key properties key key substring len if equals key obj instanceof Appender continue setProperty key value activate public void setProperty String name String value if value null return name Introspector decapitalize name PropertyDescriptor prop getPropertyDescriptor name if prop null LogLog warn name obj getClass getName else try setProperty prop name value catch PropertySetterException ex LogLog warn name value ex getMessage public void setProperty PropertyDescriptor prop String name String value throws PropertySetterException Method setter prop getWriteMethod if setter null throw new PropertySetterException Class paramTypes setter getParameterTypes if paramTypes length throw new PropertySetterException Object arg try arg convertArg value paramTypes catch Throwable throw new PropertySetterException paramTypes if arg null throw new PropertySetterException paramTypes LogLog debug name arg try setter invoke obj new Object arg catch Exception ex throw new PropertySetterException ex protected Object convertArg String val Class type if val null return null String val trim if String class isAssignableFrom type return val else if Integer TYPE isAssignableFrom type return new Integer else if Long TYPE isAssignableFrom type return new Long else if Boolean TYPE isAssignableFrom type if equalsIgnoreCase return Boolean TRUE else if equalsIgnoreCase return Boolean FALSE else if Priority class isAssignableFrom type return OptionConverter toPriority Priority DEBUG return null protected PropertyDescriptor getPropertyDescriptor String name if props null introspect for int props length if name equals props getName return props return null public void activate if obj instanceof OptionHandler OptionHandler obj activateOptions', 'bug': '1'}
{'sequence': 'public class ISO8601DateFormat extends AbsoluteTimeDateFormat public ISO8601DateFormat public ISO8601DateFormat TimeZone timeZone super timeZone public StringBuffer format Date date StringBuffer sbuf FieldPosition fieldPosition calendar setTime date int year calendar get Calendar YEAR sbuf append year String month switch calendar get Calendar MONTH case Calendar JANUARY month break case Calendar FEBRUARY month break case Calendar MARCH month break case Calendar APRIL month break case Calendar MAY month break case Calendar JUNE month break case Calendar JULY month break case Calendar AUGUST month break case Calendar SEPTEMBER month break case Calendar OCTOBER month break case Calendar NOVEMBER month break case Calendar DECEMBER month break default month break sbuf append month int day calendar get Calendar DAY_OF_MONTH if day sbuf append sbuf append day sbuf append return super format date sbuf fieldPosition public Date parse java lang String ParsePosition pos return null', 'bug': '0'}
{'sequence': 'public class AppenderAttachableImpl implements AppenderAttachable protected Vector appenderList public void addAppender Appender newAppender if newAppender null return if appenderList null appenderList new Vector if appenderList contains newAppender appenderList addElement newAppender public int appendLoopOnAppenders LoggingEvent event int size Appender appender if appenderList null size appenderList size for int size appender Appender appenderList elementAt appender doAppend event return size public Enumeration getAllAppenders if appenderList null return null else return appenderList elements public Appender getAppender String name if appenderList null name null return null int size appenderList size Appender appender for int size appender Appender appenderList elementAt if name equals appender getName return appender return null public void removeAllAppenders if appenderList null int len appenderList size for int len Appender Appender appenderList elementAt close appenderList removeAllElements appenderList null public void removeAppender Appender appender if appender null appenderList null return appenderList removeElement appender public void removeAppender String name if name null appenderList null return int size appenderList size for int size if name equals Appender appenderList elementAt getName appenderList removeElementAt break', 'bug': '0'}
{'sequence': 'public abstract class Layout implements OptionHandler public final static String LINE_SEP System getProperty public final static int LINE_SEP_LEN LINE_SEP length abstract public String format LoggingEvent event public String getContentType return public String getHeader return null public String getFooter return null abstract public boolean ignoresThrowable', 'bug': '0'}
{'sequence': 'class Base64 final static int MAX_LINE static byte asciiEncoding static char charEnc new char static for int charEnc char charEnc char for int charEnc char charEnc charEnc static String toString byte inbuf return toString inbuf inbuf length static String toString byte inbuf int offset int length StringBuffer output new StringBuffer length int in char out new char int offset boolean ended false int last offset length int int bitsRead while ended in bitsRead for if last ended true break in in inbuf bitsRead while bitsRead bitsRead output append charEnc in bitsRead if bitsRead output append charEnc in output append else if bitsRead output append charEnc in output append return output toString public static void main String args byte inbuf new byte MAX_LINE while true try int read System in read inbuf MAX_LINE if read break System out println read System out println Base64 toString inbuf read catch Exception System out println', 'bug': '0'}
{'sequence': 'public class SyslogAppender extends AppenderSkeleton final static public int LOG_KERN final static public int LOG_USER final static public int LOG_MAIL final static public int LOG_DAEMON final static public int LOG_AUTH final static public int LOG_SYSLOG final static public int LOG_LPR final static public int LOG_NEWS final static public int LOG_UUCP final static public int LOG_CRON final static public int LOG_AUTHPRIV final static public int LOG_FTP final static public int LOG_LOCAL0 final static public int LOG_LOCAL1 final static public int LOG_LOCAL2 final static public int LOG_LOCAL3 final static public int LOG_LOCAL4 final static public int LOG_LOCAL5 final static public int LOG_LOCAL6 final static public int LOG_LOCAL7 public static final String SYSLOG_HOST_OPTION public static final String FACILITY_OPTION public static final String FACILITY_PRINTING_OPTION protected static final int SYSLOG_HOST_OI protected static final int FACILITY_OI static final String TAB int syslogFacility LOG_USER String facilityStr boolean facilityPrinting false SyslogQuietWriter sqw String syslogHost public SyslogAppender this initSyslogFacilityStr public SyslogAppender Layout layout int syslogFacility this layout layout this syslogFacility syslogFacility this initSyslogFacilityStr public SyslogAppender Layout layout String syslogHost int syslogFacility this layout syslogFacility setSyslogHost syslogHost public String getOptionStrings return OptionConverter concatanateArrays super getOptionStrings new String SYSLOG_HOST_OPTION FACILITY_OPTION FACILITY_PRINTING_OPTION public void setOption String option String value if value null return super setOption option value if option equals SYSLOG_HOST_OPTION this setSyslogHost value else if option equals FACILITY_PRINTING_OPTION facilityPrinting OptionConverter toBoolean value facilityPrinting else if option equals FACILITY_OPTION this setFacility value synchronized public void close closed true sqw null private void initSyslogFacilityStr facilityStr getFacilityString this syslogFacility if facilityStr null System err println syslogFacility this syslogFacility LOG_USER facilityStr else facilityStr public static String getFacilityString int syslogFacility switch syslogFacility case LOG_KERN return case LOG_USER return case LOG_MAIL return case LOG_DAEMON return case LOG_AUTH return case LOG_SYSLOG return case LOG_LPR return case LOG_NEWS return case LOG_UUCP return case LOG_CRON return case LOG_AUTHPRIV return case LOG_FTP return case LOG_LOCAL0 return case LOG_LOCAL1 return case LOG_LOCAL2 return case LOG_LOCAL3 return case LOG_LOCAL4 return case LOG_LOCAL5 return case LOG_LOCAL6 return case LOG_LOCAL7 return default return null public static int getFacility String facilityName if facilityName null facilityName facilityName trim if equalsIgnoreCase facilityName return LOG_KERN else if equalsIgnoreCase facilityName return LOG_USER else if equalsIgnoreCase facilityName return LOG_MAIL else if equalsIgnoreCase facilityName return LOG_DAEMON else if equalsIgnoreCase facilityName return LOG_AUTH else if equalsIgnoreCase facilityName return LOG_SYSLOG else if equalsIgnoreCase facilityName return LOG_LPR else if equalsIgnoreCase facilityName return LOG_NEWS else if equalsIgnoreCase facilityName return LOG_UUCP else if equalsIgnoreCase facilityName return LOG_CRON else if equalsIgnoreCase facilityName return LOG_AUTHPRIV else if equalsIgnoreCase facilityName return LOG_FTP else if equalsIgnoreCase facilityName return LOG_LOCAL0 else if equalsIgnoreCase facilityName return LOG_LOCAL1 else if equalsIgnoreCase facilityName return LOG_LOCAL2 else if equalsIgnoreCase facilityName return LOG_LOCAL3 else if equalsIgnoreCase facilityName return LOG_LOCAL4 else if equalsIgnoreCase facilityName return LOG_LOCAL5 else if equalsIgnoreCase facilityName return LOG_LOCAL6 else if equalsIgnoreCase facilityName return LOG_LOCAL7 else return public void append LoggingEvent event if isAsSevereAsThreshold event priority return if sqw null errorHandler error this name return String buffer facilityPrinting facilityStr layout format event sqw setPriority event priority getSyslogEquivalent sqw write buffer String event getThrowableStrRep if null int len length if len sqw write for int len sqw write TAB substring public void activateOptions public boolean requiresLayout return true public void setSyslogHost String syslogHost this sqw new SyslogQuietWriter new SyslogWriter syslogHost syslogFacility errorHandler this syslogHost syslogHost public String getSyslogHost return syslogHost public void setFacility String facilityName if facilityName null return syslogFacility getFacility facilityName if syslogFacility System err println facilityName syslogFacility LOG_USER this initSyslogFacilityStr if sqw null sqw setSyslogFacility this syslogFacility public String getFacility return getFacilityString syslogFacility public void setFacilityPrinting boolean on facilityPrinting on public boolean getFacilityPrinting return facilityPrinting', 'bug': '1'}
{'sequence': 'public class SimpleLayout extends Layout StringBuffer sbuf new StringBuffer public SimpleLayout public String getOptionStrings return new String public void setOption String option String value public void activateOptions public String format LoggingEvent event sbuf setLength sbuf append event priority toString sbuf append sbuf append event getRenderedMessage sbuf append LINE_SEP return sbuf toString public boolean ignoresThrowable return true', 'bug': '0'}
{'sequence': 'public class ConcatVsArray static void Usage System err println System exit public static void main String args if args length Usage String s1 args String s2 args int runLength try runLength Integer parseInt args catch java lang NumberFormatException System err println Usage double micros String sa long before new Date getTime for int runLength sa new String s1 s2 micros new Date getTime before runLength System out println micros String before new Date getTime for int runLength s1 s2 micros new Date getTime before runLength System out println micros', 'bug': '0'}
{'sequence': 'public class NTMin static Category cat Category getInstance NTMin class getName public static void main String argv init test static void Usage String msg System err println msg System err println NTMin class System exit static void init BasicConfigurator configure new NTEventLogAppender static void test String host NDC push host int cat debug cat info cat warn cat error cat log Priority FATAL cat debug new Exception', 'bug': '0'}
{'sequence': 'public class QuietWriter extends FilterWriter protected ErrorHandler errorHandler public QuietWriter Writer writer ErrorHandler errorHandler super writer setErrorHandler errorHandler public void write String string try out write string catch IOException errorHandler error string ErrorCode WRITE_FAILURE public void flush try out flush catch IOException errorHandler error ErrorCode FLUSH_FAILURE public void setErrorHandler ErrorHandler eh if eh null throw new IllegalArgumentException else this errorHandler eh', 'bug': '0'}
{'sequence': 'public class PatternLayout extends Layout final static public String CONVERSION_PATTERN_OPTION public final static String DEFAULT_CONVERSION_PATTERN public final static String TTCC_CONVERSION_PATTERN protected final int BUF_SIZE protected final int MAX_CAPACITY private StringBuffer sbuf new StringBuffer BUF_SIZE private String pattern private PatternConverter head private String timezone public PatternLayout this DEFAULT_CONVERSION_PATTERN public PatternLayout String pattern this pattern pattern head createPatternParser pattern null DEFAULT_CONVERSION_PATTERN pattern parse public String getOptionStrings return new String CONVERSION_PATTERN_OPTION public void setOption String option String value if value null return if option equalsIgnoreCase CONVERSION_PATTERN_OPTION pattern value head createPatternParser value parse public void setConversionPattern String conversionPattern pattern conversionPattern head createPatternParser conversionPattern parse public String getConversionPattern return pattern public void activateOptions public boolean ignoresThrowable return true protected PatternParser createPatternParser String pattern return new PatternParser pattern public String format LoggingEvent event if sbuf capacity MAX_CAPACITY sbuf new StringBuffer BUF_SIZE else sbuf setLength PatternConverter head while null format sbuf event next return sbuf toString', 'bug': '1'}
{'sequence': 'public abstract class FileWatchdog extends Thread static final public long DEFAULT_DELAY protected String filename protected long delay DEFAULT_DELAY File file long lastModif boolean warnedAlready false boolean interrupted false protected FileWatchdog String filename this filename filename file new File filename setDaemon true checkAndConfigure public void setDelay long delay this delay delay abstract protected void doOnChange protected void checkAndConfigure boolean fileExists try fileExists file exists catch SecurityException LogLog warn filename return if fileExists doOnChange warnedAlready false else if warnedAlready LogLog debug filename warnedAlready true public void run while interrupted try Thread currentThread sleep delay catch InterruptedException checkAndConfigure', 'bug': '0'}
{'sequence': 'public class Hierarchy static final int DISABLE_OFF static final int DISABLE_OVERRIDE private CategoryFactory defaultFactory Hashtable ht Category root RendererMap rendererMap int disable boolean emittedNoAppenderWarning false boolean emittedNoResourceBundleWarning false public Hierarchy Category root ht new Hashtable this root root disable DISABLE_OFF this root setHierarchy this rendererMap new RendererMap defaultFactory new DefaultCategoryFactory public void addRenderer Class classToRender ObjectRenderer or rendererMap put classToRender or public void clear ht clear public Category exists String name Object ht get new CategoryKey name if instanceof Category return Category else return null public void disable String priorityStr if disable DISABLE_OVERRIDE Priority Priority toPriority priorityStr null if null disable level else LogLog warn priorityStr public void disable Priority if disable DISABLE_OVERRIDE null disable level public void disableAll disable Priority FATAL public void disableDebug disable Priority DEBUG public void disableInfo disable Priority INFO public void enableAll disable DISABLE_OFF public void overrideAsNeeded String override if override null LogLog debug override if OptionConverter toBoolean override true LogLog debug disable DISABLE_OVERRIDE public Category getInstance String name return getInstance name defaultFactory public Category getInstance String name CategoryFactory factory CategoryKey key new CategoryKey name Category category synchronized ht Object ht get key if null category factory makeNewCategoryInstance name category setHierarchy this ht put key category updateParents category return category else if instanceof Category return Category else if instanceof ProvisionNode category factory makeNewCategoryInstance name category setHierarchy this ht put key category updateChildren ProvisionNode category updateParents category return category else public Enumeration getCurrentCategories Vector new Vector ht size Enumeration elems ht elements while elems hasMoreElements Object elems nextElement if instanceof Category addElement return elements public boolean isDisabled int level return disable level public RendererMap getRendererMap return rendererMap public Category getRoot return root public void resetConfiguration getRoot setPriority Priority DEBUG root setResourceBundle null disable Hierarchy DISABLE_OFF synchronized ht Enumeration cats getCurrentCategories while cats hasMoreElements Category Category cats nextElement setPriority null setAdditivity true setResourceBundle null rendererMap clear public void setCategoryFactory CategoryFactory factory if factory null defaultFactory factory public void setDisableOverride String override if OptionConverter toBoolean override true LogLog debug disable DISABLE_OVERRIDE public void shutdown Category root getRoot root closeNestedAppenders synchronized ht Enumeration cats this getCurrentCategories while cats hasMoreElements Category Category cats nextElement closeNestedAppenders root removeAllAppenders cats this getCurrentCategories while cats hasMoreElements Category Category cats nextElement removeAllAppenders final private void updateParents Category cat String name cat name int length name length boolean parentFound false for int name lastIndexOf length name lastIndexOf String substr name substring Object ht get key if null ProvisionNode pn new ProvisionNode cat ht put key pn else if instanceof Category parentFound true cat parent Category else if instanceof ProvisionNode ProvisionNode addElement cat else Exception new IllegalStateException getClass printStackTrace if parentFound cat parent root final private void updateChildren ProvisionNode pn Category cat final int last pn size for int last Category Category pn elementAt if parent name startsWith cat name cat parent parent parent cat', 'bug': '1'}
{'sequence': 'public class SMTPAppender extends AppenderSkeleton private String to private String from private String subject private String smtpHost private int bufferSize private boolean locationInfo false protected CyclicBuffer cb new CyclicBuffer bufferSize protected Message msg public static final String TO_OPTION public static final String FROM_OPTION public static final String SUBJECT_OPTION public static final String SMTP_HOST_OPTION public static final String BUFFER_SIZE_OPTION public static final String EVALUATOR_CLASS_OPTION public static final String LOCATION_INFO_OPTION protected TriggeringEventEvaluator evaluator public SMTPAppender this new DefaultEvaluator public SMTPAppender TriggeringEventEvaluator evaluator this evaluator evaluator public String getOptionStrings return OptionConverter concatanateArrays super getOptionStrings new String TO_OPTION FROM_OPTION SUBJECT_OPTION SMTP_HOST_OPTION BUFFER_SIZE_OPTION EVALUATOR_CLASS_OPTION LOCATION_INFO_OPTION public void activateOptions Properties props System getProperties if smtpHost null props put smtpHost Session session Session getDefaultInstance props null msg new MimeMessage session try if from null msg setFrom getAddress from else msg setFrom msg setRecipients Message RecipientType TO parseAddress to if subject null msg setSubject subject catch MessagingException LogLog error public void append LoggingEvent event if checkEntryConditions return event getThreadName event getNDC if locationInfo event getLocationInformation cb add event if evaluator isTriggeringEvent event sendBuffer protected boolean checkEntryConditions if this msg null errorHandler error return false if this evaluator null errorHandler error name return false if this layout null errorHandler error name return false return true synchronized public void close this closed true InternetAddress getAddress String addressStr try return new InternetAddress addressStr catch AddressException errorHandler error addressStr ErrorCode ADDRESS_PARSE_FAILURE return null InternetAddress parseAddress String addressStr try return InternetAddress parse addressStr true catch AddressException errorHandler error addressStr ErrorCode ADDRESS_PARSE_FAILURE return null public String getTo return to public boolean requiresLayout return true protected void sendBuffer try MimeBodyPart part new MimeBodyPart StringBuffer sbuf new StringBuffer String layout getHeader if null sbuf append int len cb length for int len LoggingEvent event cb get sbuf append layout format event if layout ignoresThrowable String event getThrowableStrRep if null for int length sbuf append layout getFooter if null sbuf append part setContent sbuf toString layout getContentType Multipart mp new MimeMultipart mp addBodyPart part msg setContent mp msg setSentDate new Date Transport send msg catch Exception LogLog error public String getEvaluatorClass return evaluator null null evaluator getClass getName public String getFrom return from public String getSubject return subject public void setOption String option String value if value null return super setOption option value if option equals TO_OPTION to value else if option equals FROM_OPTION from value else if option equals SMTP_HOST_OPTION smtpHost value else if option equals SUBJECT_OPTION subject value else if option equals EVALUATOR_CLASS_OPTION evaluator TriggeringEventEvaluator OptionConverter instantiateByClassName value TriggeringEventEvaluator class evaluator else if option equals BUFFER_SIZE_OPTION bufferSize OptionConverter toInt value bufferSize cb resize bufferSize else if option equals LOCATION_INFO_OPTION locationInfo OptionConverter toBoolean value locationInfo public void setFrom String from this from from public void setSubject String subject this subject subject public void setBufferSize int bufferSize this bufferSize bufferSize cb resize bufferSize public void setSMTPHost String smtpHost this smtpHost smtpHost public String getSMTPHost return smtpHost public void setTo String to this to to public int getBufferSize return bufferSize public void setEvaluatorClass String value evaluator TriggeringEventEvaluator OptionConverter instantiateByClassName value TriggeringEventEvaluator class evaluator public void setLocationInfo boolean locationInfo this locationInfo locationInfo public boolean getLocationInfo return locationInfo class DefaultEvaluator implements TriggeringEventEvaluator public boolean isTriggeringEvent LoggingEvent event return event priority isGreaterOrEqual Priority ERROR', 'bug': '1'}
{'sequence': 'public class SMTPMin static Category cat Category getInstance SMTPMin class public static void main String argv if argv length init argv else usage NDC push test static void usage String msg System err println msg System err println SMTPMin class getName System exit static void init String configFile PropertyConfigurator configure configFile static void test int cat debug cat debug new Exception cat info cat warn cat error cat log Priority FATAL Category shutdown Thread currentThread getThreadGroup list', 'bug': '0'}
{'sequence': 'public class NewVsSetLen static String static int BIGBUF_LEN static int SBUF_LEN static int RUN_LENGTH BIGBUF_LEN static char sbuf new char SBUF_LEN static char bigbuf new char BIGBUF_LEN for int SBUF_LEN sbuf char for int BIGBUF_LEN bigbuf char static public void main String args int for int len SBUF_LEN len BIGBUF_LEN len RUN_LENGTH System out println len for int second second System out println second RUN_LENGTH len int newBuffer len second System out print int setLen len second System out println if second second else second static double newBuffer int size int second long before System currentTimeMillis for int RUN_LENGTH StringBuffer buf new StringBuffer SBUF_LEN buf append sbuf sbuf length buf append bigbuf size buf toString for int second StringBuffer buf new StringBuffer SBUF_LEN buf append sbuf SBUF_LEN buf toString return System currentTimeMillis before RUN_LENGTH static double setLen int size int second long before System currentTimeMillis StringBuffer buf new StringBuffer SBUF_LEN for int RUN_LENGTH buf append sbuf sbuf length buf append bigbuf size buf toString buf setLength for int second buf append sbuf SBUF_LEN buf toString buf setLength return System currentTimeMillis before RUN_LENGTH', 'bug': '0'}
{'sequence': 'public abstract class PatternConverter public PatternConverter next int min int max boolean leftAlign false protected PatternConverter protected PatternConverter FormattingInfo fi min fi min max fi max leftAlign fi leftAlign abstract protected String convert LoggingEvent event public void format StringBuffer sbuf LoggingEvent String convert if null if min spacePad sbuf min return int len length if len max sbuf append substring len max else if len min if leftAlign sbuf append spacePad sbuf min len else spacePad sbuf min len sbuf append else sbuf append public void spacePad StringBuffer sbuf int length while length sbuf append SPACES length for int if length sbuf append SPACES', 'bug': '0'}
{'sequence': 'public class PrintProperties public static void main String args new PropertyPrinter new PrintWriter System out true', 'bug': '0'}
{'sequence': 'public interface AppenderAttachable public void addAppender Appender newAppender public Enumeration getAllAppenders public Appender getAppender String name void removeAllAppenders void removeAppender Appender appender void removeAppender String name', 'bug': '0'}
{'sequence': 'public class PropertyGetter protected static final Object NULL_ARG new Object protected Object obj protected PropertyDescriptor props public interface PropertyCallback void foundProperty Object obj String prefix String name Object value public PropertyGetter Object obj throws IntrospectionException BeanInfo bi Introspector getBeanInfo obj getClass props bi getPropertyDescriptors this obj obj public static void getProperties Object obj PropertyCallback callback String prefix try new PropertyGetter obj getProperties callback prefix catch IntrospectionException ex LogLog error obj ex public void getProperties PropertyCallback callback String prefix for int props length Method getter props getReadMethod if getter null continue if isHandledType getter getReturnType continue String name props getName try Object result getter invoke obj NULL_ARG if result null callback foundProperty obj prefix name result catch Exception ex LogLog warn name protected boolean isHandledType Class type return String class isAssignableFrom type Integer TYPE isAssignableFrom type Long TYPE isAssignableFrom type Boolean TYPE isAssignableFrom type Priority class isAssignableFrom type', 'bug': '1'}
{'sequence': 'public class JMSSink static public void main String args if args length usage String tcfBindingName args String topicBindingName args PropertyConfigurator configure args Category getDefaultHierarchy addRenderer Message class new MessageRenderer try Context ctx new InitialContext TopicConnectionFactory topicConnectionFactory topicConnectionFactory TopicConnectionFactory lookup ctx tcfBindingName TopicConnection topicConnection topicConnectionFactory createTopicConnection topicConnection start TopicSession topicSession topicConnection createTopicSession false Session AUTO_ACKNOWLEDGE Topic topic Topic ctx lookup topicBindingName TopicSubscriber topicSubscriber topicSession createDurableSubscriber topic LoggingEvent event Category remoteCategory while true ObjectMessage msg ObjectMessage topicSubscriber receive event LoggingEvent msg getObject remoteCategory Category getInstance event categoryName remoteCategory callAppenders event catch Exception LogLog error protected static Object lookup Context ctx String name throws NamingException try return ctx lookup name catch NameNotFoundException LogLog error name throw static void usage String msg System err println msg System err println JMSSink class getName System exit', 'bug': '1'}
{'sequence': 'public class LogLog public static final String DEBUG_KEY public static final String CONFIG_DEBUG_KEY protected static boolean debugEnabled false private static boolean quietMode false private static final String PREFIX private static final String ERR_PREFIX private static final String WARN_PREFIX static String key OptionConverter getSystemProperty DEBUG_KEY null if key null key OptionConverter getSystemProperty CONFIG_DEBUG_KEY null if key null debugEnabled OptionConverter toBoolean key true static public void setInternalDebugging boolean enabled debugEnabled enabled public static void debug String msg if debugEnabled quietMode System out println PREFIX msg public static void debug String msg Throwable if debugEnabled quietMode System out println PREFIX msg if null printStackTrace System out public static void error String msg if quietMode return System err println ERR_PREFIX msg public static void error String msg Throwable if quietMode return System err println ERR_PREFIX msg if null printStackTrace public static void setQuietMode boolean quietMode LogLog quietMode quietMode public static void warn String msg if quietMode return System err println WARN_PREFIX msg public static void warn String msg Throwable if quietMode return System err println WARN_PREFIX msg if null printStackTrace', 'bug': '0'}
{'sequence': 'public class Logging static int runLength static int delay static int burstLen static int DELAY_MULT burstLen static Category cat Category getInstance static void Usage String msg System err println msg System err println Logging class getName System exit public static void main String argv if argv length init argv argv null null else if argv length init argv argv argv argv else Usage NDC push double delta String msg if delay delta NoDelayLoop cat msg else delta DelayedLoop cat msg System out print int delta Category shutdown static void init String configFile String runLengthStr String delayStr String burstLenStr try runLength Integer parseInt runLengthStr if delayStr null delay Integer parseInt delayStr if delayStr null burstLen Integer parseInt burstLenStr DELAY_MULT burstLen catch java lang NumberFormatException printStackTrace DOMConfigurator configure configFile static double NoDelayLoop Category category String msg long before System currentTimeMillis for int runLength category info msg return System currentTimeMillis before runLength static double DelayedLoop Category category String msg long before System currentTimeMillis int Thread currentThread Thread currentThread for int runLength category info msg if burstLen try currentThread sleep delay catch Exception double actualTime System currentTimeMillis before runLength System out println actualTime return actualTime delay DELAY_MULT', 'bug': '1'}
{'sequence': 'public class Min public static void main String argv if argv length ProgramInit argv else Usage test1 static void Usage String msg System err println msg System err println System exit static void ProgramInit String layoutType Appender appender null Layout layout null if layoutType equals layout new SimpleLayout else if layoutType equals layout new TTCCLayout AbsoluteTimeDateFormat DATE_AND_TIME_DATE_FORMAT else Usage layoutType appender new ConsoleAppender layout BasicConfigurator configure appender static void test1 int Category ERR Category getInstance ERR setPriority Priority ERROR Category INF Category getInstance INF setPriority Priority INFO Category INF_ERR Category getInstance INF_ERR setPriority Priority ERROR Category DEB Category getInstance DEB setPriority Priority DEBUG Category INF_UNDEF Category getInstance Category INF_ERR_UNDEF Category getInstance Category UNDEF Category getInstance ERR error INF error INF warn INF info INF_UNDEF error INF_UNDEF warn INF_UNDEF info INF_ERR error INF_ERR_UNDEF log Priority FATAL INF_ERR_UNDEF error DEB error DEB warn DEB info DEB debug UNDEF error UNDEF warn UNDEF info UNDEF debug new Exception ERR warn ERR info ERR debug INF debug INF_UNDEF debug INF_ERR warn INF_ERR info INF_ERR debug INF_ERR_UNDEF warn INF_ERR_UNDEF info INF_ERR_UNDEF debug INF info', 'bug': '0'}
{'sequence': 'public class OptionConverter static String DELIM_START static char DELIM_STOP static int DELIM_START_LEN static int DELIM_STOP_LEN static StringBuffer sbuf new StringBuffer private OptionConverter public static String concatanateArrays String String int len length length String new String len System arraycopy length System arraycopy length length return public static String convertSpecialChars String char int len length StringBuffer sbuf new StringBuffer len int while len charAt if charAt if else if else if else if else if else if else if else if sbuf append return sbuf toString public static String getSystemProperty String key String def try return System getProperty key def LogLog debug key return def public static Object instantiateByKey Properties props String key Class superClass Object defaultValue String className findAndSubst key props if className null LogLog error key return defaultValue return OptionConverter instantiateByClassName className trim superClass defaultValue public static boolean toBoolean String value boolean dEfault if value null return dEfault String trimmedVal value trim if equalsIgnoreCase trimmedVal return true if equalsIgnoreCase trimmedVal return false return dEfault public static int toInt String value int dEfault if value null String value trim try return Integer valueOf intValue catch NumberFormatException LogLog error printStackTrace return dEfault public static Priority toPriority String value Priority defaultValue if value null return defaultValue int hashIndex value indexOf if hashIndex return Priority toPriority value defaultValue Priority result defaultValue String clazz value substring hashIndex String priorityName value substring hashIndex LogLog debug clazz priorityName try Class customPriority Class forName clazz Class paramTypes new Class String class org apache log4j Priority class java lang reflect Method toPriorityMethod customPriority getMethod paramTypes Object params new Object priorityName defaultValue Object toPriorityMethod invoke null params result Priority catch ClassNotFoundException LogLog warn clazz catch NoSuchMethodException LogLog warn clazz catch java lang reflect InvocationTargetException LogLog warn clazz catch ClassCastException LogLog warn clazz catch IllegalAccessException LogLog warn clazz catch Exception LogLog warn clazz priorityName return result public static long toFileSize String value long dEfault if value null return dEfault String value trim toUpperCase long multiplier int index if index indexOf multiplier substring index else if index indexOf multiplier substring index else if index indexOf multiplier substring index if null try return Long valueOf longValue multiplier catch NumberFormatException LogLog error LogLog error value return dEfault public static String findAndSubst String key Properties props String value props getProperty key if value null return null try return substVars value props catch IllegalArgumentException LogLog error value return value public static Object instantiateByClassName String className Class superClass Object defaultValue if className null try Class classObj Class forName className if superClass isAssignableFrom classObj LogLog error className superClass getName return defaultValue return classObj newInstance catch Exception LogLog error className return defaultValue public static String substVars String val Properties props throws IllegalArgumentException sbuf setLength int int while true val indexOf DELIM_START if if return val else sbuf append val substring val length return sbuf toString else sbuf append val substring val indexOf DELIM_STOP if throw new IllegalArgumentException val else DELIM_START_LEN String key val substring String replacement getSystemProperty key null if replacement null props null replacement props getProperty key if replacement null sbuf append replacement DELIM_STOP_LEN static public void selectAndConfigure URL url Hierarchy hierarchy String clazz url getRef Configurator configurator null if clazz null LogLog debug clazz configurator Configurator instantiateByClassName clazz Configurator class null if configurator null LogLog error clazz return else String filename url getFile if filename null filename endsWith try configurator new DOMConfigurator catch NoClassDefFoundError LogLog warn return else configurator new PropertyConfigurator configurator doConfigure url hierarchy', 'bug': '1'}
{'sequence': 'public class ThrowableInformation implements java io Serializable private transient Throwable throwable private String rep static private VectorWriter vw new VectorWriter public ThrowableInformation Throwable throwable this throwable throwable public Throwable getThrowable return throwable public String getThrowableStrRep if rep null return String rep clone else throwable printStackTrace vw rep vw toStringArray vw clear return rep class VectorWriter extends PrintWriter private Vector VectorWriter super new NullWriter new Vector public void println Object addElement toString public void println char addElement new String public void println String addElement public String toStringArray int len size String sa new String len for int len sa String elementAt return sa public void clear setSize class NullWriter extends Writer public void close public void flush public void write char cbuf int off int len', 'bug': '1'}
{'sequence': 'final public class RootCategory extends Category public RootCategory Priority priority super setPriority priority final public Priority getChainedPriority return priority final public void setPriority Priority priority if priority null LogLog error new Throwable else this priority priority', 'bug': '0'}
{'sequence': 'public class ShortSocketServer static Category cat Category getInstance ShortSocketServer class getName static int port public static void main String argv if argv length init argv argv else usage try LogLog debug port ServerSocket serverSocket new ServerSocket port LogLog debug Socket socket serverSocket accept LogLog debug socket getInetAddress LogLog debug SocketNode sn new SocketNode socket Category getDefaultHierarchy Thread new Thread sn start join catch Exception cat error static void usage String msg System err println msg System err println ShortSocketServer class getName System exit static void init String portStr String configFile try port Integer parseInt portStr catch java lang NumberFormatException printStackTrace usage portStr PropertyConfigurator configure configFile', 'bug': '0'}
{'sequence': 'public class FileAppender extends WriterAppender public static final String FILE_OPTION public static final String APPEND_OPTION protected boolean fileAppend true protected String fileName null protected boolean qwIsOurs false public FileAppender public FileAppender Layout layout OutputStream os super layout os public FileAppender Layout layout Writer writer super layout writer public FileAppender Layout layout String filename boolean append throws IOException this layout layout this setFile filename append public FileAppender Layout layout String filename throws IOException this layout filename true public void setFile String file String val file trim if val equalsIgnoreCase setWriter new OutputStreamWriter System out else if val equalsIgnoreCase setWriter new OutputStreamWriter System err else fileName val public boolean getAppend return fileAppend public String getFile return fileName public String getOptionStrings return OptionConverter concatanateArrays super getOptionStrings new String FILE_OPTION APPEND_OPTION public void setAppend boolean flag fileAppend flag public void activateOptions if fileName null try setFile fileName fileAppend catch java io IOException errorHandler error fileName fileAppend ErrorCode FILE_OPEN_FAILURE else LogLog warn name LogLog warn protected void closeFile if this qw null this qwIsOurs try this qw close catch java io IOException LogLog error qw public synchronized void setFile String fileName boolean append throws IOException reset this setQWForFiles new FileWriter fileName append this fileName fileName this fileAppend append this qwIsOurs true writeHeader public void setOption String key String value if value null return super setOption key value if key equalsIgnoreCase FILE_OPTION String val value trim if val equalsIgnoreCase setWriter new OutputStreamWriter System out else if val equalsIgnoreCase setWriter new OutputStreamWriter System err else fileName val else if key equalsIgnoreCase APPEND_OPTION fileAppend OptionConverter toBoolean value fileAppend protected void setQWForFiles Writer writer this qw new QuietWriter writer errorHandler protected void reset closeFile this fileName null if qwIsOurs super reset else this qw null', 'bug': '1'}
{'sequence': 'public class WriterAppender extends AppenderSkeleton public static final String IMMEDIATE_FLUSH_OPTION protected boolean immediateFlush true protected QuietWriter qw public WriterAppender public WriterAppender Layout layout OutputStream os this layout new OutputStreamWriter os public WriterAppender Layout layout Writer writer this layout layout this setWriter writer public void setImmediateFlush boolean value immediateFlush value public boolean getImmediateFlush return immediateFlush public void activateOptions public void append LoggingEvent event if checkEntryConditions return subAppend event protected boolean checkEntryConditions if this closed LogLog warn return false if this qw null errorHandler error name return false if this layout null errorHandler error name return false return true public synchronized void close if this closed return this closed true writeFooter reset protected void closeWriter if qw null try qw close catch IOException public String getOptionStrings return OptionConverter concatanateArrays super getOptionStrings new String IMMEDIATE_FLUSH_OPTION public synchronized void setErrorHandler ErrorHandler eh if eh null LogLog warn else this errorHandler eh if this qw null this qw setErrorHandler eh public void setOption String key String value if value null return super setOption key value if key equalsIgnoreCase IMMEDIATE_FLUSH_OPTION immediateFlush OptionConverter toBoolean value immediateFlush public synchronized void setWriter Writer writer reset this qw new QuietWriter writer errorHandler writeHeader protected void subAppend LoggingEvent event this qw write this layout format event if layout ignoresThrowable String event getThrowableStrRep if null int len length for int len this qw write this qw write Layout LINE_SEP if this immediateFlush this qw flush public boolean requiresLayout return true protected void reset closeWriter this qw null protected void writeFooter if layout null String layout getFooter if null this qw null this qw write protected void writeHeader if layout null String layout getHeader if null this qw null this qw write', 'bug': '1'}
{'sequence': 'public class SyslogQuietWriter extends QuietWriter int syslogFacility int priority public SyslogQuietWriter Writer writer int syslogFacility ErrorHandler eh super writer eh this syslogFacility syslogFacility public void setPriority int priority this priority priority public void setSyslogFacility int syslogFacility this syslogFacility syslogFacility public void write String string super write syslogFacility priority string', 'bug': '0'}
{'sequence': 'public class HTMLLayout extends Layout protected final int BUF_SIZE protected final int MAX_CAPACITY static String TRACE_PREFIX private StringBuffer sbuf new StringBuffer BUF_SIZE public static final String LOCATION_INFO_OPTION public static final String TITLE_OPTION boolean locationInfo false String title public String getOptionStrings return new String LOCATION_INFO_OPTION TITLE_OPTION public void setOption String key String value if value null return if key equalsIgnoreCase LOCATION_INFO_OPTION locationInfo OptionConverter toBoolean value locationInfo else if key equalsIgnoreCase TITLE_OPTION title value public void setLocationInfo boolean flag locationInfo flag public boolean getLocationInfo return locationInfo public void setTitle String title this title title public String getTitle return title public String getContentType return public void activateOptions public String format LoggingEvent event if sbuf capacity MAX_CAPACITY sbuf new StringBuffer BUF_SIZE else sbuf setLength sbuf append Layout LINE_SEP Layout LINE_SEP sbuf append sbuf append event timeStamp event getStartTime sbuf append Layout LINE_SEP sbuf append event getThreadName sbuf append escapeHTMLTags event getThreadName sbuf append Layout LINE_SEP sbuf append if event priority equals Priority DEBUG sbuf append sbuf append event priority sbuf append else if event priority isGreaterOrEqual Priority WARN sbuf append sbuf append event priority sbuf append else sbuf append event priority sbuf append Layout LINE_SEP sbuf append event categoryName sbuf append escapeHTMLTags event categoryName sbuf append Layout LINE_SEP if locationInfo LocationInfo locInfo event getLocationInformation sbuf append sbuf append escapeHTMLTags locInfo getFileName sbuf append sbuf append locInfo getLineNumber sbuf append Layout LINE_SEP sbuf append sbuf append escapeHTMLTags event getRenderedMessage sbuf append Layout LINE_SEP sbuf append Layout LINE_SEP if event getNDC null sbuf append sbuf append escapeHTMLTags event getNDC sbuf append Layout LINE_SEP String event getThrowableStrRep if null sbuf append appendThrowableAsHTML sbuf sbuf append Layout LINE_SEP return sbuf toString void appendThrowableAsHTML String StringBuffer sbuf if null int len length if len return sbuf append escapeHTMLTags sbuf append Layout LINE_SEP for int len sbuf append TRACE_PREFIX sbuf append escapeHTMLTags sbuf append Layout LINE_SEP public String getHeader StringBuffer sbuf new StringBuffer sbuf append Layout LINE_SEP sbuf append Layout LINE_SEP sbuf append title Layout LINE_SEP sbuf append Layout LINE_SEP sbuf append Layout LINE_SEP sbuf append Layout LINE_SEP sbuf append Layout LINE_SEP sbuf append Layout LINE_SEP sbuf append Layout LINE_SEP sbuf append Layout LINE_SEP sbuf append Layout LINE_SEP sbuf append Layout LINE_SEP sbuf append new java util Date Layout LINE_SEP sbuf append Layout LINE_SEP sbuf append Layout LINE_SEP sbuf append Layout LINE_SEP sbuf append Layout LINE_SEP sbuf append Layout LINE_SEP sbuf append Layout LINE_SEP sbuf append Layout LINE_SEP if locationInfo sbuf append Layout LINE_SEP sbuf append Layout LINE_SEP sbuf append Layout LINE_SEP return sbuf toString public String getFooter StringBuffer sbuf new StringBuffer sbuf append Layout LINE_SEP sbuf append Layout LINE_SEP sbuf append return sbuf toString public boolean ignoresThrowable return false private String escapeHTMLTags String input if input null input length return input StringBuffer buf new StringBuffer input length char ch for int input length ch input charAt if ch buf append else if ch buf append else buf append ch return buf toString', 'bug': '1'}
{'sequence': 'public class SystemTime static int RUN_LENGTH static public void main String args double systemCurrentTimeLoop System out println currentThreadNameloop System out println static double systemCurrentTimeLoop long before System currentTimeMillis long for int RUN_LENGTH System currentTimeMillis return System currentTimeMillis before RUN_LENGTH static double currentThreadNameloop long before System currentTimeMillis String for int RUN_LENGTH Thread currentThread getName return System currentTimeMillis before RUN_LENGTH', 'bug': '0'}
{'sequence': 'public class MessageRenderer implements ObjectRenderer public MessageRenderer public String doRender Object if instanceof Message StringBuffer sbuf new StringBuffer Message Message try sbuf append switch getJMSDeliveryMode case DeliveryMode NON_PERSISTENT sbuf append break case DeliveryMode PERSISTENT sbuf append break default sbuf append sbuf append sbuf append getJMSCorrelationID sbuf append sbuf append getJMSDestination sbuf append sbuf append getJMSExpiration sbuf append sbuf append getJMSMessageID sbuf append sbuf append getJMSPriority sbuf append sbuf append getJMSRedelivered sbuf append sbuf append getJMSReplyTo sbuf append sbuf append getJMSTimestamp sbuf append sbuf append getJMSType catch JMSException LogLog error return sbuf toString else return toString', 'bug': '0'}
{'sequence': 'public class SyslogWriter extends Writer final int SYSLOG_PORT static String syslogHost private InetAddress address private DatagramSocket ds public SyslogWriter String syslogHost this syslogHost syslogHost try this address InetAddress getByName syslogHost catch UnknownHostException LogLog error syslogHost try this ds new DatagramSocket catch SocketException printStackTrace LogLog error syslogHost public void write char buf int off int len throws IOException this write new String buf off len public void write String string throws IOException DatagramPacket packet new DatagramPacket string getBytes string length address SYSLOG_PORT if this ds null ds send packet public void flush public void close', 'bug': '0'}
{'sequence': 'public class NOPWriter extends Writer public void write char cbuf throws IOException public void write char cbuf int off int len throws IOException public void write int throws IOException public void write String throws IOException public void write String int off int len throws IOException public void flush throws IOException public void close throws IOException System err println', 'bug': '0'}
{'sequence': 'public interface Appender void addFilter Filter newFilter public Filter getFilter public void clearFilters public void close public void doAppend LoggingEvent event public String getName public void setErrorHandler ErrorHandler errorHandler public ErrorHandler getErrorHandler public void setLayout Layout layout public Layout getLayout public void setName String name public boolean requiresLayout', 'bug': '0'}
{'sequence': 'public class CategoryWrapper Category static String FQCN CategoryWrapper class getName CategoryWrapper String name Category getInstance name public static void main String argv Layout layout new PatternLayout Appender out new ConsoleAppender layout ConsoleAppender SYSTEM_OUT CategoryWrapper w1 new CategoryWrapper w1 addAppender out w1 print public void addAppender Appender appender addAppender appender public void print String msg log FQCN Priority DEBUG msg null static void Usage String msg System err println msg System err println CategoryWrapper class getName System exit', 'bug': '0'}
{'sequence': 'public class OnlyOnceErrorHandler implements ErrorHandler final String WARN_PREFIX final String ERROR_PREFIX boolean firstTime true public String getOptionStrings return null public void setOption String key String value public void activateOptions public void error String message Exception int errorCode if firstTime LogLog error message firstTime false public void error String message if firstTime LogLog error message firstTime false', 'bug': '0'}
{'sequence': 'public class SocketAppender extends AppenderSkeleton public static final String REMOTE_HOST_OPTION public static final String PORT_OPTION public static final String LOCATION_INFO_OPTION public static final String RECONNECTION_DELAY_OPTION static final int DEFAULT_PORT static final int DEFAULT_RECONNECTION_DELAY String remoteHost InetAddress address int port DEFAULT_PORT ObjectOutputStream oos int reconnectionDelay DEFAULT_RECONNECTION_DELAY boolean locationInfo false private Connector connector int counter private static final int RESET_FREQUENCY public SocketAppender public SocketAppender InetAddress address int port this address address this remoteHost address getHostName this port port connect address port public SocketAppender String host int port this port port this address getAddressByName host this remoteHost host connect address port public String getOptionStrings return OptionConverter concatanateArrays super getOptionStrings new String REMOTE_HOST_OPTION PORT_OPTION LOCATION_INFO_OPTION RECONNECTION_DELAY_OPTION public void setOption String option String value if value null return super setOption option value if option equals REMOTE_HOST_OPTION address getAddressByName value remoteHost value else if option equals PORT_OPTION port OptionConverter toInt value port else if option equals LOCATION_INFO_OPTION locationInfo OptionConverter toBoolean value locationInfo else if option equals RECONNECTION_DELAY_OPTION reconnectionDelay OptionConverter toInt value reconnectionDelay public void activateOptions connect address port synchronized public void close if closed return this closed true cleanUp public void cleanUp if oos null try oos close catch IOException LogLog error oos null if connector null connector interrupted true void connect InetAddress address int port if this address null return try cleanUp oos new ObjectOutputStream new Socket address port getOutputStream catch IOException LogLog error address getHostName fireConnector public void append LoggingEvent event if event null return if address null errorHandler error this name return if oos null try if locationInfo event getLocationInformation oos writeObject event oos flush if counter RESET_FREQUENCY counter oos reset catch IOException oos null LogLog warn if reconnectionDelay fireConnector void fireConnector if connector null LogLog debug connector new Connector connector setDaemon true connector setPriority Thread MIN_PRIORITY connector start static InetAddress getAddressByName String host try return InetAddress getByName host catch Exception LogLog error host return null public boolean requiresLayout return false public void setRemoteHost String host address getAddressByName host remoteHost host public String getRemoteHost return remoteHost public void setPort int port this port port public int getPort return port public void setLocationInfo boolean locationInfo this locationInfo locationInfo public boolean getLocationInfo return locationInfo public void setReconnectionDelay int delay this reconnectionDelay delay public int getReconnectionDelay return reconnectionDelay class Connector extends Thread boolean interrupted false public void run Socket socket while interrupted try sleep reconnectionDelay LogLog debug address getHostName socket new Socket address port synchronized this oos new ObjectOutputStream socket getOutputStream connector null break catch InterruptedException LogLog debug return catch java net ConnectException LogLog debug address getHostName catch IOException LogLog debug address getHostName', 'bug': '1'}
{'sequence': 'public class Hello static Category cat Category getInstance Hello class public static void main String argv BasicConfigurator configure cat debug cat info', 'bug': '0'}
{'sequence': 'public interface OptionHandler void activateOptions String getOptionStrings void setOption String option String value', 'bug': '1'}
{'sequence': 'public class BasicConfigurator public static final String DISABLE_OVERRIDE_KEY public static final String DISABLE_KEY public static final String INHERITED static String override OptionConverter getSystemProperty DISABLE_OVERRIDE_KEY null if override null Category defaultHierarchy setDisableOverride override String disableStr OptionConverter getSystemProperty DISABLE_KEY null if disableStr null Category defaultHierarchy disable disableStr protected BasicConfigurator protected void addRenderer Hierarchy hierarchy String renderedClassName String renderingClassName LogLog debug renderingClassName renderedClassName ObjectRenderer renderer ObjectRenderer OptionConverter instantiateByClassName renderingClassName ObjectRenderer class null if renderer null LogLog error renderingClassName return else try Class renderedClass Class forName renderedClassName hierarchy rendererMap put renderedClass renderer catch ClassNotFoundException LogLog error renderedClassName public static void disable String priorityStr Category getDefaultHierarchy disable priorityStr public static void disable Priority public static void disableAll Category getDefaultHierarchy disable Priority FATAL public static void disableDebug Category getDefaultHierarchy disable Priority DEBUG public static void disableInfo Category getDefaultHierarchy disable Priority INFO public static void enableAll Category getDefaultHierarchy disable Priority INFO static public void configure Category root Category getRoot root addAppender new ConsoleAppender new PatternLayout PatternLayout TTCC_CONVERSION_PATTERN static public void configure Appender appender Category root Category getRoot root addAppender appender public static void resetConfiguration Category defaultHierarchy resetConfiguration public static void resetConfiguration Hierarchy hierarchy hierarchy resetConfiguration', 'bug': '1'}
{'sequence': 'public class CountingQuietWriter extends QuietWriter protected long count public CountingQuietWriter Writer writer ErrorHandler eh super writer eh public void write String string try out write string count string length catch IOException errorHandler error ErrorCode WRITE_FAILURE public long getCount return count public void setCount long count this count count', 'bug': '0'}
{'sequence': 'public class L7D static ResourceBundle bundles public static void main String args if args length init args args args else Usage test static void Usage String msg System err println msg System err println L7D class getName System exit static void init String configFile String lanCode String countryCode PropertyConfigurator configure configFile bundles new ResourceBundle try bundles ResourceBundle getBundle new Locale bundles ResourceBundle getBundle new Locale bundles ResourceBundle getBundle new Locale catch MissingResourceException printStackTrace static void test Category root Category getRoot for int bundles length root setResourceBundle bundles root l7dlog Priority DEBUG null root l7dlog Priority INFO null root l7dlog Priority WARN null root l7dlog Priority DEBUG new Object new Integer null root l7dlog Priority ERROR new Object new Integer null root l7dlog Priority ERROR new Object new Integer null root l7dlog Priority INFO null', 'bug': '0'}
{'sequence': 'public class JMSAppender extends AppenderSkeleton public static final String TOPIC_CONNECTION_FACTORY_BINDING_NAME_OPTION public static final String TOPIC_BINDING_NAME_OPTION TopicConnection topicConnection TopicSession topicSession TopicPublisher topicPublisher String topicBindingName String tcfBindingName public JMSAppender public String getOptionStrings return OptionConverter concatanateArrays super getOptionStrings new String TOPIC_BINDING_NAME_OPTION TOPIC_CONNECTION_FACTORY_BINDING_NAME_OPTION public void setOption String key String value if value null return super setOption key value if key equals TOPIC_BINDING_NAME_OPTION topicBindingName value else if key equals TOPIC_CONNECTION_FACTORY_BINDING_NAME_OPTION tcfBindingName value public void setTopicConnectionFactoryBindingName String tcfBindingName this tcfBindingName tcfBindingName public String getTopicConnectionFactoryBindingName return tcfBindingName public void setTopicBindingName String topicBindingName this topicBindingName topicBindingName public String getTopicBindingName return topicBindingName public void activateOptions TopicConnectionFactory topicConnectionFactory try Context ctx new InitialContext topicConnectionFactory TopicConnectionFactory lookup ctx tcfBindingName topicConnection topicConnectionFactory createTopicConnection topicConnection start topicSession topicConnection createTopicSession false Session AUTO_ACKNOWLEDGE Topic topic Topic lookup ctx topicBindingName topicPublisher topicSession createPublisher topic ctx close catch Exception errorHandler error name ErrorCode GENERIC_FAILURE protected Object lookup Context ctx String name throws NamingException try return ctx lookup name catch NameNotFoundException LogLog error name throw protected boolean checkEntryConditions String fail null if this topicConnection null fail else if this topicSession null fail else if this topicPublisher null fail if fail null errorHandler error fail name return false else return true public void close if this closed return LogLog debug name this closed true try if topicSession null topicSession close if topicConnection null topicConnection close catch Exception LogLog error name topicPublisher null topicSession null topicConnection null public void append LoggingEvent event if checkEntryConditions return try ObjectMessage msg topicSession createObjectMessage msg setObject event topicPublisher publish msg catch Exception errorHandler error name ErrorCode GENERIC_FAILURE public boolean requiresLayout return false', 'bug': '1'}
{'sequence': 'public interface TriggeringEventEvaluator public boolean isTriggeringEvent LoggingEvent event', 'bug': '0'}
{'sequence': 'public class PropertySetterException extends Exception protected Throwable rootCause public PropertySetterException String msg super msg public PropertySetterException Throwable rootCause super this rootCause rootCause public String getMessage String msg super getMessage if msg null rootCause null msg rootCause getMessage return msg', 'bug': '0'}
{'sequence': 'public class NullEnumeration implements Enumeration private static final NullEnumeration instance new NullEnumeration private NullEnumeration public static NullEnumeration getInstance return instance public boolean hasMoreElements return false public Object nextElement throw new NoSuchElementException', 'bug': '0'}
{'sequence': 'public class RollingFileAppender extends FileAppender static final public String MAX_FILE_SIZE_OPTION static final public String MAX_BACKUP_INDEX_OPTION protected long maxFileSize protected int maxBackupIndex public RollingFileAppender super public RollingFileAppender Layout layout String filename boolean append throws IOException super layout filename append public RollingFileAppender Layout layout String filename throws IOException super layout filename public int getMaxBackupIndex return maxBackupIndex public long getMaximumFileSize return maxFileSize public String getOptionStrings return OptionConverter concatanateArrays super getOptionStrings new String MAX_FILE_SIZE_OPTION MAX_BACKUP_INDEX_OPTION void rollOver File target File file LogLog debug CountingQuietWriter qw getCount LogLog debug maxBackupIndex if maxBackupIndex file new File fileName maxBackupIndex if file exists file delete for int maxBackupIndex file new File fileName if file exists target new File fileName LogLog debug file target file renameTo target target new File fileName file new File fileName LogLog debug file target file renameTo target try this setFile fileName false catch IOException LogLog error fileName public synchronized void setFile String fileName boolean append throws IOException super setFile fileName append if append File new File fileName CountingQuietWriter qw setCount length public void setOption String key String value super setOption key value if key equalsIgnoreCase MAX_FILE_SIZE_OPTION maxFileSize OptionConverter toFileSize value maxFileSize else if key equalsIgnoreCase MAX_BACKUP_INDEX_OPTION maxBackupIndex OptionConverter toInt value maxBackupIndex public void setMaxBackupIndex int maxBackups this maxBackupIndex maxBackups public void setMaxFileSize long maxFileSize this maxFileSize maxFileSize public void setMaximumFileSize long maxFileSize this maxFileSize maxFileSize public void setMaxFileSize String value maxFileSize OptionConverter toFileSize value maxFileSize protected void setQWForFiles Writer writer this qw new CountingQuietWriter writer errorHandler protected void subAppend LoggingEvent event super subAppend event if fileName null CountingQuietWriter qw getCount maxFileSize this rollOver', 'bug': '1'}
{'sequence': 'public abstract class AppenderSkeleton implements Appender OptionHandler public static final String THRESHOLD_OPTION protected Layout layout protected String name protected Priority threshold protected ErrorHandler errorHandler new OnlyOnceErrorHandler protected Filter headFilter protected Filter tailFilter protected boolean closed false public void activateOptions public void addFilter Filter newFilter if headFilter null headFilter tailFilter newFilter else tailFilter next newFilter tailFilter newFilter abstract protected void append LoggingEvent event public void clearFilters headFilter tailFilter null public void finalize if this closed return LogLog debug name close public ErrorHandler getErrorHandler return this errorHandler public Filter getFilter return headFilter public final Filter getFirstFilter return headFilter public Layout getLayout return layout public final String getName return this name public String getOptionStrings return new String THRESHOLD_OPTION public Priority getThreshold return threshold public boolean isAsSevereAsThreshold Priority priority return threshold null priority isGreaterOrEqual threshold public synchronized void doAppend LoggingEvent event if closed LogLog error name if isAsSevereAsThreshold event priority return Filter this headFilter FILTER_LOOP while null switch decide event case Filter DENY return case Filter ACCEPT break FILTER_LOOP case Filter NEUTRAL next this append event public synchronized void setErrorHandler ErrorHandler eh if eh null LogLog warn else this errorHandler eh public void setLayout Layout layout this layout layout public void setName String name this name name public void setOption String key String value if key equalsIgnoreCase THRESHOLD_OPTION threshold Priority toPriority value public void setThreshold Priority threshold this threshold threshold', 'bug': '1'}
