final class DocInverterPerThread extends DocFieldConsumerPerThread final DocInverter docInverter final InvertedDocConsumerPerThread consumer final InvertedDocEndConsumerPerThread endConsumer final Token localToken new Token final DocumentsWriter DocState docState final DocInverter FieldInvertState fieldState new DocInverter FieldInvertState final ReusableStringReader stringReader new ReusableStringReader public DocInverterPerThread DocFieldProcessorPerThread docFieldProcessorPerThread DocInverter docInverter this docInverter docInverter docState docFieldProcessorPerThread docState consumer docInverter consumer addThread this endConsumer docInverter endConsumer addThread this public void startDocument throws IOException consumer startDocument endConsumer startDocument public DocumentsWriter DocWriter finishDocument throws IOException endConsumer finishDocument return consumer finishDocument void abort try consumer abort finally endConsumer abort public DocFieldConsumerPerField addField FieldInfo fi return new DocInverterPerField this fi public class FuzzyQuery extends MultiTermQuery public final static float defaultMinSimilarity public final static int defaultPrefixLength private float minimumSimilarity private int prefixLength public FuzzyQuery Term term float minimumSimilarity int prefixLength throws IllegalArgumentException super term if minimumSimilarity throw new IllegalArgumentException else if minimumSimilarity throw new IllegalArgumentException if prefixLength throw new IllegalArgumentException this minimumSimilarity minimumSimilarity this prefixLength prefixLength public FuzzyQuery Term term float minimumSimilarity throws IllegalArgumentException this term minimumSimilarity defaultPrefixLength public FuzzyQuery Term term this term defaultMinSimilarity defaultPrefixLength public float getMinSimilarity return minimumSimilarity public int getPrefixLength return prefixLength protected FilteredTermEnum getEnum IndexReader reader throws IOException return new FuzzyTermEnum reader getTerm minimumSimilarity prefixLength public Query rewrite IndexReader reader throws IOException FilteredTermEnum enumerator getEnum reader int maxClauseCount BooleanQuery getMaxClauseCount ScoreTermQueue stQueue new ScoreTermQueue maxClauseCount ScoreTerm reusableST null try do float score Term enumerator term if null score enumerator difference if reusableST null reusableST new ScoreTerm score else if score reusableST score reusableST score score reusableST term else continue reusableST ScoreTerm stQueue insertWithOverflow reusableST while enumerator next finally enumerator close BooleanQuery query new BooleanQuery true int size stQueue size for int size ScoreTerm st ScoreTerm stQueue pop return query public String toString String field StringBuffer buffer new StringBuffer Term term getTerm if term field equals field buffer append term field buffer append buffer append term text buffer append buffer append Float toString minimumSimilarity buffer append ToStringUtils boost getBoost return buffer toString protected static class ScoreTerm public Term term public float score public ScoreTerm Term term float score this term term this score score protected static class ScoreTermQueue extends PriorityQueue public ScoreTermQueue int size initialize size protected boolean lessThan Object Object ScoreTerm termA ScoreTerm ScoreTerm termB ScoreTerm if termA score termB score return termA term compareTo termB term else return termA score termB score public boolean equals Object if this return true if instanceof FuzzyQuery return false if super equals return false final FuzzyQuery fuzzyQuery FuzzyQuery if minimumSimilarity fuzzyQuery minimumSimilarity return false if prefixLength fuzzyQuery prefixLength return false return true public int hashCode int result super hashCode result result minimumSimilarity Float floatToIntBits minimumSimilarity result result prefixLength return result public class QueryTermVector implements TermFreqVector private String terms new String private int termFreqs new int public String getField return null public QueryTermVector String queryTerms processTerms queryTerms public QueryTermVector String queryString Analyzer analyzer if analyzer null TokenStream stream analyzer tokenStream new StringReader queryString if stream null List terms new ArrayList try final Token reusableToken new Token for Token nextToken stream next reusableToken nextToken null nextToken stream next reusableToken terms add nextToken term processTerms String terms toArray new String terms size catch IOException private void processTerms String queryTerms if queryTerms null Arrays sort queryTerms Map tmpSet new HashMap queryTerms length List tmpList new ArrayList queryTerms length List tmpFreqs new ArrayList queryTerms length int for int queryTerms length String term queryTerms Integer position Integer tmpSet get term if position null tmpSet put term new Integer tmpList add term tmpFreqs add new Integer else Integer integer Integer tmpFreqs get position intValue tmpFreqs set position intValue new Integer integer intValue terms String tmpList toArray terms termFreqs new int tmpFreqs size int for Iterator iter tmpFreqs iterator iter hasNext Integer integer Integer iter next termFreqs integer intValue public final String toString StringBuffer sb new StringBuffer sb append for int terms length if sb append sb append terms append append termFreqs sb append return sb toString public int size return terms length public String getTerms return terms public int getTermFrequencies return termFreqs public int indexOf String term int res Arrays binarySearch terms term return res res public int indexesOf String terms int start int len int res new int len for int len res indexOf terms return res class ReadOnlySegmentReader extends SegmentReader static void noWrite throw new UnsupportedOperationException protected void acquireWriteLock noWrite public boolean isDeleted int return deletedDocs null deletedDocs get abstract class DirectoryIndexReader extends IndexReader protected Directory directory protected boolean closeDirectory private IndexDeletionPolicy deletionPolicy private SegmentInfos segmentInfos private Lock writeLock private boolean stale private final HashSet synced new HashSet private boolean rollbackHasChanges private SegmentInfos rollbackSegmentInfos protected boolean readOnly void init Directory directory SegmentInfos segmentInfos boolean closeDirectory boolean readOnly throws IOException this directory directory this segmentInfos segmentInfos this closeDirectory closeDirectory this readOnly readOnly if readOnly segmentInfos null for int segmentInfos size final SegmentInfo info segmentInfos info List files info files for int files size synced add files get protected DirectoryIndexReader DirectoryIndexReader Directory directory SegmentInfos segmentInfos boolean closeDirectory boolean readOnly throws IOException super init directory segmentInfos closeDirectory readOnly static DirectoryIndexReader open final Directory directory final boolean closeDirectory final IndexDeletionPolicy deletionPolicy throws CorruptIndexException IOException return open directory closeDirectory deletionPolicy null false static DirectoryIndexReader open final Directory directory final boolean closeDirectory final IndexDeletionPolicy deletionPolicy final IndexCommit commit final boolean readOnly throws CorruptIndexException IOException SegmentInfos FindSegmentsFile finder new SegmentInfos FindSegmentsFile directory protected Object doBody String segmentFileName throws CorruptIndexException IOException SegmentInfos infos new SegmentInfos infos read directory segmentFileName DirectoryIndexReader reader reader SegmentReader get readOnly infos infos info closeDirectory else if readOnly reader new ReadOnlyMultiSegmentReader directory infos closeDirectory else reader new MultiSegmentReader directory infos closeDirectory false reader setDeletionPolicy deletionPolicy return reader if commit null return DirectoryIndexReader finder run else if directory commit getDirectory throw new IOException return DirectoryIndexReader finder doBody commit getSegmentsFileName public final synchronized IndexReader reopen throws CorruptIndexException IOException ensureOpen if this hasChanges this isCurrent return this return DirectoryIndexReader new SegmentInfos FindSegmentsFile directory protected Object doBody String segmentFileName throws CorruptIndexException IOException SegmentInfos infos new SegmentInfos infos read directory segmentFileName DirectoryIndexReader newReader doReopen infos if DirectoryIndexReader this newReader newReader init directory infos closeDirectory readOnly newReader deletionPolicy deletionPolicy return newReader run protected abstract DirectoryIndexReader doReopen SegmentInfos infos throws CorruptIndexException IOException public void setDeletionPolicy IndexDeletionPolicy deletionPolicy this deletionPolicy deletionPolicy public Directory directory ensureOpen return directory public long getVersion ensureOpen return segmentInfos getVersion public boolean isCurrent throws CorruptIndexException IOException ensureOpen return SegmentInfos readCurrentVersion directory segmentInfos getVersion public boolean isOptimized ensureOpen return segmentInfos size hasDeletions false protected void doClose throws IOException if closeDirectory directory close protected void doCommit throws IOException if hasChanges if segmentInfos null IndexFileDeleter deleter new IndexFileDeleter directory deletionPolicy null new KeepOnlyLastCommitDeletionPolicy deletionPolicy segmentInfos null null startCommit boolean success false try commitChanges for int segmentInfos size final SegmentInfo info segmentInfos info final List files info files for int files size final String fileName String files get if synced contains fileName assert directory fileExists fileName directory sync fileName synced add fileName segmentInfos commit directory success true finally if success rollbackCommit deleter refresh deleter checkpoint segmentInfos true if writeLock null writeLock null else commitChanges hasChanges false protected abstract void commitChanges throws IOException protected void acquireWriteLock throws StaleReaderException CorruptIndexException LockObtainFailedException IOException if segmentInfos null ensureOpen if stale throw new StaleReaderException if writeLock null Lock writeLock directory makeLock IndexWriter WRITE_LOCK_NAME throw new LockObtainFailedException writeLock this writeLock writeLock if SegmentInfos readCurrentVersion directory segmentInfos getVersion stale true this writeLock release this writeLock null throw new StaleReaderException void startCommit if segmentInfos null rollbackSegmentInfos SegmentInfos segmentInfos clone rollbackHasChanges hasChanges void rollbackCommit if segmentInfos null for int segmentInfos size segmentInfos info reset rollbackSegmentInfos info rollbackSegmentInfos null hasChanges rollbackHasChanges protected void finalize throws Throwable try if writeLock null writeLock null finally super finalize private static class ReaderCommit extends IndexCommit private String segmentsFileName Collection files Directory dir long generation long version final boolean isOptimized ReaderCommit SegmentInfos infos Directory dir throws IOException segmentsFileName infos getCurrentSegmentFileName this dir dir final int size infos size files new ArrayList size files add segmentsFileName for int size SegmentInfo info infos info if info dir dir files addAll info files version infos getVersion generation infos getGeneration isOptimized infos size infos info hasDeletions public boolean isOptimized return isOptimized public String getSegmentsFileName return segmentsFileName public Collection getFileNames return files public Directory getDirectory return dir public long getVersion return version public long getGeneration return generation public boolean isDeleted return false public IndexCommit getIndexCommit throws IOException return new ReaderCommit segmentInfos directory public static Collection listCommits Directory dir throws IOException final String files dir list if files null throw new IOException dir Collection commits new ArrayList SegmentInfos latest new SegmentInfos latest read dir final long currentGen latest getGeneration commits add new ReaderCommit latest dir for int files length final String fileName files if fileName startsWith IndexFileNames SEGMENTS fileName equals IndexFileNames SEGMENTS_GEN SegmentInfos generationFromSegmentsFileName fileName currentGen SegmentInfos sis new SegmentInfos try sis read dir fileName catch FileNotFoundException fnfe sis null if sis null commits add new ReaderCommit sis dir return commits abstract class DocFieldConsumerPerThread abstract void startDocument throws IOException abstract DocumentsWriter DocWriter finishDocument throws IOException abstract DocFieldConsumerPerField addField FieldInfo fi abstract void abort final class FieldsWriter static final byte FIELD_IS_TOKENIZED static final byte FIELD_IS_BINARY static final byte FIELD_IS_COMPRESSED static final int FORMAT static final int FORMAT_VERSION_UTF8_LENGTH_IN_BYTES static final int FORMAT_CURRENT FORMAT_VERSION_UTF8_LENGTH_IN_BYTES private FieldInfos fieldInfos private IndexOutput fieldsStream private IndexOutput indexStream private boolean doClose FieldsWriter Directory String segment FieldInfos fn throws IOException fieldInfos fn boolean success false final String fieldsName segment IndexFileNames FIELDS_EXTENSION try fieldsStream createOutput fieldsName fieldsStream writeInt FORMAT_CURRENT success true finally if success try close catch Throwable try deleteFile fieldsName catch Throwable success false final String indexName segment IndexFileNames FIELDS_INDEX_EXTENSION try indexStream createOutput indexName indexStream writeInt FORMAT_CURRENT success true finally if success try close catch IOException ioe try deleteFile fieldsName catch Throwable try deleteFile indexName catch Throwable doClose true FieldsWriter IndexOutput fdx IndexOutput fdt FieldInfos fn fieldInfos fn fieldsStream fdt indexStream fdx doClose false void setFieldsStream IndexOutput stream this fieldsStream stream void flushDocument int numStoredFields RAMOutputStream buffer throws IOException indexStream writeLong fieldsStream getFilePointer fieldsStream writeVInt numStoredFields buffer writeTo fieldsStream void skipDocument throws IOException indexStream writeLong fieldsStream getFilePointer fieldsStream writeVInt void flush throws IOException indexStream flush fieldsStream flush final void close throws IOException if doClose try if fieldsStream null try fieldsStream close finally fieldsStream null catch IOException ioe try if indexStream null try indexStream close finally indexStream null catch IOException ioe2 throw ioe finally if indexStream null try indexStream close finally indexStream null final void writeField FieldInfo fi Fieldable field throws IOException boolean disableCompression field instanceof FieldsReader FieldForMerge fieldsStream writeVInt fi number byte bits if field isTokenized bits FieldsWriter FIELD_IS_TOKENIZED if field isBinary bits FieldsWriter FIELD_IS_BINARY if field isCompressed bits FieldsWriter FIELD_IS_COMPRESSED fieldsStream writeByte bits if field isCompressed final byte data final int len final int offset if disableCompression data field getBinaryValue assert data null len field getBinaryLength offset field getBinaryOffset else if field isBinary data compress field getBinaryValue field getBinaryOffset field getBinaryLength else byte field stringValue getBytes data compress length len data length offset fieldsStream writeVInt len fieldsStream writeBytes data offset len else if field isBinary final byte data final int len final int offset data field getBinaryValue len field getBinaryLength offset field getBinaryOffset fieldsStream writeVInt len fieldsStream writeBytes data offset len else fieldsStream writeString field stringValue final void addRawDocuments IndexInput stream int lengths int numDocs throws IOException long position fieldsStream getFilePointer long start position for int numDocs indexStream writeLong position position lengths fieldsStream copyBytes stream position start assert fieldsStream getFilePointer position final void addDocument Document doc throws IOException indexStream writeLong fieldsStream getFilePointer int storedCount Iterator fieldIterator doc getFields iterator while fieldIterator hasNext Fieldable field Fieldable fieldIterator next if field isStored storedCount fieldsStream writeVInt storedCount fieldIterator doc getFields iterator while fieldIterator hasNext Fieldable field Fieldable fieldIterator next if field isStored writeField fieldInfos fieldInfo field name field private final byte compress byte input int offset int length Deflater compressor new Deflater compressor setLevel Deflater BEST_COMPRESSION compressor setInput input offset length compressor finish ByteArrayOutputStream bos new ByteArrayOutputStream length try compressor setLevel Deflater BEST_COMPRESSION compressor setInput input compressor finish byte buf new byte while compressor finished int count compressor deflate buf bos write buf count finally compressor end return bos toByteArray final class SegmentTermPositions extends SegmentTermDocs implements TermPositions private IndexInput proxStream private int proxCount private int position private int payloadLength private boolean needToLoadPayload private long lazySkipPointer private int lazySkipProxCount SegmentTermPositions SegmentReader super final void seek TermInfo ti Term term throws IOException super seek ti term if ti null lazySkipPointer ti proxPointer lazySkipProxCount proxCount payloadLength needToLoadPayload false public final void close throws IOException super close if proxStream null proxStream close public final int nextPosition throws IOException if currentFieldOmitTf return lazySkip proxCount return position readDeltaPosition private final int readDeltaPosition throws IOException int delta proxStream readVInt if currentFieldStoresPayloads if delta payloadLength proxStream readVInt delta needToLoadPayload true return delta protected final void skippingDoc throws IOException lazySkipProxCount freq public final boolean next throws IOException lazySkipProxCount proxCount return true return false public final int read final int docs final int freqs throw new UnsupportedOperationException protected void skipProx long proxPointer int payloadLength throws IOException lazySkipPointer proxPointer lazySkipProxCount proxCount this payloadLength payloadLength needToLoadPayload false private void skipPositions int throws IOException assert currentFieldOmitTf readDeltaPosition skipPayload private void skipPayload throws IOException if needToLoadPayload payloadLength proxStream seek proxStream getFilePointer payloadLength needToLoadPayload false private void lazySkip throws IOException if proxStream null proxStream IndexInput parent proxStream clone skipPayload if lazySkipPointer proxStream seek lazySkipPointer lazySkipPointer if lazySkipProxCount skipPositions lazySkipProxCount lazySkipProxCount public int getPayloadLength return payloadLength public byte getPayload byte data int offset throws IOException if needToLoadPayload throw new IOException byte retArray int retOffset if data null data length offset payloadLength retArray new byte payloadLength retOffset else retArray data retOffset offset proxStream readBytes retArray retOffset payloadLength needToLoadPayload false return retArray public boolean isPayloadAvailable return needToLoadPayload payloadLength public class MultipleTermPositions implements TermPositions private static final class TermPositionsQueue extends PriorityQueue TermPositionsQueue List termPositions throws IOException initialize termPositions size Iterator termPositions iterator while hasNext TermPositions tp TermPositions next if tp next put tp final TermPositions peek return TermPositions top public final boolean lessThan Object Object return TermPositions doc TermPositions doc private static final class IntQueue private int private int private int private int new int final void add int if growArray final int next return final void sort Arrays sort final void clear final int size return private void growArray int newArray new int System arraycopy newArray newArray private int private int private TermPositionsQueue private IntQueue public MultipleTermPositions IndexReader indexReader Term terms throws IOException List termPositions new LinkedList for int terms length termPositions add indexReader termPositions terms new TermPositionsQueue termPositions new IntQueue public final boolean next throws IOException if size return false clear peek doc TermPositions tp do tp peek for int tp freq add tp nextPosition if tp next adjustTop else pop tp close while size peek doc sort size return true public final int nextPosition return next public final boolean skipTo int target throws IOException while peek null target peek doc TermPositions tp TermPositions pop if tp skipTo target put tp else tp close return next public final int doc return public final int freq return public final void close throws IOException while size TermPositions pop close public void seek Term arg0 throws IOException throw new UnsupportedOperationException public void seek TermEnum termEnum throws IOException throw new UnsupportedOperationException public int read int arg0 int arg1 throws IOException throw new UnsupportedOperationException public int getPayloadLength throw new UnsupportedOperationException public byte getPayload byte data int offset throws IOException throw new UnsupportedOperationException public boolean isPayloadAvailable return false public interface TermDocs void seek Term term throws IOException void seek TermEnum termEnum throws IOException int doc int freq boolean next throws IOException int read int docs int freqs throws IOException boolean skipTo int target throws IOException void close throws IOException final class IntBlockPool public int buffers new int final private DocumentsWriter docWriter final boolean trackAllocations public IntBlockPool DocumentsWriter docWriter boolean trackAllocations this docWriter docWriter this trackAllocations trackAllocations public void reset if bufferUpto if bufferUpto docWriter recycleIntBlocks buffers bufferUpto bufferUpto intUpto intOffset buffer buffers public void nextBuffer if bufferUpto buffers length int newBuffers new int int buffers length System arraycopy buffers newBuffers buffers length buffers newBuffers buffer buffers bufferUpto docWriter getIntBlock trackAllocations bufferUpto intUpto intOffset DocumentsWriter INT_BLOCK_SIZE public class ChecksumIndexInput extends IndexInput IndexInput main Checksum digest public ChecksumIndexInput IndexInput main this main main digest new CRC32 public byte readByte throws IOException final byte main readByte digest update return public void readBytes byte int offset int len throws IOException main readBytes offset len digest update offset len public long getChecksum return digest getValue public void close throws IOException main close public long getFilePointer return main getFilePointer public void seek long pos throw new RuntimeException public long length return main length abstract class DocConsumer abstract DocConsumerPerThread addThread DocumentsWriterThreadState perThread throws IOException abstract void flush final Collection threads final DocumentsWriter FlushState state throws IOException abstract void closeDocStore final DocumentsWriter FlushState state throws IOException abstract void abort abstract boolean freeRAM abstract class TermsHashConsumerPerField abstract boolean start Fieldable fields int count throws IOException abstract void finish throws IOException abstract void skippingLongTerm Token throws IOException abstract void newTerm Token RawPostingList throws IOException abstract void addTerm Token RawPostingList throws IOException abstract int getStreamCount final class DocFieldProcessor extends DocConsumer final DocumentsWriter docWriter final FieldInfos fieldInfos new FieldInfos final DocFieldConsumer consumer public DocFieldProcessor DocumentsWriter docWriter DocFieldConsumer consumer this docWriter docWriter this consumer consumer consumer setFieldInfos fieldInfos public void closeDocStore DocumentsWriter FlushState state throws IOException consumer closeDocStore state public void flush Collection threads DocumentsWriter FlushState state throws IOException Map childThreadsAndFields new HashMap Iterator it threads iterator while it hasNext DocFieldProcessorPerThread perThread DocFieldProcessorPerThread it next childThreadsAndFields put perThread consumer perThread fields perThread trimFields state consumer flush childThreadsAndFields state fieldInfos write state directory state segmentName public void abort consumer abort public boolean freeRAM return consumer freeRAM public DocConsumerPerThread addThread DocumentsWriterThreadState threadState throws IOException return new DocFieldProcessorPerThread threadState this public class PerFieldAnalyzerWrapper extends Analyzer private Analyzer defaultAnalyzer private Map analyzerMap new HashMap public PerFieldAnalyzerWrapper Analyzer defaultAnalyzer this defaultAnalyzer defaultAnalyzer public void addAnalyzer String fieldName Analyzer analyzer analyzerMap put fieldName analyzer public TokenStream tokenStream String fieldName Reader reader Analyzer analyzer Analyzer analyzerMap get fieldName if analyzer null analyzer defaultAnalyzer return analyzer tokenStream fieldName reader public TokenStream reusableTokenStream String fieldName Reader reader throws IOException Analyzer analyzer Analyzer analyzerMap get fieldName if analyzer null analyzer defaultAnalyzer return analyzer reusableTokenStream fieldName reader public int getPositionIncrementGap String fieldName Analyzer analyzer Analyzer analyzerMap get fieldName if analyzer null analyzer defaultAnalyzer return analyzer getPositionIncrementGap fieldName public String toString return analyzerMap defaultAnalyzer final class DocumentsWriterThreadState final DocConsumerPerThread consumer final DocumentsWriter DocState docState final DocumentsWriter docWriter public DocumentsWriterThreadState DocumentsWriter docWriter throws IOException this docWriter docWriter docState new DocumentsWriter DocState docState maxFieldLength docWriter maxFieldLength docState infoStream docWriter infoStream docState similarity docWriter similarity docState docWriter docWriter consumer docWriter consumer addThread this void doAfterFlush numThreads doFlushAfter false public class BooleanQuery extends Query private static int maxClauseCount public static class TooManyClauses extends RuntimeException public TooManyClauses public String getMessage return maxClauseCount public static int getMaxClauseCount return maxClauseCount public static void setMaxClauseCount int maxClauseCount if maxClauseCount throw new IllegalArgumentException BooleanQuery maxClauseCount maxClauseCount private ArrayList clauses new ArrayList private boolean disableCoord public BooleanQuery public BooleanQuery boolean disableCoord this disableCoord disableCoord public boolean isCoordDisabled return disableCoord public Similarity getSimilarity Searcher searcher Similarity result super getSimilarity searcher result new SimilarityDelegator result public float coord int overlap int maxOverlap return return result public void setMinimumNumberShouldMatch int min this minNrShouldMatch min protected int minNrShouldMatch public int getMinimumNumberShouldMatch return minNrShouldMatch public void add Query query BooleanClause Occur occur add new BooleanClause query occur public void add BooleanClause clause if clauses size maxClauseCount throw new TooManyClauses clauses add clause public BooleanClause getClauses return BooleanClause clauses toArray new BooleanClause clauses size public List clauses return clauses private class BooleanWeight implements Weight protected Similarity similarity protected ArrayList weights new ArrayList public BooleanWeight Searcher searcher throws IOException this similarity getSimilarity searcher for int clauses size BooleanClause BooleanClause clauses get weights add getQuery createWeight searcher public Query getQuery return BooleanQuery this public float getValue return getBoost public float sumOfSquaredWeights throws IOException float sum for int weights size BooleanClause BooleanClause clauses get Weight Weight weights get if isProhibited sum return sum public void normalize float norm for int weights size Weight Weight weights get normalize norm public Scorer scorer IndexReader reader throws IOException BooleanScorer2 result new BooleanScorer2 similarity minNrShouldMatch allowDocsOutOfOrder for int weights size BooleanClause BooleanClause clauses get Weight Weight weights get Scorer subScorer scorer reader if subScorer null result add subScorer isRequired isProhibited else if isRequired return null return result public Explanation explain IndexReader reader int doc throws IOException final int minShouldMatch BooleanQuery this getMinimumNumberShouldMatch ComplexExplanation sumExpl new ComplexExplanation sumExpl setDescription int coord int maxCoord float sum boolean fail false int shouldMatchCount for int weights size BooleanClause BooleanClause clauses get Weight Weight weights get Explanation explain reader doc if isProhibited maxCoord if isMatch if isProhibited sumExpl addDetail sum getValue coord else Explanation new Explanation getQuery toString addDetail sumExpl addDetail fail true if getOccur equals Occur SHOULD shouldMatchCount else if isRequired Explanation new Explanation getQuery toString addDetail sumExpl addDetail fail true if fail sumExpl setMatch Boolean FALSE sumExpl setValue sumExpl setDescription return sumExpl else if shouldMatchCount minShouldMatch sumExpl setMatch Boolean FALSE sumExpl setValue sumExpl setDescription minShouldMatch return sumExpl sumExpl setMatch coord Boolean TRUE Boolean FALSE sumExpl setValue sum float coordFactor similarity coord coord maxCoord else ComplexExplanation result new ComplexExplanation sumExpl isMatch sum coordFactor result addDetail sumExpl result addDetail new Explanation coordFactor coord maxCoord return result private static boolean allowDocsOutOfOrder false public static void setAllowDocsOutOfOrder boolean allow allowDocsOutOfOrder allow public static boolean getAllowDocsOutOfOrder return allowDocsOutOfOrder public static void setUseScorer14 boolean use14 setAllowDocsOutOfOrder use14 public static boolean getUseScorer14 return getAllowDocsOutOfOrder protected Weight createWeight Searcher searcher throws IOException return new BooleanWeight searcher public Query rewrite IndexReader reader throws IOException BooleanClause BooleanClause clauses get query setBoost getBoost query getBoost return query for int clauses size BooleanClause BooleanClause clauses get Query query getQuery rewrite reader if clone null clone BooleanQuery this clone clone clauses set new BooleanClause query getOccur if clone null else public void extractTerms Set terms for Iterator clauses iterator hasNext BooleanClause clause BooleanClause next clause getQuery extractTerms terms public Object clone BooleanQuery clone BooleanQuery super clone clone clauses ArrayList this clauses clone return clone public String toString String field StringBuffer buffer new StringBuffer boolean needParens getBoost getMinimumNumberShouldMatch if needParens buffer append for int clauses size BooleanClause BooleanClause clauses get if isProhibited buffer append else if isRequired buffer append Query subQuery getQuery buffer append buffer append getQuery toString field buffer append else buffer append getQuery toString field if clauses size buffer append if needParens buffer append if getMinimumNumberShouldMatch buffer append buffer append getMinimumNumberShouldMatch if getBoost buffer append ToStringUtils boost getBoost return buffer toString public boolean equals Object if instanceof BooleanQuery return false BooleanQuery other BooleanQuery return this getBoost other getBoost this clauses equals other clauses this getMinimumNumberShouldMatch other getMinimumNumberShouldMatch public int hashCode return Float floatToIntBits getBoost clauses hashCode getMinimumNumberShouldMatch public class WhitespaceTokenizer extends CharTokenizer public WhitespaceTokenizer Reader in super in protected boolean isTokenChar char return Character isWhitespace final class TermInfo int docFreq long freqPointer long proxPointer int skipOffset TermInfo TermInfo int df long fp long pp docFreq df freqPointer fp proxPointer pp TermInfo TermInfo ti docFreq ti docFreq freqPointer ti freqPointer proxPointer ti proxPointer skipOffset ti skipOffset final void set int docFreq long freqPointer long proxPointer int skipOffset this docFreq docFreq this freqPointer freqPointer this proxPointer proxPointer this skipOffset skipOffset final void set TermInfo ti docFreq ti docFreq freqPointer ti freqPointer proxPointer ti proxPointer skipOffset ti skipOffset public final class Term implements Comparable java io Serializable String field String text public Term String fld String txt this fld txt true public Term String fld this fld true Term String fld String txt boolean intern public final String field return field public final String text return text public Term createTerm String text return new Term field text false public final boolean equals Object if this return true if null return false if instanceof Term return false Term other Term return field other field text equals other text public final int hashCode return field hashCode text hashCode public int compareTo Object other return compareTo Term other public final int compareTo Term other return text compareTo other text else return field compareTo other field final void set String fld String txt field fld text txt public final String toString return field text private void readObject java io ObjectInputStream in throws java io IOException ClassNotFoundException in defaultReadObject field field intern public class TermQuery extends Query private Term term private class TermWeight implements Weight private Similarity similarity private float value private float idf private float queryNorm private float queryWeight public TermWeight Searcher searcher throws IOException this similarity getSimilarity searcher public String toString return TermQuery this public Query getQuery return TermQuery this public float getValue return value public float sumOfSquaredWeights public void normalize float queryNorm this queryNorm queryNorm public Scorer scorer IndexReader reader throws IOException TermDocs termDocs reader termDocs term if termDocs null return null return new TermScorer this termDocs similarity reader norms term field public Explanation explain IndexReader reader int doc throws IOException ComplexExplanation result new ComplexExplanation result setDescription getQuery doc Explanation idfExpl new Explanation idf reader docFreq term reader numDocs Explanation queryExpl new Explanation queryExpl setDescription getQuery Explanation boostExpl new Explanation getBoost if getBoost queryExpl addDetail boostExpl queryExpl addDetail idfExpl Explanation queryNormExpl new Explanation queryNorm queryExpl addDetail queryNormExpl queryExpl setValue boostExpl getValue idfExpl getValue queryNormExpl getValue result addDetail queryExpl String field term field ComplexExplanation fieldExpl new ComplexExplanation fieldExpl setDescription term doc Explanation tfExpl scorer reader explain doc fieldExpl addDetail tfExpl fieldExpl addDetail idfExpl Explanation fieldNormExpl new Explanation byte fieldNorms reader norms field float fieldNorm fieldNorms null Similarity decodeNorm fieldNorms doc fieldNormExpl setValue fieldNorm fieldNormExpl setDescription field doc fieldExpl addDetail fieldNormExpl fieldExpl setMatch Boolean valueOf tfExpl isMatch fieldExpl setValue tfExpl getValue idfExpl getValue fieldNormExpl getValue result addDetail fieldExpl result setMatch fieldExpl getMatch result setValue queryExpl getValue fieldExpl getValue if queryExpl getValue return fieldExpl return result public TermQuery Term term public Term getTerm return term protected Weight createWeight Searcher searcher throws IOException return new TermWeight searcher public void extractTerms Set terms terms add getTerm public String toString String field StringBuffer buffer new StringBuffer if term field equals field buffer append term field buffer append buffer append term text buffer append ToStringUtils boost getBoost return buffer toString public boolean equals Object if instanceof TermQuery return false TermQuery other TermQuery return this getBoost other getBoost this term equals other term public int hashCode return Float floatToIntBits getBoost term hashCode public abstract class CharTokenizer extends Tokenizer public CharTokenizer Reader input super input private int offset bufferIndex dataLen private static final int MAX_WORD_LEN private static final int IO_BUFFER_SIZE private final char ioBuffer new char IO_BUFFER_SIZE protected abstract boolean isTokenChar char protected char normalize char return public final Token next final Token reusableToken throws IOException assert reusableToken null reusableToken clear int length int start bufferIndex char buffer reusableToken termBuffer while true if bufferIndex dataLen offset dataLen dataLen input read ioBuffer if dataLen if length break else return null bufferIndex final char ioBuffer bufferIndex start offset bufferIndex else if length buffer length buffer reusableToken resizeTermBuffer length break reusableToken setTermLength length reusableToken setStartOffset start reusableToken setEndOffset start length return reusableToken public void reset Reader input throws IOException super reset input bufferIndex offset dataLen public class CorruptIndexException extends IOException public CorruptIndexException String message super message public class MultiFieldQueryParser extends QueryParser protected String fields protected Map boosts public MultiFieldQueryParser String fields Analyzer analyzer Map boosts this fields analyzer this boosts boosts public MultiFieldQueryParser String fields Analyzer analyzer super null analyzer this fields fields protected Query getFieldQuery String field String queryText int slop throws ParseException if field null List clauses new ArrayList for int fields length Query super getFieldQuery fields queryText if null if boosts null Float boost Float boosts get fields if boost null setBoost boost floatValue applySlop slop clauses add new BooleanClause BooleanClause Occur SHOULD return null return getBooleanQuery clauses true Query super getFieldQuery field queryText applySlop slop return private void applySlop Query int slop if instanceof PhraseQuery PhraseQuery setSlop slop else if instanceof MultiPhraseQuery MultiPhraseQuery setSlop slop protected Query getFieldQuery String field String queryText throws ParseException return getFieldQuery field queryText protected Query getFuzzyQuery String field String termStr float minSimilarity throws ParseException if field null List clauses new ArrayList for int fields length clauses add new BooleanClause getFuzzyQuery fields termStr minSimilarity BooleanClause Occur SHOULD return getBooleanQuery clauses true return super getFuzzyQuery field termStr minSimilarity protected Query getPrefixQuery String field String termStr throws ParseException if field null List clauses new ArrayList for int fields length clauses add new BooleanClause getPrefixQuery fields termStr BooleanClause Occur SHOULD return getBooleanQuery clauses true return super getPrefixQuery field termStr protected Query getWildcardQuery String field String termStr throws ParseException if field null List clauses new ArrayList for int fields length clauses add new BooleanClause getWildcardQuery fields termStr BooleanClause Occur SHOULD return getBooleanQuery clauses true return super getWildcardQuery field termStr protected Query getRangeQuery String field String part1 String part2 boolean inclusive throws ParseException if field null List clauses new ArrayList for int fields length clauses add new BooleanClause getRangeQuery fields part1 part2 inclusive BooleanClause Occur SHOULD return getBooleanQuery clauses true return super getRangeQuery field part1 part2 inclusive public static Query parse String queries String fields Analyzer analyzer throws ParseException if queries length fields length throw new IllegalArgumentException BooleanQuery bQuery new BooleanQuery for int fields length QueryParser qp new QueryParser fields analyzer Query qp parse queries instanceof BooleanQuery BooleanQuery getClauses length bQuery add BooleanClause Occur SHOULD return bQuery public static Query parse String query String fields BooleanClause Occur flags Analyzer analyzer throws ParseException if fields length flags length throw new IllegalArgumentException BooleanQuery bQuery new BooleanQuery for int fields length QueryParser qp new QueryParser fields analyzer Query qp parse query instanceof BooleanQuery BooleanQuery getClauses length bQuery add flags return bQuery public static Query parse String queries String fields BooleanClause Occur flags Analyzer analyzer throws ParseException if queries length fields length queries length flags length throw new IllegalArgumentException BooleanQuery bQuery new BooleanQuery for int fields length QueryParser qp new QueryParser fields analyzer Query qp parse queries instanceof BooleanQuery BooleanQuery getClauses length bQuery add flags return bQuery public interface ScoreDocComparator static final ScoreDocComparator RELEVANCE new ScoreDocComparator public int compare ScoreDoc ScoreDoc if score score return if score score return return public Comparable sortValue ScoreDoc return new Float score public int sortType return SortField SCORE static final ScoreDocComparator INDEXORDER new ScoreDocComparator public int compare ScoreDoc ScoreDoc if doc doc return if doc doc return return public Comparable sortValue ScoreDoc return new Integer doc public int sortType return SortField DOC int compare ScoreDoc ScoreDoc Comparable sortValue ScoreDoc int sortType public class SnapshotDeletionPolicy implements IndexDeletionPolicy private IndexCommit lastCommit private IndexDeletionPolicy primary private String snapshot public SnapshotDeletionPolicy IndexDeletionPolicy primary this primary primary public synchronized void onInit List commits throws IOException primary onInit wrapCommits commits lastCommit IndexCommit commits get commits size public synchronized void onCommit List commits throws IOException primary onCommit wrapCommits commits lastCommit IndexCommit commits get commits size public synchronized IndexCommitPoint snapshot if snapshot null snapshot lastCommit getSegmentsFileName else throw new IllegalStateException return lastCommit public synchronized void release if snapshot null snapshot null else throw new IllegalStateException private class MyCommitPoint extends IndexCommit IndexCommit cp MyCommitPoint IndexCommit cp this cp cp public String getSegmentsFileName return cp getSegmentsFileName public Collection getFileNames throws IOException return cp getFileNames public Directory getDirectory return cp getDirectory public void delete synchronized SnapshotDeletionPolicy this if snapshot null snapshot equals getSegmentsFileName cp delete public boolean isDeleted return cp isDeleted public long getVersion return cp getVersion public long getGeneration return cp getGeneration private List wrapCommits List commits final int count commits size List myCommits new ArrayList count for int count myCommits add new MyCommitPoint IndexCommit commits get return myCommits abstract class TermsHashConsumerPerThread abstract void startDocument throws IOException abstract DocumentsWriter DocWriter finishDocument throws IOException abstract public TermsHashConsumerPerField addField TermsHashPerField termsHashPerField FieldInfo fieldInfo abstract public void abort public abstract class Directory volatile boolean isOpen true protected LockFactory lockFactory public abstract String list throws IOException public abstract boolean fileExists String name throws IOException public abstract long fileModified String name throws IOException public abstract void touchFile String name throws IOException public abstract void deleteFile String name throws IOException public abstract void renameFile String from String to throws IOException public abstract long fileLength String name throws IOException public abstract IndexOutput createOutput String name throws IOException public void sync String name throws IOException public abstract IndexInput openInput String name throws IOException public IndexInput openInput String name int bufferSize throws IOException return openInput name public Lock makeLock String name return lockFactory makeLock name public void clearLock String name throws IOException if lockFactory null lockFactory clearLock name public abstract void close throws IOException public void setLockFactory LockFactory lockFactory this lockFactory lockFactory lockFactory setLockPrefix this getLockID public LockFactory getLockFactory return this lockFactory public String getLockID return this toString public static void copy Directory src Directory dest boolean closeDirSrc throws IOException final String files src list if files null throw new IOException src byte buf new byte BufferedIndexOutput BUFFER_SIZE for int files length IndexOutput os null IndexInput is null try os dest createOutput files is src openInput files long len is length long readCount while readCount len int toRead readCount BufferedIndexOutput BUFFER_SIZE len int len readCount BufferedIndexOutput BUFFER_SIZE is readBytes buf toRead os writeBytes buf toRead readCount toRead finally try if os null os close finally if is null is close if closeDirSrc src close protected final void ensureOpen throws AlreadyClosedException if isOpen throw new AlreadyClosedException public abstract class LogMergePolicy extends MergePolicy public static final double LEVEL_LOG_SPAN public static final int DEFAULT_MERGE_FACTOR public static final int DEFAULT_MAX_MERGE_DOCS Integer MAX_VALUE private int mergeFactor DEFAULT_MERGE_FACTOR long minMergeSize long maxMergeSize int maxMergeDocs DEFAULT_MAX_MERGE_DOCS private boolean useCompoundFile true private boolean useCompoundDocStore true private IndexWriter writer private void message String message if writer null writer message message public int getMergeFactor return mergeFactor public void setMergeFactor int mergeFactor if mergeFactor throw new IllegalArgumentException this mergeFactor mergeFactor public boolean useCompoundFile SegmentInfos infos SegmentInfo info return useCompoundFile public void setUseCompoundFile boolean useCompoundFile this useCompoundFile useCompoundFile public boolean getUseCompoundFile return useCompoundFile public boolean useCompoundDocStore SegmentInfos infos return useCompoundDocStore public void setUseCompoundDocStore boolean useCompoundDocStore this useCompoundDocStore useCompoundDocStore public boolean getUseCompoundDocStore return useCompoundDocStore public void close abstract protected long size SegmentInfo info throws IOException private boolean isOptimized SegmentInfos infos IndexWriter writer int maxNumSegments Set segmentsToOptimize throws IOException final int numSegments infos size int numToOptimize SegmentInfo optimizeInfo null for int numSegments numToOptimize maxNumSegments final SegmentInfo info infos info if segmentsToOptimize contains info numToOptimize optimizeInfo info return numToOptimize maxNumSegments numToOptimize isOptimized writer optimizeInfo private boolean isOptimized IndexWriter writer SegmentInfo info throws IOException return info hasDeletions info hasSeparateNorms info dir writer getDirectory info getUseCompoundFile useCompoundFile public MergeSpecification findMergesForOptimize SegmentInfos infos IndexWriter writer int maxNumSegments Set segmentsToOptimize throws IOException MergeSpecification spec assert maxNumSegments if isOptimized infos writer maxNumSegments segmentsToOptimize int last infos size while last final SegmentInfo info infos info last if segmentsToOptimize contains info last break if last spec new MergeSpecification while last maxNumSegments mergeFactor spec add new OneMerge infos range last mergeFactor last useCompoundFile last mergeFactor if spec merges size if maxNumSegments if last isOptimized writer infos info spec add new OneMerge infos range last useCompoundFile else if last maxNumSegments final int finalMergeSize last maxNumSegments long bestSize int bestStart for int last finalMergeSize long sumSize for int finalMergeSize sumSize size infos info if sumSize size infos info sumSize bestSize bestStart bestSize sumSize spec add new OneMerge infos range bestStart bestStart finalMergeSize useCompoundFile else spec null else spec null return spec public MergeSpecification findMergesToExpungeDeletes SegmentInfos segmentInfos IndexWriter writer throws CorruptIndexException IOException this writer writer final int numSegments segmentInfos size message numSegments MergeSpecification spec new MergeSpecification int firstSegmentWithDeletions for int numSegments final SegmentInfo info segmentInfos info if info hasDeletions message info name if firstSegmentWithDeletions firstSegmentWithDeletions else if firstSegmentWithDeletions mergeFactor message firstSegmentWithDeletions spec add new OneMerge segmentInfos range firstSegmentWithDeletions useCompoundFile firstSegmentWithDeletions else if firstSegmentWithDeletions message firstSegmentWithDeletions spec add new OneMerge segmentInfos range firstSegmentWithDeletions useCompoundFile firstSegmentWithDeletions if firstSegmentWithDeletions message firstSegmentWithDeletions numSegments spec add new OneMerge segmentInfos range firstSegmentWithDeletions numSegments useCompoundFile return spec public MergeSpecification findMerges SegmentInfos infos IndexWriter writer throws IOException final int numSegments infos size this writer writer message numSegments float levels new float numSegments final float norm float Math log mergeFactor final Directory directory writer getDirectory for int numSegments final SegmentInfo info infos info long size size info if size size levels float Math log size norm final float levelFloor if minMergeSize levelFloor float else levelFloor float Math log minMergeSize norm MergeSpecification spec null int start while start numSegments float maxLevel levels start for int start numSegments final float level levels if level maxLevel maxLevel level float levelBottom if maxLevel levelFloor levelBottom else levelBottom float maxLevel LEVEL_LOG_SPAN if levelBottom levelFloor maxLevel levelFloor levelBottom levelFloor int upto numSegments while upto start if levels upto levelBottom break upto message levelBottom maxLevel upto start int end start mergeFactor while end upto boolean anyTooLarge false for int start end final SegmentInfo info infos info anyTooLarge size info maxMergeSize info docCount maxMergeDocs if anyTooLarge if spec null spec new MergeSpecification message start end spec add new OneMerge infos range start end useCompoundFile else message start end start end end start mergeFactor start upto return spec public void setMaxMergeDocs int maxMergeDocs this maxMergeDocs maxMergeDocs public int getMaxMergeDocs return maxMergeDocs public abstract class LockFactory protected String lockPrefix public void setLockPrefix String lockPrefix this lockPrefix lockPrefix public String getLockPrefix return this lockPrefix public abstract Lock makeLock String lockName abstract public void clearLock String lockName throws IOException public final class LowerCaseFilter extends TokenFilter public LowerCaseFilter TokenStream in super in public final Token next final Token reusableToken throws IOException assert reusableToken null Token nextToken input next reusableToken if nextToken null final char buffer nextToken termBuffer final int length nextToken termLength for int length buffer Character toLowerCase buffer return nextToken else return null class NonMatchingScorer extends Scorer public int doc throw new UnsupportedOperationException public boolean next throws IOException return false public float score throw new UnsupportedOperationException public boolean skipTo int target return false public Explanation explain int doc Explanation new Explanation setDescription return final class NormsWriterPerField extends InvertedDocEndConsumerPerField implements Comparable final NormsWriterPerThread perThread final FieldInfo fieldInfo final DocumentsWriter DocState docState int docIDs new int byte norms new byte int upto final DocInverter FieldInvertState fieldState public void reset docIDs ArrayUtil shrink docIDs upto norms ArrayUtil shrink norms upto upto public NormsWriterPerField final DocInverterPerField docInverterPerField final NormsWriterPerThread perThread final FieldInfo fieldInfo this perThread perThread this fieldInfo fieldInfo docState perThread docState fieldState docInverterPerField fieldState void abort upto public int compareTo Object other return fieldInfo name compareTo NormsWriterPerField other fieldInfo name void finish assert docIDs length norms length if fieldInfo isIndexed fieldInfo omitNorms if docIDs length upto assert docIDs length upto docIDs ArrayUtil grow docIDs upto norms ArrayUtil grow norms upto final float norm fieldState boost docState similarity lengthNorm fieldInfo name fieldState length norms upto Similarity encodeNorm norm docIDs upto docState docID upto public class SerialMergeScheduler extends MergeScheduler synchronized public void merge IndexWriter writer throws CorruptIndexException IOException while true MergePolicy OneMerge merge writer getNextMerge if merge null break writer merge merge public void close public class TopFieldDocs extends TopDocs public SortField fields TopFieldDocs int totalHits ScoreDoc scoreDocs SortField fields float maxScore super totalHits scoreDocs maxScore this fields fields public class SpanWeight implements Weight protected Similarity similarity protected float value protected float idf protected float queryNorm protected float queryWeight protected Set terms protected SpanQuery query public SpanWeight SpanQuery query Searcher searcher throws IOException this similarity query getSimilarity searcher this query query terms new HashSet query extractTerms terms idf this query getSimilarity searcher idf terms searcher public Query getQuery return query public float getValue return value public float sumOfSquaredWeights throws IOException public void normalize float queryNorm this queryNorm queryNorm public Scorer scorer IndexReader reader throws IOException return new SpanScorer query getSpans reader this similarity reader norms query getField public Explanation explain IndexReader reader int doc throws IOException ComplexExplanation result new ComplexExplanation result setDescription getQuery doc String field SpanQuery getQuery getField StringBuffer docFreqs new StringBuffer Iterator terms iterator while hasNext Term term Term next docFreqs append term text docFreqs append docFreqs append reader docFreq term if hasNext docFreqs append Explanation idfExpl new Explanation idf field docFreqs Explanation queryExpl new Explanation queryExpl setDescription getQuery Explanation boostExpl new Explanation getQuery getBoost if getQuery getBoost queryExpl addDetail boostExpl queryExpl addDetail idfExpl Explanation queryNormExpl new Explanation queryNorm queryExpl addDetail queryNormExpl queryExpl setValue boostExpl getValue idfExpl getValue queryNormExpl getValue result addDetail queryExpl ComplexExplanation fieldExpl new ComplexExplanation fieldExpl setDescription field query toString field doc Explanation tfExpl scorer reader explain doc fieldExpl addDetail tfExpl fieldExpl addDetail idfExpl Explanation fieldNormExpl new Explanation byte fieldNorms reader norms field float fieldNorm fieldNorms null Similarity decodeNorm fieldNorms doc fieldNormExpl setValue fieldNorm fieldNormExpl setDescription field doc fieldExpl addDetail fieldNormExpl fieldExpl setMatch Boolean valueOf tfExpl isMatch fieldExpl setValue tfExpl getValue idfExpl getValue fieldNormExpl getValue result addDetail fieldExpl result setMatch fieldExpl getMatch result setValue queryExpl getValue fieldExpl getValue if queryExpl getValue return fieldExpl return result public final class Document implements java io Serializable List fields new ArrayList private float boost public Document public void setBoost float boost this boost boost public float getBoost return boost public final void add Fieldable field fields add field public final void removeField String name Iterator it fields iterator while it hasNext Fieldable field Fieldable it next if field name equals name it remove return public final void removeFields String name Iterator it fields iterator while it hasNext Fieldable field Fieldable it next if field name equals name it remove public final Field getField String name for int fields size Field field Field fields get if field name equals name return field return null public Fieldable getFieldable String name for int fields size Fieldable field Fieldable fields get if field name equals name return field return null public final String get String name for int fields size Fieldable field Fieldable fields get if field name equals name field isBinary return field stringValue return null public final Enumeration fields return new Enumeration final Iterator iter fields iterator public boolean hasMoreElements return iter hasNext public Object nextElement return iter next public final List getFields return fields private final static Field NO_FIELDS new Field public final Field getFields String name List result new ArrayList for int fields size Field field Field fields get if field name equals name result add field if result size return NO_FIELDS return Field result toArray new Field result size private final static Fieldable NO_FIELDABLES new Fieldable public Fieldable getFieldables String name List result new ArrayList for int fields size Fieldable field Fieldable fields get if field name equals name result add field if result size return NO_FIELDABLES return Fieldable result toArray new Fieldable result size private final static String NO_STRINGS new String public final String getValues String name List result new ArrayList for int fields size Fieldable field Fieldable fields get if field name equals name field isBinary result add field stringValue if result size return NO_STRINGS return String result toArray new String result size private final static byte NO_BYTES new byte public final byte getBinaryValues String name List result new ArrayList for int fields size Fieldable field Fieldable fields get if field name equals name field isBinary result add field binaryValue if result size return NO_BYTES return byte result toArray new byte result size public final byte getBinaryValue String name for int fields size Fieldable field Fieldable fields get if field name equals name field isBinary return field binaryValue return null public final String toString StringBuffer buffer new StringBuffer buffer append for int fields size Fieldable field Fieldable fields get buffer append field toString if fields size buffer append buffer append return buffer toString public interface CharStream char readChar throws java io IOException int getColumn int getLine int getEndColumn int getEndLine int getBeginColumn int getBeginLine void backup int amount char BeginToken throws java io IOException String GetImage char GetSuffix int len void Done final class PhrasePositions PhrasePositions TermPositions int tp offset if tp next return false doc tp doc position return true final boolean skipTo int target throws IOException if tp skipTo target return false doc tp doc position return true final void firstPosition throws IOException nextPosition final boolean nextPosition throws IOException position tp nextPosition offset return true else return false final class SloppyPhraseScorer extends PhraseScorer private int slop private PhrasePositions repeats private boolean checkedRepeats SloppyPhraseScorer Weight weight TermPositions tps int offsets Similarity similarity int slop byte norms super weight tps offsets similarity norms this slop slop protected final float phraseFreq throws IOException int end initPhrasePositions float freq boolean done end while done PhrasePositions pp PhrasePositions pq pop int start pp position int next PhrasePositions pq top position boolean tpsDiffer true for int pos start pos next tpsDiffer pos pp position if pos next tpsDiffer if pp nextPosition break PhrasePositions pp2 null tpsDiffer pp repeats pp2 termPositionsDiffer pp null if pp2 null pp2 pp int matchLength end start if matchLength slop if pp position end end pp position return freq private PhrasePositions flip PhrasePositions pp PhrasePositions pp2 int PhrasePositions pp3 while pp3 PhrasePositions pq pop pp2 tmpPos pp3 for pq insert tmpPos pq put pp return pp2 private int initPhrasePositions throws IOException int end if checkedRepeats repeats null pq clear for PhrasePositions pp first pp null pp pp next pp firstPosition if pp position end end pp position return end for PhrasePositions pp first pp null pp pp next pp firstPosition if checkedRepeats checkedRepeats true HashMap null for PhrasePositions pp first pp null pp pp next int tpPos pp position pp offset for PhrasePositions pp2 pp next pp2 null pp2 pp2 next int tpPos2 pp2 position pp2 offset if tpPos2 tpPos if null new HashMap pp repeats true pp2 repeats true put pp null put pp2 null if null repeats PhrasePositions keySet toArray new PhrasePositions if repeats null for int repeats length PhrasePositions pp repeats PhrasePositions pp2 while pp2 termPositionsDiffer pp null pq clear for PhrasePositions pp first pp null pp pp next if pp position end end pp position if repeats null tmpPos new PhrasePositions pq size return end private PhrasePositions termPositionsDiffer PhrasePositions pp int tpPos pp position pp offset for int repeats length PhrasePositions pp2 repeats if pp2 pp continue int tpPos2 pp2 position pp2 offset if tpPos2 tpPos return null final class FieldInfos static final byte IS_INDEXED static final byte STORE_TERMVECTOR static final byte STORE_POSITIONS_WITH_TERMVECTOR static final byte STORE_OFFSET_WITH_TERMVECTOR static final byte OMIT_NORMS static final byte STORE_PAYLOADS static final byte OMIT_TF private ArrayList byNumber new ArrayList private HashMap byName new HashMap FieldInfos FieldInfos Directory String name throws IOException IndexInput input openInput name try read input finally input close synchronized public Object clone FieldInfos fis new FieldInfos final int numField byNumber size for int numField FieldInfo fi FieldInfo FieldInfo byNumber get clone fis byNumber add fi fis byName put fi name fi return fis synchronized public void add Document doc List fields doc getFields Iterator fieldIterator fields iterator while fieldIterator hasNext Fieldable field Fieldable fieldIterator next add field name field isIndexed field isTermVectorStored field isStorePositionWithTermVector field isStoreOffsetWithTermVector field getOmitNorms boolean hasProx final int numFields byNumber size for int numFields if fieldInfo omitTf return true return false synchronized public void addIndexed Collection names boolean storeTermVectors boolean storePositionWithTermVector boolean storeOffsetWithTermVector Iterator names iterator while hasNext add String next true storeTermVectors storePositionWithTermVector storeOffsetWithTermVector synchronized public void add Collection names boolean isIndexed Iterator names iterator while hasNext add String next isIndexed synchronized public void add String name boolean isIndexed add name isIndexed false false false false synchronized public void add String name boolean isIndexed boolean storeTermVector add name isIndexed storeTermVector false false false synchronized public void add String name boolean isIndexed boolean storeTermVector boolean storePositionWithTermVector boolean storeOffsetWithTermVector add name isIndexed storeTermVector storePositionWithTermVector storeOffsetWithTermVector false synchronized public void add String name boolean isIndexed boolean storeTermVector boolean storePositionWithTermVector boolean storeOffsetWithTermVector boolean omitNorms add name isIndexed storeTermVector storePositionWithTermVector storeOffsetWithTermVector omitNorms false false synchronized public FieldInfo add String name boolean isIndexed boolean storeTermVector boolean storePositionWithTermVector boolean storeOffsetWithTermVector boolean omitNorms boolean storePayloads boolean omitTf FieldInfo fi fieldInfo name if fi null return addInternal name isIndexed storeTermVector storePositionWithTermVector storeOffsetWithTermVector omitNorms storePayloads omitTf else fi update isIndexed storeTermVector storePositionWithTermVector storeOffsetWithTermVector omitNorms storePayloads omitTf return fi synchronized public FieldInfo add FieldInfo fieldInfo FieldInfo fi fieldInfo fieldInfo name if fi null return addInternal fieldInfo name fieldInfo isIndexed fieldInfo storeTermVector fieldInfo storePositionWithTermVector fieldInfo storeOffsetWithTermVector fieldInfo omitNorms fieldInfo storePayloads fieldInfo omitTf else fi update fieldInfo return fi private FieldInfo addInternal String name boolean isIndexed boolean storeTermVector boolean storePositionWithTermVector boolean storeOffsetWithTermVector boolean omitNorms boolean storePayloads boolean omitTf FieldInfo fi new FieldInfo name isIndexed byNumber size storeTermVector storePositionWithTermVector storeOffsetWithTermVector omitNorms storePayloads omitTf byNumber add fi byName put name fi return fi public int fieldNumber String fieldName FieldInfo fi fieldInfo fieldName return fi null fi number public FieldInfo fieldInfo String fieldName return FieldInfo byName get fieldName public String fieldName int fieldNumber FieldInfo fi fieldInfo fieldNumber return fi null fi name public FieldInfo fieldInfo int fieldNumber return fieldNumber FieldInfo byNumber get fieldNumber null public int size return byNumber size public boolean hasVectors boolean hasVectors false for int size if fieldInfo storeTermVector hasVectors true break return hasVectors public void write Directory String name throws IOException IndexOutput output createOutput name try write output finally output close public void write IndexOutput output throws IOException output writeVInt size for int size FieldInfo fi fieldInfo byte bits if fi isIndexed bits IS_INDEXED if fi storeTermVector bits STORE_TERMVECTOR if fi storePositionWithTermVector bits STORE_POSITIONS_WITH_TERMVECTOR if fi storeOffsetWithTermVector bits STORE_OFFSET_WITH_TERMVECTOR if fi omitNorms bits OMIT_NORMS if fi storePayloads bits STORE_PAYLOADS if fi omitTf bits OMIT_TF output writeString fi name output writeByte bits private void read IndexInput input throws IOException for int size String name input readString intern byte bits input readByte boolean isIndexed bits IS_INDEXED boolean storeTermVector bits STORE_TERMVECTOR boolean storePositionsWithTermVector bits STORE_POSITIONS_WITH_TERMVECTOR boolean storeOffsetWithTermVector bits STORE_OFFSET_WITH_TERMVECTOR boolean omitNorms bits OMIT_NORMS boolean storePayloads bits STORE_PAYLOADS boolean omitTf bits OMIT_TF addInternal name isIndexed storeTermVector storePositionsWithTermVector storeOffsetWithTermVector omitNorms storePayloads omitTf public interface FieldSelector extends Serializable FieldSelectorResult accept String fieldName final class CompoundFileWriter private static final class FileEntry String file long directoryOffset long dataOffset private Directory directory private String fileName private HashSet ids private LinkedList entries private boolean merged false private SegmentMerger CheckAbort checkAbort public CompoundFileWriter Directory dir String name this dir name null CompoundFileWriter Directory dir String name SegmentMerger CheckAbort checkAbort if dir null throw new NullPointerException if name null throw new NullPointerException this checkAbort checkAbort directory dir fileName name ids new HashSet entries new LinkedList public Directory getDirectory return directory public String getName return fileName public void addFile String file if merged throw new IllegalStateException if file null throw new NullPointerException if ids add file throw new IllegalArgumentException file FileEntry entry new FileEntry entry file file entries add entry public void close throws IOException if merged throw new IllegalStateException if entries isEmpty throw new IllegalStateException merged true IndexOutput os null try os directory createOutput fileName os writeVInt entries size Iterator it entries iterator long totalSize while it hasNext FileEntry fe FileEntry it next fe directoryOffset os getFilePointer os writeString fe file totalSize directory fileLength fe file final long finalLength totalSize os getFilePointer os setLength finalLength byte buffer new byte it entries iterator while it hasNext FileEntry fe FileEntry it next fe dataOffset os getFilePointer copyFile fe os buffer it entries iterator while it hasNext FileEntry fe FileEntry it next os seek fe directoryOffset os writeLong fe dataOffset assert finalLength os length IndexOutput tmp os os null tmp close finally if os null try os close catch IOException private void copyFile FileEntry source IndexOutput os byte buffer throws IOException IndexInput is null try long startPtr os getFilePointer is directory openInput source file long length is length long remainder length int chunk buffer length while remainder int len int Math min chunk remainder is readBytes buffer len false os writeBytes buffer len remainder len if checkAbort null checkAbort work if remainder throw new IOException remainder source file length chunk long endPtr os getFilePointer long diff endPtr startPtr if diff length throw new IOException diff length finally if is null is close public class ParallelReader extends IndexReader private List readers new ArrayList boolean incRefReaders false private SortedMap fieldToReader new TreeMap private Map readerToFields new HashMap private List storedFieldReaders new ArrayList private int maxDoc private int numDocs private boolean hasDeletions public ParallelReader throws IOException this true public ParallelReader boolean closeSubReaders throws IOException super this incRefReaders closeSubReaders public void add IndexReader reader throws IOException ensureOpen add reader false public void add IndexReader reader boolean ignoreStoredFields throws IOException ensureOpen if readers size this maxDoc reader maxDoc this numDocs reader numDocs this hasDeletions reader hasDeletions throw new IllegalArgumentException maxDoc reader maxDoc if reader numDocs numDocs throw new IllegalArgumentException numDocs reader numDocs Collection fields reader getFieldNames IndexReader FieldOption ALL readerToFields put reader fields Iterator fields iterator String field String next if fieldToReader get field null fieldToReader put field reader if ignoreStoredFields readers add reader if incRefReaders reader incRef decrefOnClose add Boolean valueOf incRefReaders public IndexReader reopen throws CorruptIndexException IOException ensureOpen boolean reopened false List newReaders new ArrayList List newDecrefOnClose new ArrayList boolean success false try for int readers size IndexReader oldReader IndexReader readers get IndexReader newReader oldReader reopen newReaders add newReader if newReader oldReader reopened true if reopened ParallelReader pr new ParallelReader for int readers size IndexReader oldReader IndexReader readers get IndexReader newReader IndexReader newReaders get if newReader oldReader newDecrefOnClose add Boolean TRUE newReader incRef else newDecrefOnClose add Boolean FALSE pr add newReader storedFieldReaders contains oldReader pr decrefOnClose newDecrefOnClose pr incRefReaders incRefReaders success true return pr else success true return this finally if success reopened for int newReaders size IndexReader IndexReader newReaders get if null try if Boolean newDecrefOnClose get booleanValue decRef else close catch IOException ignore public int numDocs return numDocs public int maxDoc return maxDoc public boolean hasDeletions return hasDeletions public boolean isDeleted int if readers size return IndexReader readers get isDeleted return false protected void doDelete int throws CorruptIndexException IOException for int readers size IndexReader readers get deleteDocument hasDeletions true protected void doUndeleteAll throws CorruptIndexException IOException for int readers size IndexReader readers get undeleteAll hasDeletions false public Document document int FieldSelector fieldSelector throws CorruptIndexException IOException ensureOpen Document result new Document for int storedFieldReaders size IndexReader reader IndexReader storedFieldReaders get boolean include fieldSelector null if include Iterator it Collection readerToFields get reader iterator while it hasNext if fieldSelector accept String it next FieldSelectorResult NO_LOAD include true break if include Iterator fieldIterator reader document fieldSelector getFields iterator while fieldIterator hasNext result add Fieldable fieldIterator next return result public TermFreqVector getTermFreqVectors int throws IOException ensureOpen ArrayList results new ArrayList Iterator fieldToReader entrySet iterator while hasNext Map Entry Map Entry next String field String getKey IndexReader reader IndexReader getValue TermFreqVector vector reader getTermFreqVector field if vector null results add vector return TermFreqVector results toArray new TermFreqVector results size public TermFreqVector getTermFreqVector int String field throws IOException ensureOpen IndexReader reader IndexReader fieldToReader get field return reader null null reader getTermFreqVector field public void getTermFreqVector int docNumber String field TermVectorMapper mapper throws IOException ensureOpen IndexReader reader IndexReader fieldToReader get field if reader null reader getTermFreqVector docNumber field mapper public void getTermFreqVector int docNumber TermVectorMapper mapper throws IOException ensureOpen ensureOpen Iterator fieldToReader entrySet iterator while hasNext Map Entry Map Entry next String field String getKey IndexReader reader IndexReader getValue reader getTermFreqVector docNumber field mapper public boolean hasNorms String field throws IOException ensureOpen IndexReader reader IndexReader fieldToReader get field return reader null false reader hasNorms field public byte norms String field throws IOException ensureOpen IndexReader reader IndexReader fieldToReader get field return reader null null reader norms field public void norms String field byte result int offset throws IOException ensureOpen IndexReader reader IndexReader fieldToReader get field if reader null reader norms field result offset protected void doSetNorm int String field byte value throws CorruptIndexException IOException IndexReader reader IndexReader fieldToReader get field if reader null reader doSetNorm field value public TermEnum terms throws IOException ensureOpen return new ParallelTermEnum public TermEnum terms Term term throws IOException ensureOpen return new ParallelTermEnum term public int docFreq Term term throws IOException ensureOpen IndexReader reader IndexReader fieldToReader get term field return reader null reader docFreq term public TermDocs termDocs Term term throws IOException ensureOpen return new ParallelTermDocs term public TermDocs termDocs throws IOException ensureOpen return new ParallelTermDocs public TermPositions termPositions Term term throws IOException ensureOpen return new ParallelTermPositions term public TermPositions termPositions throws IOException ensureOpen return new ParallelTermPositions public boolean isCurrent throws CorruptIndexException IOException for int readers size if IndexReader readers get isCurrent return false return true public boolean isOptimized for int readers size if IndexReader readers get isOptimized return false return true public long getVersion throw new UnsupportedOperationException IndexReader getSubReaders return IndexReader readers toArray new IndexReader readers size protected void doCommit throws IOException for int readers size IndexReader readers get commit protected synchronized void doClose throws IOException for int readers size if Boolean decrefOnClose get booleanValue IndexReader readers get decRef else IndexReader readers get close public Collection getFieldNames IndexReader FieldOption fieldNames ensureOpen Set fieldSet new HashSet for int readers size IndexReader reader IndexReader readers get Collection names reader getFieldNames fieldNames fieldSet addAll names return fieldSet private class ParallelTermEnum extends TermEnum private String field private Iterator fieldIterator private TermEnum termEnum public ParallelTermEnum throws IOException field String fieldToReader firstKey if field null termEnum IndexReader fieldToReader get field terms public ParallelTermEnum Term term throws IOException field term field IndexReader reader IndexReader fieldToReader get field if reader null termEnum reader terms term public boolean next throws IOException if termEnum null return false if termEnum next termEnum term field field if fieldIterator null fieldIterator fieldToReader tailMap field keySet iterator while fieldIterator hasNext field String fieldIterator next termEnum IndexReader fieldToReader get field terms new Term field Term term termEnum term if term null term field field return true else termEnum close public Term term if termEnum null return null return termEnum term public int docFreq if termEnum null return return termEnum docFreq public void close throws IOException if termEnum null termEnum close private class ParallelTermDocs implements TermDocs protected TermDocs termDocs public ParallelTermDocs public ParallelTermDocs Term term throws IOException seek term public int doc return termDocs doc public int freq return termDocs freq public void seek Term term throws IOException IndexReader reader IndexReader fieldToReader get term field termDocs reader null reader termDocs term null public void seek TermEnum termEnum throws IOException seek termEnum term public boolean next throws IOException if termDocs null return false return termDocs next public int read final int docs final int freqs throws IOException if termDocs null return return termDocs read docs freqs public boolean skipTo int target throws IOException if termDocs null return false return termDocs skipTo target public void close throws IOException if termDocs null termDocs close private class ParallelTermPositions extends ParallelTermDocs implements TermPositions public ParallelTermPositions public ParallelTermPositions Term term throws IOException seek term public void seek Term term throws IOException IndexReader reader IndexReader fieldToReader get term field termDocs reader null reader termPositions term null public int nextPosition throws IOException return TermPositions termDocs nextPosition public int getPayloadLength return TermPositions termDocs getPayloadLength public byte getPayload byte data int offset throws IOException return TermPositions termDocs getPayload data offset public boolean isPayloadAvailable return TermPositions termDocs isPayloadAvailable public class OpenBitSetDISI extends OpenBitSet public OpenBitSetDISI DocIdSetIterator disi int maxSize throws IOException super maxSize inPlaceOr disi public OpenBitSetDISI int maxSize super maxSize public void inPlaceOr DocIdSetIterator disi throws IOException while disi next disi doc size fastSet disi doc public void inPlaceAnd DocIdSetIterator disi throws IOException int index nextSetBit int lastNotCleared while index disi skipTo index while index index disi doc fastClear index index nextSetBit index if index disi doc lastNotCleared index index assert index index disi doc clear lastNotCleared size public void inPlaceNot DocIdSetIterator disi throws IOException while disi next disi doc size fastClear disi doc public void inPlaceXor DocIdSetIterator disi throws IOException while disi next disi doc size fastFlip disi doc final class DocFieldProcessorPerField final DocFieldConsumerPerField consumer final FieldInfo fieldInfo DocFieldProcessorPerField next int lastGen int fieldCount Fieldable fields new Fieldable public DocFieldProcessorPerField final DocFieldProcessorPerThread perThread final FieldInfo fieldInfo this consumer perThread consumer addField fieldInfo this fieldInfo fieldInfo public void abort consumer abort final class DocFieldConsumers extends DocFieldConsumer final DocFieldConsumer one final DocFieldConsumer two public DocFieldConsumers DocFieldConsumer one DocFieldConsumer two this one one this two two void setFieldInfos FieldInfos fieldInfos super setFieldInfos fieldInfos one setFieldInfos fieldInfos two setFieldInfos fieldInfos public void flush Map threadsAndFields DocumentsWriter FlushState state throws IOException Map oneThreadsAndFields new HashMap Map twoThreadsAndFields new HashMap Iterator it threadsAndFields entrySet iterator while it hasNext Map Entry entry Map Entry it next DocFieldConsumersPerThread perThread DocFieldConsumersPerThread entry getKey Collection fields Collection entry getValue Iterator fieldsIt fields iterator Collection oneFields new HashSet Collection twoFields new HashSet while fieldsIt hasNext DocFieldConsumersPerField perField DocFieldConsumersPerField fieldsIt next oneFields add perField one twoFields add perField two oneThreadsAndFields put perThread one oneFields twoThreadsAndFields put perThread two twoFields one flush oneThreadsAndFields state two flush twoThreadsAndFields state public void closeDocStore DocumentsWriter FlushState state throws IOException try one closeDocStore state finally two closeDocStore state public void abort try one abort finally two abort public boolean freeRAM boolean any one freeRAM any two freeRAM return any public DocFieldConsumerPerThread addThread DocFieldProcessorPerThread docFieldProcessorPerThread throws IOException return new DocFieldConsumersPerThread docFieldProcessorPerThread this one addThread docFieldProcessorPerThread two addThread docFieldProcessorPerThread PerDoc docFreeList new PerDoc int freeCount int allocCount synchronized PerDoc getPerDoc if freeCount allocCount if allocCount docFreeList length assert allocCount docFreeList length docFreeList new PerDoc ArrayUtil getNextSize allocCount return new PerDoc else return docFreeList freeCount synchronized void freePerDoc PerDoc perDoc assert freeCount docFreeList length docFreeList freeCount perDoc class PerDoc extends DocumentsWriter DocWriter DocumentsWriter DocWriter one DocumentsWriter DocWriter two public long sizeInBytes return one sizeInBytes two sizeInBytes public void finish throws IOException try try one finish finally two finish finally freePerDoc this public void abort try try one abort finally two abort finally freePerDoc this abstract class InvertedDocEndConsumerPerThread abstract void startDocument abstract InvertedDocEndConsumerPerField addField DocInverterPerField docInverterPerField FieldInfo fieldInfo abstract void finishDocument abstract void abort public class FilteredQuery extends Query Query query Filter filter public FilteredQuery Query query Filter filter this query query this filter filter protected Weight createWeight final Searcher searcher throws IOException final Weight weight query createWeight searcher final Similarity similarity query getSimilarity searcher return new Weight private float value public float getValue return value public float sumOfSquaredWeights throws IOException return weight sumOfSquaredWeights getBoost getBoost public void normalize float weight normalize value weight getValue getBoost public Explanation explain IndexReader ir int throws IOException Explanation inner weight explain ir if getBoost Explanation preBoost inner inner new Explanation inner getValue getBoost inner addDetail new Explanation getBoost inner addDetail preBoost Filter FilteredQuery this filter DocIdSetIterator docIdSetIterator getDocIdSet ir iterator if docIdSetIterator skipTo docIdSetIterator doc return inner else Explanation result new Explanation toString result addDetail inner return result public Query getQuery return FilteredQuery this public Scorer scorer IndexReader indexReader throws IOException final Scorer scorer weight scorer indexReader final DocIdSetIterator docIdSetIterator filter getDocIdSet indexReader iterator return new Scorer similarity private boolean advanceToCommon throws IOException while scorer doc docIdSetIterator doc if scorer doc docIdSetIterator doc if scorer skipTo docIdSetIterator doc return false else if docIdSetIterator skipTo scorer doc return false return true public boolean next throws IOException return docIdSetIterator next scorer next advanceToCommon public int doc return scorer doc public boolean skipTo int throws IOException return docIdSetIterator skipTo scorer skipTo docIdSetIterator doc advanceToCommon public float score throws IOException return getBoost scorer score public Explanation explain int throws IOException Explanation exp scorer explain if docIdSetIterator skipTo docIdSetIterator doc exp setDescription exp getDescription exp setValue getBoost exp getValue else exp setDescription exp getDescription exp setValue return exp public Query rewrite IndexReader reader throws IOException Query rewritten query rewrite reader if rewritten query FilteredQuery clone FilteredQuery this clone clone query rewritten return clone else return this public Query getQuery return query public Filter getFilter return filter public void extractTerms Set terms getQuery extractTerms terms public String toString String StringBuffer buffer new StringBuffer buffer append buffer append query toString buffer append buffer append filter buffer append ToStringUtils boost getBoost return buffer toString public boolean equals Object if instanceof FilteredQuery FilteredQuery fq FilteredQuery return query equals fq query filter equals fq filter getBoost fq getBoost return false public int hashCode return query hashCode filter hashCode Float floatToRawIntBits getBoost public class FloatFieldSource extends FieldCacheSource private FieldCache FloatParser parser public FloatFieldSource String field this field null public FloatFieldSource String field FieldCache FloatParser parser super field this parser parser public String description return super description public DocValues getCachedFieldValues FieldCache cache String field IndexReader reader throws IOException final float arr parser null cache getFloats reader field cache getFloats reader field parser return new DocValues public float floatVal int doc return arr doc public String toString int doc return description arr doc Object getInnerArray return arr public boolean cachedFieldSourceEquals FieldCacheSource if getClass FloatFieldSource class return false FloatFieldSource other FloatFieldSource return this parser null other parser null this parser getClass other parser getClass public int cachedFieldSourceHashCode return parser null Float class hashCode parser getClass hashCode public abstract class MergeScheduler abstract void merge IndexWriter writer throws CorruptIndexException IOException abstract void close throws CorruptIndexException IOException public class RangeQuery extends Query private Term lowerTerm private Term upperTerm private boolean inclusive private Collator collator public RangeQuery Term lowerTerm Term upperTerm boolean inclusive if lowerTerm null upperTerm null throw new IllegalArgumentException if lowerTerm null upperTerm null lowerTerm field upperTerm field throw new IllegalArgumentException if lowerTerm null this lowerTerm lowerTerm else this lowerTerm new Term upperTerm field this upperTerm upperTerm this inclusive inclusive public RangeQuery Term lowerTerm Term upperTerm boolean inclusive Collator collator this lowerTerm upperTerm inclusive this collator collator public Query rewrite IndexReader reader throws IOException BooleanQuery query new BooleanQuery true String testField getField if collator null TermEnum enumerator reader terms new Term testField String lowerTermText lowerTerm null lowerTerm text null String upperTermText upperTerm null upperTerm text null try do Term term enumerator term if lowerTermText null inclusive collator compare term text lowerTermText collator compare term text lowerTermText upperTermText null inclusive collator compare term text upperTermText collator compare term text upperTermText addTermToQuery term query while enumerator next finally enumerator close TermEnum enumerator reader terms lowerTerm try boolean checkLower false checkLower true do Term term enumerator term if checkLower term text compareTo lowerTerm text checkLower false if upperTerm null int compare upperTerm text compareTo term text if compare inclusive compare break else break while enumerator next finally enumerator close return query private void addTermToQuery Term term BooleanQuery query TermQuery tq new TermQuery term public String getField return lowerTerm null lowerTerm field upperTerm field public Term getLowerTerm return lowerTerm public Term getUpperTerm return upperTerm public boolean isInclusive return inclusive public Collator getCollator return collator public String toString String field StringBuffer buffer new StringBuffer if getField equals field buffer append getField buffer append buffer append inclusive buffer append lowerTerm null lowerTerm text buffer append buffer append upperTerm null upperTerm text buffer append inclusive buffer append ToStringUtils boost getBoost return buffer toString public boolean equals Object if this return true if instanceof RangeQuery return false final RangeQuery other RangeQuery if this getBoost other getBoost return false if this inclusive other inclusive return false if this collator null this collator equals other collator return false if this lowerTerm null this lowerTerm equals other lowerTerm other lowerTerm null return false if this upperTerm null this upperTerm equals other upperTerm other upperTerm null return false return true public int hashCode int Float floatToIntBits getBoost lowerTerm null lowerTerm hashCode upperTerm null upperTerm hashCode this inclusive collator null collator hashCode return public final class FuzzyTermEnum extends FilteredTermEnum private static final int TYPICAL_LONGEST_WORD_IN_INDEX private int private float similarity private boolean endEnum false private Term searchTerm null private final String field private final String text private final String prefix private final float minimumSimilarity private final float scale_factor private final int maxDistances new int TYPICAL_LONGEST_WORD_IN_INDEX public FuzzyTermEnum IndexReader reader Term term throws IOException this reader term FuzzyQuery defaultMinSimilarity FuzzyQuery defaultPrefixLength public FuzzyTermEnum IndexReader reader Term term float minSimilarity throws IOException this reader term minSimilarity FuzzyQuery defaultPrefixLength public FuzzyTermEnum IndexReader reader Term term final float minSimilarity final int prefixLength throws IOException super if minSimilarity throw new IllegalArgumentException else if minSimilarity throw new IllegalArgumentException if prefixLength throw new IllegalArgumentException this minimumSimilarity minSimilarity this scale_factor minimumSimilarity this searchTerm term this field searchTerm field final int fullSearchTermLength searchTerm text length final int realPrefixLength prefixLength fullSearchTermLength fullSearchTermLength prefixLength this text searchTerm text substring realPrefixLength this prefix searchTerm text substring realPrefixLength initializeMaxDistances this initDistanceArray setEnum reader terms new Term searchTerm field prefix protected final boolean termCompare Term term if field term field term text startsWith prefix final String target term text substring prefix length this similarity similarity target return similarity minimumSimilarity endEnum true return false public final float difference return float similarity minimumSimilarity scale_factor public final boolean endEnum return endEnum private static final int min int int int final int return private final int initDistanceArray return new int this text length TYPICAL_LONGEST_WORD_IN_INDEX private synchronized final float similarity final String target final int target length final int text length if return prefix length float prefix length if return prefix length float prefix length final int maxDistance getMaxDistance if maxDistance Math abs return if length growDistanceArray for int for int for int int bestPossibleEditDistance final char s_i text charAt for int if s_i target charAt min else min bestPossibleEditDistance Math min bestPossibleEditDistance return return float float prefix length Math min private void growDistanceArray int for int length new int private final int getMaxDistance int return maxDistances length maxDistances calculateMaxDistance private void initializeMaxDistances for int maxDistances length maxDistances calculateMaxDistance private int calculateMaxDistance int return int minimumSimilarity Math min text length prefix length public void close throws IOException public abstract class Lock public static long LOCK_POLL_INTERVAL public static final long LOCK_OBTAIN_WAIT_FOREVER public abstract boolean obtain throws IOException protected Throwable failureReason public boolean obtain long lockWaitTimeout throws LockObtainFailedException IOException failureReason null boolean locked obtain if lockWaitTimeout lockWaitTimeout LOCK_OBTAIN_WAIT_FOREVER throw new IllegalArgumentException lockWaitTimeout long maxSleepCount lockWaitTimeout LOCK_POLL_INTERVAL long sleepCount while locked if lockWaitTimeout LOCK_OBTAIN_WAIT_FOREVER sleepCount maxSleepCount String reason this toString if failureReason null reason failureReason LockObtainFailedException new LockObtainFailedException reason if failureReason null initCause failureReason throw try Thread sleep LOCK_POLL_INTERVAL catch InterruptedException throw new IOException toString locked obtain return locked public abstract void release throws IOException public abstract boolean isLocked public abstract static class With private Lock lock private long lockWaitTimeout public With Lock lock long lockWaitTimeout this lock lock this lockWaitTimeout lockWaitTimeout protected abstract Object doBody throws IOException public Object run throws LockObtainFailedException IOException boolean locked false try locked lock obtain lockWaitTimeout return doBody finally if locked lock release final class DocInverter extends DocFieldConsumer final InvertedDocConsumer consumer final InvertedDocEndConsumer endConsumer public DocInverter InvertedDocConsumer consumer InvertedDocEndConsumer endConsumer this consumer consumer this endConsumer endConsumer void setFieldInfos FieldInfos fieldInfos super setFieldInfos fieldInfos consumer setFieldInfos fieldInfos endConsumer setFieldInfos fieldInfos void flush Map threadsAndFields DocumentsWriter FlushState state throws IOException Map childThreadsAndFields new HashMap Map endChildThreadsAndFields new HashMap Iterator it threadsAndFields entrySet iterator while it hasNext Map Entry entry Map Entry it next DocInverterPerThread perThread DocInverterPerThread entry getKey Collection fields Collection entry getValue Iterator fieldsIt fields iterator Collection childFields new HashSet Collection endChildFields new HashSet while fieldsIt hasNext DocInverterPerField perField DocInverterPerField fieldsIt next childFields add perField consumer endChildFields add perField endConsumer childThreadsAndFields put perThread consumer childFields endChildThreadsAndFields put perThread endConsumer endChildFields consumer flush childThreadsAndFields state endConsumer flush endChildThreadsAndFields state public void closeDocStore DocumentsWriter FlushState state throws IOException consumer closeDocStore state endConsumer closeDocStore state void abort consumer abort endConsumer abort public boolean freeRAM return consumer freeRAM public DocFieldConsumerPerThread addThread DocFieldProcessorPerThread docFieldProcessorPerThread return new DocInverterPerThread docFieldProcessorPerThread this final static class FieldInvertState int position int length int offset float boost void reset float docBoost position length offset boost docBoost public class SpanFirstQuery extends SpanQuery private SpanQuery match private int end public SpanFirstQuery SpanQuery match int end this match match this end end public SpanQuery getMatch return match public int getEnd return end public String getField return match getField public Collection getTerms return match getTerms public String toString String field StringBuffer buffer new StringBuffer buffer append buffer append match toString field buffer append buffer append end buffer append buffer append ToStringUtils boost getBoost return buffer toString public void extractTerms Set terms match extractTerms terms public PayloadSpans getPayloadSpans IndexReader reader throws IOException return PayloadSpans getSpans reader public Spans getSpans final IndexReader reader throws IOException return new PayloadSpans private PayloadSpans spans match getPayloadSpans reader public boolean next throws IOException if end end return true return false public boolean skipTo int target throws IOException if spans skipTo target return false return spans end end next public int doc return spans doc public int start return spans start public int end return spans end ArrayList result null if spans isPayloadAvailable result new ArrayList spans getPayload public boolean isPayloadAvailable return spans isPayloadAvailable public String toString return SpanFirstQuery this toString public Query rewrite IndexReader reader throws IOException SpanFirstQuery clone null SpanQuery rewritten SpanQuery match rewrite reader if rewritten match clone SpanFirstQuery this clone clone match rewritten if clone null else public boolean equals Object if this return true if instanceof SpanFirstQuery return false SpanFirstQuery other SpanFirstQuery return this end other end this match equals other match this getBoost other getBoost public int hashCode int match hashCode Float floatToRawIntBits getBoost end return public class TopDocs implements java io Serializable public int totalHits public ScoreDoc scoreDocs private float maxScore public float getMaxScore return maxScore public void setMaxScore float maxScore this maxScore maxScore public TopDocs int totalHits ScoreDoc scoreDocs float maxScore this totalHits totalHits this scoreDocs scoreDocs this maxScore maxScore public class TopFieldDocCollector extends TopDocCollector private FieldDoc reusableFD public TopFieldDocCollector IndexReader reader Sort sort int numHits throws IOException super new FieldSortedHitQueue reader sort fields numHits public void collect int doc float score if score totalHits if reusableFD null reusableFD new FieldDoc doc score else reusableFD score score reusableFD doc doc reusableFD FieldDoc hq insertWithOverflow reusableFD public TopDocs topDocs FieldSortedHitQueue fshq FieldSortedHitQueue hq ScoreDoc scoreDocs new ScoreDoc fshq size scoreDocs fshq fillFields FieldDoc fshq pop return new TopFieldDocs totalHits scoreDocs fshq getFields fshq getMaxScore public abstract class Filter implements java io Serializable public BitSet bits IndexReader reader throws IOException return null public DocIdSet getDocIdSet IndexReader reader throws IOException return new DocIdBitSet bits reader public interface FieldCache public static final int STRING_INDEX public static class StringIndex public final String lookup public final int order public StringIndex int values String lookup this order values this lookup lookup public interface ByteParser public byte parseByte String string public interface ShortParser public short parseShort String string public interface IntParser public int parseInt String string public interface FloatParser public float parseFloat String string public static FieldCache DEFAULT new FieldCacheImpl public byte getBytes IndexReader reader String field throws IOException public byte getBytes IndexReader reader String field ByteParser parser throws IOException public short getShorts IndexReader reader String field throws IOException public short getShorts IndexReader reader String field ShortParser parser throws IOException public int getInts IndexReader reader String field throws IOException public int getInts IndexReader reader String field IntParser parser throws IOException public float getFloats IndexReader reader String field throws IOException public float getFloats IndexReader reader String field FloatParser parser throws IOException public String getStrings IndexReader reader String field throws IOException public StringIndex getStringIndex IndexReader reader String field throws IOException public Object getAuto IndexReader reader String field throws IOException public Comparable getCustom IndexReader reader String field SortComparator comparator throws IOException public abstract class IndexInput implements Cloneable public abstract byte readByte throws IOException public abstract void readBytes byte int offset int len throws IOException public void readBytes byte int offset int len boolean useBuffer throws IOException readBytes offset len public int readInt throws IOException return readByte readByte readByte readByte public int readVInt throws IOException byte readByte int for int shift shift readByte shift return public long readLong throws IOException return long readInt readInt public long readVLong throws IOException byte readByte long for int shift shift readByte shift return public void setModifiedUTF8StringsMode preUTF8Strings true public String readString throws IOException if preUTF8Strings return readModifiedUTF8String int length readVInt if bytes null length bytes length bytes new byte int length readBytes bytes length return new String bytes length private String readModifiedUTF8String throws IOException int length readVInt if chars null length chars length chars new char length readChars chars length return new String chars length public void readChars char buffer int start int length throws IOException final int end start length for int start end byte readByte if buffer char else if buffer char readByte else buffer char readByte readByte public void skipChars int length throws IOException for int length byte readByte if else if else readByte readByte public abstract void close throws IOException public abstract long getFilePointer public abstract void seek long pos throws IOException public abstract long length public Object clone IndexInput clone null try clone IndexInput super clone catch CloneNotSupportedException clone bytes null clone chars null return clone public abstract class DocValues public abstract float floatVal int doc public int intVal int doc return int floatVal doc public long longVal int doc return long floatVal doc public double doubleVal int doc return double floatVal doc public String strVal int doc return Float toString floatVal doc public abstract String toString int doc public Explanation explain int doc return new Explanation floatVal doc toString doc Object getInnerArray throw new UnsupportedOperationException private float minVal private float maxVal private float avgVal private boolean computed false private void compute if computed return minVal Float MAX_VALUE maxVal float sum int while true float val try val floatVal catch ArrayIndexOutOfBoundsException break sum val minVal Math min minVal val maxVal Math max maxVal val avgVal sum computed true public float getMinValue compute return minVal public float getMaxValue compute return maxVal public float getAverageValue compute return avgVal final class ExactPhraseScorer extends PhraseScorer ExactPhraseScorer Weight weight TermPositions tps int offsets Similarity similarity byte norms super weight tps offsets similarity norms protected final float phraseFreq throws IOException pq clear for PhrasePositions pp first pp null pp pp next pp firstPosition int freq do if first nextPosition return float freq while first position last position firstToLast while last nextPosition return float freq final class DocFieldConsumersPerField extends DocFieldConsumerPerField final DocFieldConsumerPerField one final DocFieldConsumerPerField two final DocFieldConsumersPerThread perThread public DocFieldConsumersPerField DocFieldConsumersPerThread perThread DocFieldConsumerPerField one DocFieldConsumerPerField two this perThread perThread this one one this two two public void processFields Fieldable fields int count throws IOException one processFields fields count two processFields fields count public void abort try one abort finally two abort class FieldCacheImpl implements FieldCache abstract static class Cache private final Map readerCache new WeakHashMap protected abstract Object createValue IndexReader reader Object key throws IOException public Object get IndexReader reader Object key throws IOException Map innerCache Object value synchronized readerCache innerCache Map readerCache get reader if innerCache null innerCache new HashMap readerCache put reader innerCache value null else value innerCache get key if value null value new CreationPlaceholder innerCache put key value if value instanceof CreationPlaceholder synchronized value CreationPlaceholder progress CreationPlaceholder value if progress value null progress value createValue reader key synchronized readerCache innerCache put key progress value return progress value return value static final class CreationPlaceholder Object value static class Entry Entry String field int type Locale locale this field field intern this type type this custom null this locale locale Entry String field Object custom this field field intern this type SortField CUSTOM this custom custom this locale null public boolean equals Object if instanceof Entry Entry other Entry if other field field other type type if other locale null locale null other locale equals locale if other custom null if custom null return true else if other custom equals custom return true return false public int hashCode return field hashCode type custom null custom hashCode locale null locale hashCode private static final ByteParser BYTE_PARSER new ByteParser public byte parseByte String value return Byte parseByte value private static final ShortParser SHORT_PARSER new ShortParser public short parseShort String value return Short parseShort value private static final IntParser INT_PARSER new IntParser public int parseInt String value return Integer parseInt value private static final FloatParser FLOAT_PARSER new FloatParser public float parseFloat String value return Float parseFloat value public byte getBytes IndexReader reader String field throws IOException return getBytes reader field BYTE_PARSER public byte getBytes IndexReader reader String field ByteParser parser throws IOException return byte bytesCache get reader new Entry field parser Cache bytesCache new Cache protected Object createValue IndexReader reader Object entryKey throws IOException Entry entry Entry entryKey String field entry field ByteParser parser ByteParser entry custom final byte retArray new byte reader maxDoc TermDocs termDocs reader termDocs TermEnum termEnum reader terms new Term field try do Term term termEnum term if term null term field field break byte termval parser parseByte term text termDocs seek termEnum while termDocs next retArray termDocs doc termval while termEnum next finally termDocs close termEnum close return retArray public short getShorts IndexReader reader String field throws IOException return getShorts reader field SHORT_PARSER public short getShorts IndexReader reader String field ShortParser parser throws IOException return short shortsCache get reader new Entry field parser Cache shortsCache new Cache protected Object createValue IndexReader reader Object entryKey throws IOException Entry entry Entry entryKey String field entry field ShortParser parser ShortParser entry custom final short retArray new short reader maxDoc TermDocs termDocs reader termDocs TermEnum termEnum reader terms new Term field try do Term term termEnum term if term null term field field break short termval parser parseShort term text termDocs seek termEnum while termDocs next retArray termDocs doc termval while termEnum next finally termDocs close termEnum close return retArray public int getInts IndexReader reader String field throws IOException return getInts reader field INT_PARSER public int getInts IndexReader reader String field IntParser parser throws IOException return int intsCache get reader new Entry field parser Cache intsCache new Cache protected Object createValue IndexReader reader Object entryKey throws IOException Entry entry Entry entryKey String field entry field IntParser parser IntParser entry custom final int retArray new int reader maxDoc TermDocs termDocs reader termDocs TermEnum termEnum reader terms new Term field try do Term term termEnum term if term null term field field break int termval parser parseInt term text termDocs seek termEnum while termDocs next retArray termDocs doc termval while termEnum next finally termDocs close termEnum close return retArray public float getFloats IndexReader reader String field throws IOException return getFloats reader field FLOAT_PARSER public float getFloats IndexReader reader String field FloatParser parser throws IOException return float floatsCache get reader new Entry field parser Cache floatsCache new Cache protected Object createValue IndexReader reader Object entryKey throws IOException Entry entry Entry entryKey String field entry field FloatParser parser FloatParser entry custom final float retArray new float reader maxDoc TermDocs termDocs reader termDocs TermEnum termEnum reader terms new Term field try do Term term termEnum term if term null term field field break float termval parser parseFloat term text termDocs seek termEnum while termDocs next retArray termDocs doc termval while termEnum next finally termDocs close termEnum close return retArray public String getStrings IndexReader reader String field throws IOException return String stringsCache get reader field Cache stringsCache new Cache protected Object createValue IndexReader reader Object fieldKey throws IOException String field String fieldKey intern final String retArray new String reader maxDoc TermDocs termDocs reader termDocs TermEnum termEnum reader terms new Term field try do Term term termEnum term if term null term field field break String termval term text termDocs seek termEnum while termDocs next retArray termDocs doc termval while termEnum next finally termDocs close termEnum close return retArray public StringIndex getStringIndex IndexReader reader String field throws IOException return StringIndex stringsIndexCache get reader field Cache stringsIndexCache new Cache protected Object createValue IndexReader reader Object fieldKey throws IOException String field String fieldKey intern final int retArray new int reader maxDoc String mterms new String reader maxDoc TermDocs termDocs reader termDocs TermEnum termEnum reader terms new Term field mterms null try do Term term termEnum term if term null term field field break if mterms length throw new RuntimeException field mterms term text termDocs seek termEnum while termDocs next retArray termDocs doc while termEnum next finally termDocs close termEnum close if mterms new String else if mterms length String terms new String System arraycopy mterms terms mterms terms StringIndex value new StringIndex retArray mterms return value public Object getAuto IndexReader reader String field throws IOException return autoCache get reader field Cache autoCache new Cache protected Object createValue IndexReader reader Object fieldKey throws IOException String field String fieldKey intern TermEnum enumerator reader terms new Term field try Term term enumerator term if term null throw new RuntimeException field Object ret null if term field field String termtext term text trim try Integer parseInt termtext ret getInts reader field catch NumberFormatException nfe1 try Float parseFloat termtext ret getFloats reader field catch NumberFormatException nfe3 ret getStringIndex reader field else throw new RuntimeException field return ret finally enumerator close public Comparable getCustom IndexReader reader String field SortComparator comparator throws IOException return Comparable customCache get reader new Entry field comparator Cache customCache new Cache protected Object createValue IndexReader reader Object entryKey throws IOException Entry entry Entry entryKey String field entry field SortComparator comparator SortComparator entry custom final Comparable retArray new Comparable reader maxDoc TermDocs termDocs reader termDocs TermEnum termEnum reader terms new Term field try do Term term termEnum term if term null term field field break Comparable termval comparator getComparable term text termDocs seek termEnum while termDocs next retArray termDocs doc termval while termEnum next finally termDocs close termEnum close return retArray public class LoadFirstFieldSelector implements FieldSelector public FieldSelectorResult accept String fieldName return FieldSelectorResult LOAD_AND_BREAK final class SegmentInfo public SegmentInfo String name int docCount Directory dir this name name this docCount docCount this dir dir delGen NO isCompoundFile CHECK_DIR preLockless true hasSingleNormFile false docStoreOffset docStoreSegment name docStoreIsCompoundFile false delCount hasProx true public SegmentInfo String name int docCount Directory dir boolean isCompoundFile boolean hasSingleNormFile this name docCount dir isCompoundFile hasSingleNormFile null false true public SegmentInfo String name int docCount Directory dir boolean isCompoundFile boolean hasSingleNormFile int docStoreOffset String docStoreSegment boolean docStoreIsCompoundFile boolean hasProx this name docCount dir this isCompoundFile byte isCompoundFile YES NO this hasSingleNormFile hasSingleNormFile preLockless false this docStoreOffset docStoreOffset this docStoreSegment docStoreSegment this docStoreIsCompoundFile docStoreIsCompoundFile this hasProx hasProx delCount assert docStoreOffset docStoreSegment null docStoreOffset docStoreSegment docCount void reset SegmentInfo src clearFiles name src name docCount src docCount dir src dir preLockless src preLockless delGen src delGen docStoreOffset src docStoreOffset docStoreIsCompoundFile src docStoreIsCompoundFile if src normGen null normGen null else normGen new long src normGen length System arraycopy src normGen normGen src normGen length isCompoundFile src isCompoundFile hasSingleNormFile src hasSingleNormFile delCount src delCount SegmentInfo Directory dir int format IndexInput input throws IOException this dir dir name input readString docCount input readInt if format SegmentInfos FORMAT_LOCKLESS delGen input readLong if format SegmentInfos FORMAT_SHARED_DOC_STORE docStoreOffset input readInt if docStoreOffset docStoreSegment input readString docStoreIsCompoundFile input readByte else docStoreSegment name docStoreIsCompoundFile false else docStoreOffset docStoreSegment name docStoreIsCompoundFile false if format SegmentInfos FORMAT_SINGLE_NORM_FILE hasSingleNormFile input readByte else hasSingleNormFile false int numNormGen input readInt if numNormGen NO normGen null else normGen new long numNormGen for int numNormGen normGen input readLong isCompoundFile input readByte preLockless isCompoundFile CHECK_DIR if format SegmentInfos FORMAT_DEL_COUNT delCount input readInt assert delCount docCount else delCount if format SegmentInfos FORMAT_HAS_PROX hasProx input readByte else hasProx true else delGen CHECK_DIR normGen null isCompoundFile CHECK_DIR preLockless true hasSingleNormFile false docStoreOffset docStoreIsCompoundFile false docStoreSegment null delCount hasProx true void setNumFields int numFields if normGen null normGen new long numFields if preLockless else for int numFields normGen NO long sizeInBytes throws IOException if sizeInBytes List files files final int size files size sizeInBytes for int size final String fileName String files get if docStoreOffset IndexFileNames isDocStoreFile fileName sizeInBytes dir fileLength fileName return sizeInBytes boolean hasDeletions throws IOException if delGen NO return false else if delGen YES return true else return dir fileExists getDelFileName void advanceDelGen if delGen NO delGen YES else delGen clearFiles void clearDelGen delGen NO clearFiles public Object clone SegmentInfo si new SegmentInfo name docCount dir si isCompoundFile isCompoundFile si delGen delGen si delCount delCount si preLockless preLockless si hasSingleNormFile hasSingleNormFile if normGen null si normGen long normGen clone si docStoreOffset docStoreOffset si docStoreSegment docStoreSegment si docStoreIsCompoundFile docStoreIsCompoundFile return si String getDelFileName if delGen NO return null else return IndexFileNames fileNameFromGeneration name IndexFileNames DELETES_EXTENSION delGen boolean hasSeparateNorms int fieldNumber throws IOException if normGen null preLockless normGen null normGen fieldNumber CHECK_DIR String fileName name fieldNumber return dir fileExists fileName else if normGen null normGen fieldNumber NO return false else return true boolean hasSeparateNorms throws IOException if normGen null if preLockless return false else String result dir list if result null throw new IOException dir String pattern pattern name int patternLength pattern length for int result length if result startsWith pattern Character isDigit result charAt patternLength return true return false else for int normGen length if normGen YES return true for int normGen length if normGen CHECK_DIR if hasSeparateNorms return true return false void advanceNormGen int fieldIndex if normGen fieldIndex NO normGen fieldIndex YES else normGen fieldIndex clearFiles String getNormFileName int number throws IOException String prefix long gen if normGen null gen CHECK_DIR else gen normGen number if hasSeparateNorms number prefix return IndexFileNames fileNameFromGeneration name prefix number gen if hasSingleNormFile prefix IndexFileNames NORMS_EXTENSION return IndexFileNames fileNameFromGeneration name prefix WITHOUT_GEN prefix return IndexFileNames fileNameFromGeneration name prefix number WITHOUT_GEN void setUseCompoundFile boolean isCompoundFile if isCompoundFile this isCompoundFile YES else this isCompoundFile NO clearFiles boolean getUseCompoundFile throws IOException if isCompoundFile NO return false else if isCompoundFile YES return true else return dir fileExists name IndexFileNames COMPOUND_FILE_EXTENSION int getDelCount throws IOException if delCount if hasDeletions final String delFileName getDelFileName delCount new BitVector dir delFileName count else delCount assert delCount docCount return delCount void setDelCount int delCount this delCount delCount assert delCount docCount int getDocStoreOffset return docStoreOffset boolean getDocStoreIsCompoundFile return docStoreIsCompoundFile void setDocStoreIsCompoundFile boolean docStoreIsCompoundFile clearFiles String getDocStoreSegment return docStoreSegment void setDocStoreOffset int offset docStoreOffset offset clearFiles void write IndexOutput output throws IOException output writeString name output writeInt docCount output writeLong delGen output writeInt docStoreOffset if docStoreOffset output writeString docStoreSegment output writeByte byte docStoreIsCompoundFile output writeByte byte hasSingleNormFile if normGen null output writeInt NO else output writeInt normGen length for int normGen length output writeLong normGen output writeByte isCompoundFile output writeInt delCount output writeByte byte hasProx void setHasProx boolean hasProx this hasProx hasProx clearFiles boolean getHasProx return hasProx private void addIfExists List files String fileName throws IOException if dir fileExists fileName files add fileName public List files throws IOException if files null return files files new ArrayList boolean useCompoundFile getUseCompoundFile if useCompoundFile files add name IndexFileNames COMPOUND_FILE_EXTENSION else final String exts IndexFileNames NON_STORE_INDEX_EXTENSIONS for int exts length addIfExists files name exts if docStoreOffset assert docStoreSegment null if docStoreIsCompoundFile files add docStoreSegment IndexFileNames COMPOUND_FILE_STORE_EXTENSION else final String exts IndexFileNames STORE_INDEX_EXTENSIONS for int exts length addIfExists files docStoreSegment exts else if useCompoundFile final String exts IndexFileNames STORE_INDEX_EXTENSIONS for int exts length addIfExists files name exts String delFileName IndexFileNames fileNameFromGeneration name IndexFileNames DELETES_EXTENSION delGen if delFileName null delGen YES dir fileExists delFileName files add delFileName if normGen null for int normGen length long gen normGen if gen YES files add IndexFileNames fileNameFromGeneration name IndexFileNames SEPARATE_NORMS_EXTENSION gen else if NO gen if hasSingleNormFile useCompoundFile String fileName name IndexFileNames PLAIN_NORMS_EXTENSION if dir fileExists fileName files add fileName else if CHECK_DIR gen String fileName null if useCompoundFile fileName name IndexFileNames SEPARATE_NORMS_EXTENSION else if hasSingleNormFile fileName name IndexFileNames PLAIN_NORMS_EXTENSION if fileName null dir fileExists fileName files add fileName else if preLockless hasSingleNormFile useCompoundFile String prefix if useCompoundFile prefix name IndexFileNames SEPARATE_NORMS_EXTENSION else prefix name IndexFileNames PLAIN_NORMS_EXTENSION int prefixLength prefix length String allFiles dir list if allFiles null throw new IOException dir for int allFiles length String fileName allFiles if fileName length prefixLength Character isDigit fileName charAt prefixLength fileName startsWith prefix files add fileName return files private void clearFiles files null sizeInBytes public String segString Directory dir String cfs try if getUseCompoundFile cfs else cfs catch IOException ioe cfs String docStore if docStoreOffset docStore docStoreSegment else docStore return name cfs this dir dir docCount docStore public boolean equals Object obj SegmentInfo other try other SegmentInfo obj catch ClassCastException cce return false return other dir dir other name equals name public int hashCode return dir hashCode name hashCode public abstract class BufferedIndexInput extends IndexInput public static final int BUFFER_SIZE private int bufferSize BUFFER_SIZE protected byte buffer public byte readByte throws IOException if bufferPosition bufferLength refill return buffer bufferPosition public BufferedIndexInput public BufferedIndexInput int bufferSize checkBufferSize bufferSize this bufferSize bufferSize public void setBufferSize int newSize assert buffer null bufferSize buffer length buffer bufferSize buffer null buffer length if newSize bufferSize checkBufferSize newSize bufferSize newSize if buffer null byte newBuffer new byte newSize final int leftInBuffer bufferLength bufferPosition final int numToCopy if leftInBuffer newSize numToCopy newSize else numToCopy leftInBuffer System arraycopy buffer bufferPosition newBuffer numToCopy bufferStart bufferPosition bufferPosition bufferLength numToCopy newBuffer newBuffer protected void newBuffer byte newBuffer buffer newBuffer public int getBufferSize return bufferSize private void checkBufferSize int bufferSize if bufferSize throw new IllegalArgumentException bufferSize public void readBytes byte int offset int len throws IOException readBytes offset len true public void readBytes byte int offset int len boolean useBuffer throws IOException if len bufferLength bufferPosition System arraycopy buffer bufferPosition offset len bufferPosition len else int available bufferLength bufferPosition if available System arraycopy buffer bufferPosition offset available offset available len available bufferPosition available if useBuffer len bufferSize refill if bufferLength len System arraycopy buffer offset bufferLength throw new IOException else System arraycopy buffer offset len bufferPosition len else long after bufferStart bufferPosition len if after length throw new IOException readInternal offset len bufferStart after bufferPosition private void refill throws IOException long start bufferStart bufferPosition long end start bufferSize end length int newLength int end start if newLength throw new IOException if buffer null seekInternal bufferStart readInternal buffer newLength bufferLength newLength bufferStart start bufferPosition protected abstract void readInternal byte int offset int length throws IOException public long getFilePointer return bufferStart bufferPosition public void seek long pos throws IOException if pos bufferStart pos bufferStart bufferLength else bufferStart pos bufferPosition seekInternal pos protected abstract void seekInternal long pos throws IOException public Object clone BufferedIndexInput clone BufferedIndexInput super clone clone buffer null clone bufferLength clone bufferPosition clone bufferStart getFilePointer return clone final class ReusableStringReader extends Reader int upto int left String void init String this left length this upto public int read char return read length public int read char int off int len if left len getChars upto upto len off upto len left len return len else if left return else getChars upto upto left off int left left upto length return public void close public class IndexModifier protected IndexWriter indexWriter null protected IndexReader indexReader null protected Directory directory null protected Analyzer analyzer null protected boolean open false protected PrintStream infoStream null protected boolean useCompoundFile true protected int maxBufferedDocs IndexWriter DEFAULT_MAX_BUFFERED_DOCS protected int maxFieldLength IndexWriter DEFAULT_MAX_FIELD_LENGTH protected int mergeFactor IndexWriter DEFAULT_MERGE_FACTOR public IndexModifier Directory directory Analyzer analyzer boolean create throws CorruptIndexException LockObtainFailedException IOException init directory analyzer create public IndexModifier String dirName Analyzer analyzer boolean create throws CorruptIndexException LockObtainFailedException IOException Directory dir FSDirectory getDirectory dirName init dir analyzer create public IndexModifier File file Analyzer analyzer boolean create throws CorruptIndexException LockObtainFailedException IOException Directory dir FSDirectory getDirectory file init dir analyzer create protected void init Directory directory Analyzer analyzer boolean create throws CorruptIndexException LockObtainFailedException IOException this directory directory synchronized this directory this analyzer analyzer indexWriter new IndexWriter directory analyzer create IndexWriter MaxFieldLength LIMITED open true protected void assureOpen if open throw new IllegalStateException protected void createIndexWriter throws CorruptIndexException LockObtainFailedException IOException if indexWriter null if indexReader null indexReader close indexReader null indexWriter new IndexWriter directory analyzer false new IndexWriter MaxFieldLength maxFieldLength indexWriter setMergeScheduler new SerialMergeScheduler indexWriter setInfoStream infoStream indexWriter setUseCompoundFile useCompoundFile if maxBufferedDocs IndexWriter DISABLE_AUTO_FLUSH indexWriter setMaxBufferedDocs maxBufferedDocs indexWriter setMergeFactor mergeFactor protected void createIndexReader throws CorruptIndexException IOException if indexReader null if indexWriter null indexWriter close indexWriter null indexReader IndexReader open directory public void flush throws CorruptIndexException LockObtainFailedException IOException synchronized directory assureOpen if indexWriter null indexWriter close indexWriter null createIndexWriter else indexReader close indexReader null createIndexReader public void addDocument Document doc Analyzer docAnalyzer throws CorruptIndexException LockObtainFailedException IOException synchronized directory assureOpen createIndexWriter if docAnalyzer null indexWriter addDocument doc docAnalyzer else indexWriter addDocument doc public void addDocument Document doc throws CorruptIndexException LockObtainFailedException IOException addDocument doc null public int deleteDocuments Term term throws StaleReaderException CorruptIndexException LockObtainFailedException IOException synchronized directory assureOpen createIndexReader return indexReader deleteDocuments term public void deleteDocument int docNum throws StaleReaderException CorruptIndexException LockObtainFailedException IOException synchronized directory assureOpen createIndexReader indexReader deleteDocument docNum public int docCount synchronized directory assureOpen if indexWriter null return indexWriter docCount else return indexReader numDocs public void optimize throws CorruptIndexException LockObtainFailedException IOException synchronized directory assureOpen createIndexWriter indexWriter optimize public void setInfoStream PrintStream infoStream synchronized directory assureOpen if indexWriter null indexWriter setInfoStream infoStream this infoStream infoStream public PrintStream getInfoStream throws CorruptIndexException LockObtainFailedException IOException synchronized directory assureOpen createIndexWriter return indexWriter getInfoStream public void setUseCompoundFile boolean useCompoundFile synchronized directory assureOpen if indexWriter null indexWriter setUseCompoundFile useCompoundFile this useCompoundFile useCompoundFile public boolean getUseCompoundFile throws CorruptIndexException LockObtainFailedException IOException synchronized directory assureOpen createIndexWriter return indexWriter getUseCompoundFile public void setMaxFieldLength int maxFieldLength synchronized directory assureOpen if indexWriter null indexWriter setMaxFieldLength maxFieldLength this maxFieldLength maxFieldLength public int getMaxFieldLength throws CorruptIndexException LockObtainFailedException IOException synchronized directory assureOpen createIndexWriter return indexWriter getMaxFieldLength public void setMaxBufferedDocs int maxBufferedDocs synchronized directory assureOpen if indexWriter null indexWriter setMaxBufferedDocs maxBufferedDocs this maxBufferedDocs maxBufferedDocs public int getMaxBufferedDocs throws CorruptIndexException LockObtainFailedException IOException synchronized directory assureOpen createIndexWriter return indexWriter getMaxBufferedDocs public void setMergeFactor int mergeFactor synchronized directory assureOpen if indexWriter null indexWriter setMergeFactor mergeFactor this mergeFactor mergeFactor public int getMergeFactor throws CorruptIndexException LockObtainFailedException IOException synchronized directory assureOpen createIndexWriter return indexWriter getMergeFactor public void close throws CorruptIndexException IOException synchronized directory if open throw new IllegalStateException if indexWriter null indexWriter close indexWriter null else if indexReader null indexReader close indexReader null open false public String toString return directory abstract class DocFieldConsumerPerField abstract void processFields Fieldable fields int count throws IOException abstract void abort public interface Searchable extends java rmi Remote void search Weight weight Filter filter HitCollector results throws IOException void close throws IOException int docFreq Term term throws IOException int docFreqs Term terms throws IOException int maxDoc throws IOException TopDocs search Weight weight Filter filter int throws IOException Document doc int throws CorruptIndexException IOException Document doc int FieldSelector fieldSelector throws CorruptIndexException IOException Query rewrite Query query throws IOException Explanation explain Weight weight int doc throws IOException TopFieldDocs search Weight weight Filter filter int Sort sort throws IOException class SegmentTermPositionVector extends SegmentTermVector implements TermPositionVector protected int positions protected TermVectorOffsetInfo offsets public static final int EMPTY_TERM_POS new int public SegmentTermPositionVector String field String terms int termFreqs int positions TermVectorOffsetInfo offsets super field terms termFreqs this offsets offsets this positions positions public TermVectorOffsetInfo getOffsets int index TermVectorOffsetInfo result TermVectorOffsetInfo EMPTY_OFFSET_INFO if offsets null return null if index index offsets length result offsets index return result public int getTermPositions int index int result EMPTY_TERM_POS if positions null return null if index index positions length result positions index return result public abstract class IndexOutput private UnicodeUtil UTF8Result utf8Result new UnicodeUtil UTF8Result public abstract void writeByte byte throws IOException public void writeBytes byte int length throws IOException writeBytes length public abstract void writeBytes byte int offset int length throws IOException public void writeInt int throws IOException writeByte byte writeByte byte writeByte byte writeByte byte public void writeVInt int throws IOException while writeByte byte writeByte byte public void writeLong long throws IOException writeInt int writeInt int public void writeVLong long throws IOException while writeByte byte writeByte byte public void writeString String throws IOException UnicodeUtil UTF16toUTF8 length utf8Result writeVInt utf8Result length writeBytes utf8Result result utf8Result length public void writeChars String int start int length throws IOException final int end start length for int start end final int code int charAt if code code writeByte byte code else if code code code writeByte byte code writeByte byte code else writeByte byte code writeByte byte code writeByte byte code public void writeChars char int start int length throws IOException final int end start length for int start end final int code int if code code writeByte byte code else if code code code writeByte byte code writeByte byte code else writeByte byte code writeByte byte code writeByte byte code private static int COPY_BUFFER_SIZE private byte copyBuffer public void copyBytes IndexInput input long numBytes throws IOException long left numBytes if copyBuffer null copyBuffer new byte COPY_BUFFER_SIZE while left final int toCopy if left COPY_BUFFER_SIZE toCopy COPY_BUFFER_SIZE else toCopy int left input readBytes copyBuffer toCopy writeBytes copyBuffer toCopy left toCopy public abstract void flush throws IOException public abstract void close throws IOException public abstract long getFilePointer public abstract void seek long pos throws IOException public abstract long length throws IOException public void setLength long length throws IOException public class CustomScoreQuery extends Query private Query subQuery public CustomScoreQuery Query subQuery this subQuery new ValueSourceQuery public CustomScoreQuery Query subQuery ValueSourceQuery valSrcQuery new ValueSourceQuery valSrcQuery new ValueSourceQuery public CustomScoreQuery Query subQuery ValueSourceQuery valSrcQueries super this subQuery subQuery this valSrcQueries valSrcQueries null valSrcQueries new ValueSourceQuery if subQuery null throw new IllegalArgumentException public Query rewrite IndexReader reader throws IOException subQuery subQuery rewrite reader for int valSrcQueries length valSrcQueries ValueSourceQuery valSrcQueries rewrite reader return this public void extractTerms Set terms subQuery extractTerms terms for int valSrcQueries length valSrcQueries extractTerms terms public Object clone CustomScoreQuery clone CustomScoreQuery super clone clone subQuery Query subQuery clone clone valSrcQueries new ValueSourceQuery valSrcQueries length for int valSrcQueries length clone valSrcQueries ValueSourceQuery valSrcQueries clone return clone public String toString String field StringBuffer sb new StringBuffer name append sb append subQuery toString field for int valSrcQueries length sb append append valSrcQueries toString field sb append sb append strict return sb toString ToStringUtils boost getBoost public boolean equals Object if getClass getClass return false CustomScoreQuery other CustomScoreQuery if this getBoost other getBoost this subQuery equals other subQuery this valSrcQueries length other valSrcQueries length return false if valSrcQueries equals other valSrcQueries return false return true public int hashCode int valSrcHash valSrcHash valSrcQueries hashCode return getClass hashCode subQuery hashCode valSrcHash Float floatToIntBits getBoost public float customScore int doc float subQueryScore float valSrcScores if valSrcScores length return customScore doc subQueryScore valSrcScores if valSrcScores length return customScore doc subQueryScore float score subQueryScore for int valSrcScores length score valSrcScores return score public float customScore int doc float subQueryScore float valSrcScore return subQueryScore valSrcScore public Explanation customExplain int doc Explanation subQueryExpl Explanation valSrcExpls if valSrcExpls length return customExplain doc subQueryExpl valSrcExpls if valSrcExpls length return subQueryExpl float valSrcScore for int valSrcExpls length valSrcScore valSrcExpls getValue Explanation exp new Explanation valSrcScore subQueryExpl getValue exp addDetail subQueryExpl for int valSrcExpls length exp addDetail valSrcExpls return exp public Explanation customExplain int doc Explanation subQueryExpl Explanation valSrcExpl float valSrcScore if valSrcExpl null valSrcScore valSrcExpl getValue Explanation exp new Explanation valSrcScore subQueryExpl getValue exp addDetail subQueryExpl exp addDetail valSrcExpl return exp private class CustomWeight implements Weight Similarity similarity Weight subQueryWeight Weight valSrcWeights boolean qStrict public CustomWeight Searcher searcher throws IOException this similarity getSimilarity searcher this subQueryWeight subQuery weight searcher this subQueryWeight subQuery weight searcher this valSrcWeights new Weight valSrcQueries length for int valSrcQueries length this valSrcWeights valSrcQueries createWeight searcher this qStrict strict public Query getQuery return CustomScoreQuery this public float getValue return getBoost public float sumOfSquaredWeights throws IOException float sum subQueryWeight sumOfSquaredWeights for int valSrcWeights length if qStrict else sum valSrcWeights sumOfSquaredWeights return sum public void normalize float norm subQueryWeight normalize norm for int valSrcWeights length if qStrict else valSrcWeights normalize norm public Scorer scorer IndexReader reader throws IOException Scorer subQueryScorer subQueryWeight scorer reader Scorer valSrcScorers new Scorer valSrcWeights length for int valSrcScorers length valSrcScorers valSrcWeights scorer reader return new CustomScorer similarity reader this subQueryScorer valSrcScorers public Explanation explain IndexReader reader int doc throws IOException return scorer reader explain doc private class CustomScorer extends Scorer private final CustomWeight weight private final float qWeight private Scorer subQueryScorer private Scorer valSrcScorers private IndexReader reader private CustomScorer Similarity similarity IndexReader reader CustomWeight Scorer subQueryScorer Scorer valSrcScorers throws IOException super similarity this weight this qWeight getValue this subQueryScorer subQueryScorer this valSrcScorers valSrcScorers this reader reader this vScores new float valSrcScorers length public boolean next throws IOException boolean hasNext subQueryScorer next if hasNext for int valSrcScorers length valSrcScorers skipTo subQueryScorer doc return hasNext public int doc return subQueryScorer doc public float score throws IOException for int valSrcScorers length vScores valSrcScorers score return qWeight customScore subQueryScorer doc subQueryScorer score vScores public boolean skipTo int target throws IOException boolean hasNext subQueryScorer skipTo target if hasNext for int valSrcScorers length valSrcScorers skipTo subQueryScorer doc return hasNext public Explanation explain int doc throws IOException Explanation subQueryExpl weight subQueryWeight explain reader doc if subQueryExpl isMatch return subQueryExpl Explanation valSrcExpls new Explanation valSrcScorers length for int valSrcScorers length valSrcExpls valSrcScorers explain doc Explanation customExp customExplain doc subQueryExpl valSrcExpls float sc qWeight customExp getValue Explanation res new ComplexExplanation true sc CustomScoreQuery this toString res addDetail customExp return res protected Weight createWeight Searcher searcher throws IOException return new CustomWeight searcher public boolean isStrict return strict public void setStrict boolean strict this strict strict public String name return public class WordlistLoader public static HashSet getWordSet File wordfile throws IOException HashSet result new HashSet FileReader reader null try reader new FileReader wordfile result getWordSet reader finally if reader null reader close return result public static HashSet getWordSet Reader reader throws IOException HashSet result new HashSet BufferedReader br null try if reader instanceof BufferedReader br BufferedReader reader else br new BufferedReader reader String word null while word br readLine null result add word trim finally if br null br close return result public static HashMap getStemDict File wordstemfile throws IOException if wordstemfile null throw new NullPointerException HashMap result new HashMap BufferedReader br null FileReader fr null try fr new FileReader wordstemfile br new BufferedReader fr String line while line br readLine null String wordstem line split result put wordstem wordstem finally if fr null fr close if br null br close return result final class HitQueue extends PriorityQueue HitQueue int size initialize size protected final boolean lessThan Object Object ScoreDoc hitA ScoreDoc ScoreDoc hitB ScoreDoc if hitA score hitB score return hitA doc hitB doc else return hitA score hitB score public class KeywordTokenizer extends Tokenizer private static final int DEFAULT_BUFFER_SIZE private boolean done public KeywordTokenizer Reader input this input DEFAULT_BUFFER_SIZE public KeywordTokenizer Reader input int bufferSize super input this done false public Token next final Token reusableToken throws IOException assert reusableToken null if done done true int upto reusableToken clear char buffer reusableToken termBuffer while true final int length input read buffer upto buffer length upto if length break upto length if upto buffer length buffer reusableToken resizeTermBuffer buffer length reusableToken setTermLength upto return reusableToken return null public void reset Reader input throws IOException super reset input this done false final class ByteSliceReader extends IndexInput ByteBlockPool pool int bufferUpto byte buffer public int upto int limit int level public int bufferOffset public int endIndex public void init ByteBlockPool pool int startIndex int endIndex assert endIndex startIndex assert startIndex assert endIndex this pool pool this endIndex endIndex level bufferUpto startIndex DocumentsWriter BYTE_BLOCK_SIZE bufferOffset bufferUpto DocumentsWriter BYTE_BLOCK_SIZE buffer pool buffers bufferUpto upto startIndex DocumentsWriter BYTE_BLOCK_MASK final int firstSize ByteBlockPool levelSizeArray if startIndex firstSize endIndex limit endIndex DocumentsWriter BYTE_BLOCK_MASK else limit upto firstSize public boolean eof assert upto bufferOffset endIndex return upto bufferOffset endIndex public byte readByte assert eof assert upto limit if upto limit nextSlice return buffer upto public long writeTo IndexOutput out throws IOException long size while true if limit bufferOffset endIndex assert endIndex bufferOffset upto out writeBytes buffer upto limit upto size limit upto break else out writeBytes buffer upto limit upto size limit upto nextSlice return size public void nextSlice final int nextIndex buffer limit buffer limit buffer limit buffer limit level ByteBlockPool nextLevelArray level final int newSize ByteBlockPool levelSizeArray level bufferUpto nextIndex DocumentsWriter BYTE_BLOCK_SIZE bufferOffset bufferUpto DocumentsWriter BYTE_BLOCK_SIZE buffer pool buffers bufferUpto upto nextIndex DocumentsWriter BYTE_BLOCK_MASK if nextIndex newSize endIndex assert endIndex nextIndex limit endIndex bufferOffset else limit upto newSize public void readBytes byte int offset int len while len final int numLeft limit upto if numLeft len System arraycopy buffer upto offset numLeft offset numLeft len numLeft nextSlice else System arraycopy buffer upto offset len upto len break public long getFilePointer throw new RuntimeException public long length throw new RuntimeException public void seek long pos throw new RuntimeException public void close throw new RuntimeException final class TermBuffer implements Cloneable private String field private UnicodeUtil UTF16Result text new UnicodeUtil UTF16Result private UnicodeUtil UTF8Result bytes new UnicodeUtil UTF8Result public final int compareTo TermBuffer other return compareChars text result text length other text result other text length else return field compareTo other field private static final int compareChars char chars1 int len1 char chars2 int len2 final int end len1 len2 len1 len2 for int end char c1 chars1 char c2 chars2 if c1 c2 return c1 c2 return len1 len2 void setPreUTF8Strings preUTF8Strings true public final void read IndexInput input FieldInfos fieldInfos throws IOException int start input readVInt int length input readVInt int totalLength start length if preUTF8Strings text setLength totalLength input readChars text result start length else if dirty UnicodeUtil UTF16toUTF8 text result text length bytes bytes setLength totalLength input readBytes bytes result start length UnicodeUtil UTF8toUTF16 bytes result totalLength text dirty false else bytes setLength totalLength input readBytes bytes result start length UnicodeUtil UTF8toUTF16 bytes result start length text this field fieldInfos fieldName input readVInt public final void set Term term if term null reset return final String termText term text final int termLen termText length text setLength termLen termText getChars termLen text result dirty true field term field this term term public final void set TermBuffer other text copyText other text dirty true field other field term other term public void reset field null text setLength term null dirty true public Term toTerm return null if term null term new Term field new String text result text length false return term protected Object clone TermBuffer clone null try clone TermBuffer super clone catch CloneNotSupportedException clone dirty true clone bytes new UnicodeUtil UTF8Result clone text new UnicodeUtil UTF16Result clone text copyText text return clone public interface TermFreqVector public String getField public int size public String getTerms public int getTermFrequencies public int indexOf String term public int indexesOf String terms int start int len abstract class DocFieldConsumer FieldInfos fieldInfos abstract void flush Map threadsAndFields DocumentsWriter FlushState state throws IOException abstract void closeDocStore DocumentsWriter FlushState state throws IOException abstract void abort abstract DocFieldConsumerPerThread addThread DocFieldProcessorPerThread docFieldProcessorPerThread throws IOException abstract boolean freeRAM void setFieldInfos FieldInfos fieldInfos this fieldInfos fieldInfos public abstract class BufferedIndexOutput extends IndexOutput static final int BUFFER_SIZE private final byte buffer new byte BUFFER_SIZE public void writeByte byte throws IOException if bufferPosition BUFFER_SIZE flush buffer bufferPosition public void writeBytes byte int offset int length throws IOException int bytesLeft BUFFER_SIZE bufferPosition if bytesLeft length System arraycopy offset buffer bufferPosition length bufferPosition length if BUFFER_SIZE bufferPosition flush else if length BUFFER_SIZE if bufferPosition flush flushBuffer offset length bufferStart length else int pieceLength while pos length pieceLength length pos bytesLeft length pos bytesLeft System arraycopy pos offset buffer bufferPosition pieceLength pos pieceLength bufferPosition pieceLength bytesLeft BUFFER_SIZE bufferPosition if bytesLeft flush bytesLeft BUFFER_SIZE public void flush throws IOException flushBuffer buffer bufferPosition bufferStart bufferPosition bufferPosition private void flushBuffer byte int len throws IOException flushBuffer len protected abstract void flushBuffer byte int offset int len throws IOException public void close throws IOException flush public long getFilePointer return bufferStart bufferPosition public void seek long pos throws IOException flush bufferStart pos public abstract long length throws IOException final class IndexFileNames static final String SEGMENTS static final String SEGMENTS_GEN static final String DELETABLE static final String NORMS_EXTENSION static final String FREQ_EXTENSION static final String PROX_EXTENSION static final String TERMS_EXTENSION static final String TERMS_INDEX_EXTENSION static final String FIELDS_INDEX_EXTENSION static final String FIELDS_EXTENSION static final String VECTORS_FIELDS_EXTENSION static final String VECTORS_DOCUMENTS_EXTENSION static final String VECTORS_INDEX_EXTENSION static final String COMPOUND_FILE_EXTENSION static final String COMPOUND_FILE_STORE_EXTENSION static final String DELETES_EXTENSION static final String FIELD_INFOS_EXTENSION static final String PLAIN_NORMS_EXTENSION static final String SEPARATE_NORMS_EXTENSION static final String GEN_EXTENSION static final String INDEX_EXTENSIONS new String COMPOUND_FILE_EXTENSION FIELD_INFOS_EXTENSION FIELDS_INDEX_EXTENSION FIELDS_EXTENSION TERMS_INDEX_EXTENSION TERMS_EXTENSION FREQ_EXTENSION PROX_EXTENSION DELETES_EXTENSION VECTORS_INDEX_EXTENSION VECTORS_DOCUMENTS_EXTENSION VECTORS_FIELDS_EXTENSION GEN_EXTENSION NORMS_EXTENSION COMPOUND_FILE_STORE_EXTENSION static final String INDEX_EXTENSIONS_IN_COMPOUND_FILE new String FIELD_INFOS_EXTENSION FIELDS_INDEX_EXTENSION FIELDS_EXTENSION TERMS_INDEX_EXTENSION TERMS_EXTENSION FREQ_EXTENSION PROX_EXTENSION VECTORS_INDEX_EXTENSION VECTORS_DOCUMENTS_EXTENSION VECTORS_FIELDS_EXTENSION NORMS_EXTENSION static final String STORE_INDEX_EXTENSIONS new String VECTORS_INDEX_EXTENSION VECTORS_FIELDS_EXTENSION VECTORS_DOCUMENTS_EXTENSION FIELDS_INDEX_EXTENSION FIELDS_EXTENSION static final String NON_STORE_INDEX_EXTENSIONS new String FIELD_INFOS_EXTENSION FREQ_EXTENSION PROX_EXTENSION TERMS_EXTENSION TERMS_INDEX_EXTENSION NORMS_EXTENSION static final String COMPOUND_EXTENSIONS new String FIELD_INFOS_EXTENSION FREQ_EXTENSION PROX_EXTENSION FIELDS_INDEX_EXTENSION FIELDS_EXTENSION TERMS_INDEX_EXTENSION TERMS_EXTENSION static final String VECTOR_EXTENSIONS new String VECTORS_INDEX_EXTENSION VECTORS_DOCUMENTS_EXTENSION VECTORS_FIELDS_EXTENSION static final String fileNameFromGeneration String base String extension long gen if gen SegmentInfo NO return null else if gen SegmentInfo WITHOUT_GEN return base extension else return base Long toString gen Character MAX_RADIX extension static final boolean isDocStoreFile String fileName if fileName endsWith COMPOUND_FILE_STORE_EXTENSION return true for int STORE_INDEX_EXTENSIONS length if fileName endsWith STORE_INDEX_EXTENSIONS return true return false final class SegmentInfos extends Vector public static final int FORMAT public static final int FORMAT_LOCKLESS public static final int FORMAT_SINGLE_NORM_FILE public static final int FORMAT_SHARED_DOC_STORE public static final int FORMAT_CHECKSUM public static final int FORMAT_DEL_COUNT public static final int FORMAT_HAS_PROX static final int CURRENT_FORMAT FORMAT_HAS_PROX private long version System currentTimeMillis private static PrintStream infoStream public final SegmentInfo info int return SegmentInfo get public static long getCurrentSegmentGeneration String files if files null return long max for int files length String file files if file startsWith IndexFileNames SEGMENTS file equals IndexFileNames SEGMENTS_GEN long gen generationFromSegmentsFileName file if gen max max gen return max public static long getCurrentSegmentGeneration Directory directory throws IOException String files directory list if files null throw new IOException directory return getCurrentSegmentGeneration files public static String getCurrentSegmentFileName String files throws IOException return IndexFileNames fileNameFromGeneration IndexFileNames SEGMENTS getCurrentSegmentGeneration files public static String getCurrentSegmentFileName Directory directory throws IOException return IndexFileNames fileNameFromGeneration IndexFileNames SEGMENTS getCurrentSegmentGeneration directory public String getCurrentSegmentFileName return IndexFileNames fileNameFromGeneration IndexFileNames SEGMENTS lastGeneration public static long generationFromSegmentsFileName String fileName if fileName equals IndexFileNames SEGMENTS return else if fileName startsWith IndexFileNames SEGMENTS return Long parseLong fileName substring IndexFileNames SEGMENTS length Character MAX_RADIX else throw new IllegalArgumentException fileName public String getNextSegmentFileName long nextGeneration if generation nextGeneration else nextGeneration generation return IndexFileNames fileNameFromGeneration IndexFileNames SEGMENTS nextGeneration public final void read Directory directory String segmentFileName throws CorruptIndexException IOException boolean success false clear ChecksumIndexInput input new ChecksumIndexInput directory openInput segmentFileName generation generationFromSegmentsFileName segmentFileName lastGeneration generation try int format input readInt if format CURRENT_FORMAT throw new CorruptIndexException format counter format add new SegmentInfo directory format input if input getFilePointer input length else if format FORMAT_CHECKSUM final long checksumNow input getChecksum final long checksumThen input readLong if checksumNow checksumThen throw new CorruptIndexException success true finally input close if success clear public final void read Directory directory throws CorruptIndexException IOException generation lastGeneration new FindSegmentsFile directory protected Object doBody String segmentFileName throws CorruptIndexException IOException read directory segmentFileName return null run ChecksumIndexOutput pendingOutput private final void write Directory directory throws IOException String segmentFileName getNextSegmentFileName if generation generation else generation ChecksumIndexOutput output new ChecksumIndexOutput directory createOutput segmentFileName boolean success false try for int size info write output output prepareCommit success true pendingOutput output finally if success try output close catch Throwable try directory deleteFile segmentFileName catch Throwable public Object clone SegmentInfos sis SegmentInfos super clone for int sis size sis set sis info clone return sis public long getVersion return version public long getGeneration return generation public long getLastGeneration return lastGeneration public static long readCurrentVersion Directory directory throws CorruptIndexException IOException return Long new FindSegmentsFile directory protected Object doBody String segmentFileName throws CorruptIndexException IOException IndexInput input directory openInput segmentFileName int format long version try format input readInt if format if format CURRENT_FORMAT throw new CorruptIndexException format finally input close if format return new Long version SegmentInfos sis new SegmentInfos sis read directory segmentFileName return new Long sis getVersion run longValue public static void setInfoStream PrintStream infoStream SegmentInfos infoStream infoStream private static int defaultGenFileRetryCount private static int defaultGenFileRetryPauseMsec private static int defaultGenLookaheadCount public static void setDefaultGenFileRetryCount int count defaultGenFileRetryCount count public static int getDefaultGenFileRetryCount return defaultGenFileRetryCount public static void setDefaultGenFileRetryPauseMsec int msec defaultGenFileRetryPauseMsec msec public static int getDefaultGenFileRetryPauseMsec return defaultGenFileRetryPauseMsec public static void setDefaultGenLookaheadCount int count defaultGenLookaheadCount count public static int getDefaultGenLookahedCount return defaultGenLookaheadCount public static PrintStream getInfoStream return infoStream private static void message String message if infoStream null infoStream println Thread currentThread getName message public abstract static class FindSegmentsFile File fileDirectory Directory directory public FindSegmentsFile File directory this fileDirectory directory public FindSegmentsFile Directory directory this directory directory public Object run throws CorruptIndexException IOException String segmentFileName null long lastGen long gen int genLookaheadCount IOException exc null boolean retry false int method while true if method String files null long genA if directory null files directory list else files fileDirectory list if files null genA getCurrentSegmentGeneration files message genA long genB if directory null for int defaultGenFileRetryCount IndexInput genInput null try genInput directory openInput IndexFileNames SEGMENTS_GEN catch FileNotFoundException message break catch IOException message if genInput null try int version genInput readInt if version FORMAT_LOCKLESS long gen0 genInput readLong long gen1 genInput readLong message gen0 gen1 if gen0 gen1 genB gen0 break catch IOException err2 finally genInput close try Thread sleep defaultGenFileRetryPauseMsec catch InterruptedException message IndexFileNames SEGMENTS_GEN genB if genA genB gen genA else gen genB if gen String if files null for int files length files else throw new FileNotFoundException directory if method method lastGen gen retry method if genLookaheadCount defaultGenLookaheadCount gen genLookaheadCount message gen if lastGen gen if retry throw exc else retry true else if method retry false lastGen gen segmentFileName IndexFileNames fileNameFromGeneration IndexFileNames SEGMENTS gen try Object doBody segmentFileName if exc null message segmentFileName return catch IOException err if exc null exc err message segmentFileName err retry gen if retry gen String prevSegmentFileName IndexFileNames fileNameFromGeneration IndexFileNames SEGMENTS gen final boolean prevExists if directory null prevExists directory fileExists prevSegmentFileName else prevExists new File fileDirectory prevSegmentFileName exists if prevExists message prevSegmentFileName try Object doBody prevSegmentFileName if exc null message prevSegmentFileName return catch IOException err2 message prevSegmentFileName err2 protected abstract Object doBody String segmentFileName throws CorruptIndexException IOException public SegmentInfos range int first int last SegmentInfos infos new SegmentInfos infos addAll super subList first last return infos void updateGeneration SegmentInfos other lastGeneration other lastGeneration generation other generation version other version public final void rollbackCommit Directory dir throws IOException if pendingOutput null try pendingOutput close catch Throwable try final String segmentFileName IndexFileNames fileNameFromGeneration IndexFileNames SEGMENTS generation dir deleteFile segmentFileName catch Throwable pendingOutput null public final void prepareCommit Directory dir throws IOException if pendingOutput null throw new IllegalStateException write dir public final void finishCommit Directory dir throws IOException if pendingOutput null throw new IllegalStateException boolean success false try pendingOutput finishCommit pendingOutput close pendingOutput null success true finally if success rollbackCommit dir final String fileName IndexFileNames fileNameFromGeneration IndexFileNames SEGMENTS generation success false try dir sync fileName success true finally if success try dir deleteFile fileName catch Throwable lastGeneration generation try IndexOutput genOutput dir createOutput IndexFileNames SEGMENTS_GEN try genOutput writeInt FORMAT_LOCKLESS genOutput writeLong generation genOutput writeLong generation finally genOutput close catch Throwable public final void commit Directory dir throws IOException prepareCommit dir finishCommit dir synchronized String segString Directory directory StringBuffer buffer new StringBuffer final int count size for int count if buffer append final SegmentInfo info info buffer append info segString directory if info dir directory buffer append return buffer toString public final class Field extends AbstractField implements Fieldable Serializable public static final class Store extends Parameter implements Serializable private Store String name super name public static final Store COMPRESS new Store public static final Store YES new Store public static final Store NO new Store public static final class Index extends Parameter implements Serializable private Index String name super name public static final Index NO new Index public static final Index ANALYZED new Index public static final Index TOKENIZED ANALYZED public static final Index NOT_ANALYZED new Index public static final Index UN_TOKENIZED NOT_ANALYZED public static final Index NOT_ANALYZED_NO_NORMS new Index public static final Index NO_NORMS NOT_ANALYZED_NO_NORMS public static final Index ANALYZED_NO_NORMS new Index public static final class TermVector extends Parameter implements Serializable private TermVector String name super name public static final TermVector NO new TermVector public static final TermVector YES new TermVector public static final TermVector WITH_POSITIONS new TermVector public static final TermVector WITH_OFFSETS new TermVector public static final TermVector WITH_POSITIONS_OFFSETS new TermVector public String stringValue return fieldsData instanceof String String fieldsData null public Reader readerValue return fieldsData instanceof Reader Reader fieldsData null public byte binaryValue if isBinary return null final byte data byte fieldsData if binaryOffset data length binaryLength final byte ret new byte binaryLength System arraycopy data binaryOffset ret binaryLength return ret public TokenStream tokenStreamValue return fieldsData instanceof TokenStream TokenStream fieldsData null public void setValue String value fieldsData value public void setValue Reader value fieldsData value public void setValue byte value fieldsData value binaryLength value length binaryOffset public void setValue byte value int offset int length fieldsData value binaryLength length binaryOffset offset public void setValue TokenStream value fieldsData value public Field String name String value Store store Index index this name value store index TermVector NO public Field String name String value Store store Index index TermVector termVector if name null throw new NullPointerException if value null throw new NullPointerException if name length value length throw new IllegalArgumentException if index Index NO store Store NO throw new IllegalArgumentException if index Index NO termVector TermVector NO throw new IllegalArgumentException this fieldsData value if store Store YES this isStored true this isCompressed false else if store Store COMPRESS this isStored true this isCompressed true else if store Store NO this isStored false this isCompressed false else throw new IllegalArgumentException store if index Index NO this isIndexed false this isTokenized false else if index Index ANALYZED this isIndexed true this isTokenized true else if index Index NOT_ANALYZED this isIndexed true this isTokenized false else if index Index NOT_ANALYZED_NO_NORMS this isIndexed true this isTokenized false this omitNorms true else if index Index ANALYZED_NO_NORMS this isIndexed true this isTokenized true this omitNorms true else throw new IllegalArgumentException index this isBinary false setStoreTermVector termVector public Field String name Reader reader this name reader TermVector NO public Field String name Reader reader TermVector termVector if name null throw new NullPointerException if reader null throw new NullPointerException this fieldsData reader this isStored false this isCompressed false this isIndexed true this isTokenized true this isBinary false setStoreTermVector termVector public Field String name TokenStream tokenStream this name tokenStream TermVector NO public Field String name TokenStream tokenStream TermVector termVector if name null throw new NullPointerException if tokenStream null throw new NullPointerException this fieldsData tokenStream this isStored false this isCompressed false this isIndexed true this isTokenized true this isBinary false setStoreTermVector termVector public Field String name byte value Store store this name value value length store public Field String name byte value int offset int length Store store if name null throw new IllegalArgumentException if value null throw new IllegalArgumentException this name name intern fieldsData value if store Store YES isStored true isCompressed false else if store Store COMPRESS isStored true isCompressed true else if store Store NO throw new IllegalArgumentException else throw new IllegalArgumentException store isIndexed false isTokenized false isBinary true binaryLength length binaryOffset offset setStoreTermVector TermVector NO abstract class MultiLevelSkipListWriter private int numberOfSkipLevels private int skipInterval private RAMOutputStream skipBuffer protected MultiLevelSkipListWriter int skipInterval int maxSkipLevels int df this skipInterval skipInterval numberOfSkipLevels df int Math floor Math log df Math log skipInterval if numberOfSkipLevels maxSkipLevels numberOfSkipLevels maxSkipLevels protected void init skipBuffer new RAMOutputStream numberOfSkipLevels for int numberOfSkipLevels skipBuffer new RAMOutputStream protected void resetSkip if skipBuffer null init else for int skipBuffer length skipBuffer reset protected abstract void writeSkipData int level IndexOutput skipBuffer throws IOException void bufferSkip int df throws IOException int numLevels for numLevels df skipInterval numLevels numberOfSkipLevels df skipInterval numLevels long childPointer for int level level numLevels level writeSkipData level skipBuffer level long newChildPointer skipBuffer level getFilePointer if level skipBuffer level writeVLong childPointer childPointer newChildPointer long writeSkip IndexOutput output throws IOException long skipPointer output getFilePointer if skipBuffer null skipBuffer length return skipPointer for int level numberOfSkipLevels level level long length skipBuffer level getFilePointer if length output writeVLong length skipBuffer level writeTo output skipBuffer writeTo output return skipPointer final class StoredFieldsWriterPerField extends DocFieldConsumerPerField final StoredFieldsWriterPerThread perThread final FieldInfo fieldInfo final DocumentsWriter DocState docState public StoredFieldsWriterPerField StoredFieldsWriterPerThread perThread FieldInfo fieldInfo this perThread perThread this fieldInfo fieldInfo docState perThread docState public void processFields Fieldable fields int count throws IOException final StoredFieldsWriter PerDoc doc if perThread doc null doc perThread doc perThread storedFieldsWriter getPerDoc doc docID docState docID perThread localFieldsWriter setFieldsStream doc fdt assert doc numStoredFields doc numStoredFields assert doc fdt length assert doc fdt getFilePointer else doc perThread doc assert doc docID docState docID doc docID docState docID for int count final Fieldable field fields if field isStored perThread localFieldsWriter writeField fieldInfo field assert docState testPoint doc numStoredFields void abort public interface IndexDeletionPolicy public void onInit List commits throws IOException public void onCommit List commits throws IOException public class LetterTokenizer extends CharTokenizer public LetterTokenizer Reader in super in protected boolean isTokenChar char return Character isLetter public class MatchAllDocsQuery extends Query public MatchAllDocsQuery private class MatchAllScorer extends Scorer final IndexReader reader int id final int maxId final float score MatchAllScorer IndexReader reader Similarity similarity Weight super similarity this reader reader id maxId reader maxDoc score getValue public Explanation explain int doc public int doc return id public boolean next while id maxId id if reader isDeleted id return true return false public float score return score public boolean skipTo int target id target return next private class MatchAllDocsWeight implements Weight private Similarity similarity private float queryWeight private float queryNorm public MatchAllDocsWeight Searcher searcher this similarity searcher getSimilarity public String toString return MatchAllDocsQuery this public Query getQuery return MatchAllDocsQuery this public float getValue return queryWeight public float sumOfSquaredWeights queryWeight getBoost return queryWeight queryWeight public void normalize float queryNorm this queryNorm queryNorm queryWeight this queryNorm public Scorer scorer IndexReader reader return new MatchAllScorer reader similarity this public Explanation explain IndexReader reader int doc Explanation queryExpl new ComplexExplanation true getValue if getBoost queryExpl addDetail new Explanation getBoost queryExpl addDetail new Explanation queryNorm return queryExpl protected Weight createWeight Searcher searcher return new MatchAllDocsWeight searcher public void extractTerms Set terms public String toString String field StringBuffer buffer new StringBuffer buffer append buffer append ToStringUtils boost getBoost return buffer toString public boolean equals Object if instanceof MatchAllDocsQuery return false MatchAllDocsQuery other MatchAllDocsQuery return this getBoost other getBoost public int hashCode return Float floatToIntBits getBoost final class TermVectorsTermsWriterPerThread extends TermsHashConsumerPerThread final TermVectorsTermsWriter termsWriter final TermsHashPerThread termsHashPerThread final DocumentsWriter DocState docState TermVectorsTermsWriter PerDoc doc public TermVectorsTermsWriterPerThread TermsHashPerThread termsHashPerThread TermVectorsTermsWriter termsWriter this termsWriter termsWriter this termsHashPerThread termsHashPerThread docState termsHashPerThread docState final ByteSliceReader vectorSliceReader new ByteSliceReader final UnicodeUtil UTF8Result utf8Results new UnicodeUtil UTF8Result new UnicodeUtil UTF8Result public void startDocument assert clearLastVectorFieldName if doc null doc reset doc docID docState docID public DocumentsWriter DocWriter finishDocument try return doc finally doc null public TermsHashConsumerPerField addField TermsHashPerField termsHashPerField FieldInfo fieldInfo return new TermVectorsTermsWriterPerField termsHashPerField this fieldInfo public void abort if doc null doc abort doc null final boolean clearLastVectorFieldName lastVectorFieldName null return true String lastVectorFieldName final boolean vectorFieldsInOrder FieldInfo fi try if lastVectorFieldName null return lastVectorFieldName compareTo fi name else return true finally lastVectorFieldName fi name public class SpanOrQuery extends SpanQuery private List clauses private String field public SpanOrQuery SpanQuery clauses this clauses new ArrayList clauses length for int clauses length SpanQuery clause clauses field clause getField else if clause getField equals field throw new IllegalArgumentException this clauses add clause public SpanQuery getClauses return SpanQuery clauses toArray new SpanQuery clauses size public String getField return field public Collection getTerms Collection terms new ArrayList Iterator clauses iterator while hasNext SpanQuery clause SpanQuery next terms addAll clause getTerms return terms public void extractTerms Set terms Iterator clauses iterator while hasNext SpanQuery clause SpanQuery next clause extractTerms terms public Query rewrite IndexReader reader throws IOException SpanOrQuery clone null for int clauses size SpanQuery SpanQuery clauses get SpanQuery query SpanQuery rewrite reader if clone null clone SpanOrQuery this clone clone clauses set query if clone null else public String toString String field StringBuffer buffer new StringBuffer buffer append Iterator clauses iterator while hasNext SpanQuery clause SpanQuery next buffer append clause toString field if hasNext buffer append buffer append buffer append ToStringUtils boost getBoost return buffer toString public boolean equals Object if this return true if null getClass getClass return false final SpanOrQuery that SpanOrQuery if clauses equals that clauses return false if field equals that field return false return getBoost that getBoost public int hashCode int clauses hashCode Float floatToRawIntBits getBoost return private class SpanQueue extends PriorityQueue public SpanQueue int size initialize size protected final boolean lessThan Object o1 Object o2 Spans spans1 Spans o1 Spans spans2 Spans o2 if spans1 doc spans2 doc if spans1 start spans2 start return spans1 end spans2 end else return spans1 start spans2 start else return spans1 doc spans2 doc public PayloadSpans getPayloadSpans final IndexReader reader throws IOException return PayloadSpans getSpans reader public Spans getSpans final IndexReader reader throws IOException return SpanQuery clauses get getPayloadSpans reader return new PayloadSpans private SpanQueue queue null private boolean initSpanQueue int target throws IOException queue new SpanQueue clauses size Iterator clauses iterator while hasNext PayloadSpans spans SpanQuery next getPayloadSpans reader if target spans next target spans skipTo target queue put spans return queue size public boolean next throws IOException if queue null return initSpanQueue return false queue adjustTop return true return queue size private PayloadSpans top return PayloadSpans queue top public boolean skipTo int target throws IOException if queue null return initSpanQueue target while queue size top doc target if top skipTo target queue adjustTop else queue pop return queue size public int doc return top doc public int start return top start public int end return top end ArrayList result null PayloadSpans theTop top if theTop null theTop isPayloadAvailable result new ArrayList theTop getPayload return result public boolean isPayloadAvailable PayloadSpans top top return top null top isPayloadAvailable public String toString return SpanOrQuery this queue null queue size doc start end abstract class InvertedDocConsumerPerField abstract boolean start Fieldable fields int count throws IOException abstract void add Token token throws IOException abstract void finish throws IOException abstract void abort public class ToStringUtils public static String boost float boost if boost return Float toString boost else return public class WildcardQuery extends MultiTermQuery private boolean termContainsWildcard public WildcardQuery Term term super term this termContainsWildcard term text indexOf term text indexOf protected FilteredTermEnum getEnum IndexReader reader throws IOException return new WildcardTermEnum reader getTerm public boolean equals Object if instanceof WildcardQuery return super equals return false public Query rewrite IndexReader reader throws IOException if this termContainsWildcard return super rewrite reader return new TermQuery getTerm class StandardTokenizerImpl public static final int YYEOF private static final int ZZ_BUFFERSIZE public static final int YYINITIAL private static final String ZZ_CMAP_PACKED private static final char ZZ_CMAP zzUnpackCMap ZZ_CMAP_PACKED private static final int ZZ_ACTION zzUnpackAction private static final String ZZ_ACTION_PACKED_0 private static int zzUnpackAction int result new int int offset offset zzUnpackAction ZZ_ACTION_PACKED_0 offset result return result private static int zzUnpackAction String packed int offset int result int packed length while int count packed charAt int value packed charAt do result value while count return private static final int ZZ_ROWMAP zzUnpackRowMap private static final String ZZ_ROWMAP_PACKED_0 private static int zzUnpackRowMap int result new int int offset offset zzUnpackRowMap ZZ_ROWMAP_PACKED_0 offset result return result private static int zzUnpackRowMap String packed int offset int result int packed length while int high packed charAt result high packed charAt return private static final int ZZ_TRANS zzUnpackTrans private static final String ZZ_TRANS_PACKED_0 private static int zzUnpackTrans int result new int int offset offset zzUnpackTrans ZZ_TRANS_PACKED_0 offset result return result private static int zzUnpackTrans String packed int offset int result int packed length while int count packed charAt int value packed charAt value do result value while count return private static final int ZZ_UNKNOWN_ERROR private static final int ZZ_NO_MATCH private static final int ZZ_PUSHBACK_2BIG private static final String ZZ_ERROR_MSG private static final int ZZ_ATTRIBUTE zzUnpackAttribute private static final String ZZ_ATTRIBUTE_PACKED_0 private static int zzUnpackAttribute int result new int int offset offset zzUnpackAttribute ZZ_ATTRIBUTE_PACKED_0 offset result return result private static int zzUnpackAttribute String packed int offset int result int packed length while int count packed charAt int value packed charAt do result value while count return private java io Reader zzReader private int zzState private int zzLexicalState YYINITIAL private char zzBuffer new char ZZ_BUFFERSIZE private int zzMarkedPos private int zzPushbackPos private int zzCurrentPos private int zzStartRead private int zzEndRead private int yyline private int yychar private int yycolumn private boolean zzAtBOL true private boolean zzAtEOF public static final int ALPHANUM StandardTokenizer ALPHANUM public static final int APOSTROPHE StandardTokenizer APOSTROPHE public static final int ACRONYM StandardTokenizer ACRONYM public static final int COMPANY StandardTokenizer COMPANY public static final int EMAIL StandardTokenizer EMAIL public static final int HOST StandardTokenizer HOST public static final int NUM StandardTokenizer NUM public static final int CJ StandardTokenizer CJ public static final int ACRONYM_DEP StandardTokenizer ACRONYM_DEP public static final String TOKEN_TYPES StandardTokenizer TOKEN_TYPES public final int yychar return yychar final void getText Token setTermBuffer zzBuffer zzStartRead zzMarkedPos zzStartRead StandardTokenizerImpl java io Reader in this zzReader in StandardTokenizerImpl java io InputStream in this new java io InputStreamReader in private static char zzUnpackCMap String packed char map new char while int count packed charAt char value packed charAt do map value while count return map private boolean zzRefill throws java io IOException if zzStartRead System arraycopy zzBuffer zzStartRead zzBuffer zzEndRead zzStartRead zzEndRead zzStartRead zzCurrentPos zzStartRead zzMarkedPos zzStartRead zzPushbackPos zzStartRead zzStartRead if zzCurrentPos zzBuffer length char newBuffer new char zzCurrentPos System arraycopy zzBuffer newBuffer zzBuffer length zzBuffer newBuffer int numRead zzReader read zzBuffer zzEndRead zzBuffer length zzEndRead if numRead return true else zzEndRead numRead return false public final void yyclose throws java io IOException if zzReader null zzReader close public final void yyreset java io Reader reader zzReader reader zzAtBOL true zzAtEOF false zzEndRead zzStartRead zzCurrentPos zzMarkedPos zzPushbackPos yyline yychar yycolumn zzLexicalState YYINITIAL public final int yystate return zzLexicalState public final void yybegin int newState zzLexicalState newState public final String yytext return new String zzBuffer zzStartRead zzMarkedPos zzStartRead public final char yycharat int pos return zzBuffer zzStartRead pos public final int yylength return zzMarkedPos zzStartRead private void zzScanError int errorCode String message try message ZZ_ERROR_MSG errorCode catch ArrayIndexOutOfBoundsException message ZZ_ERROR_MSG ZZ_UNKNOWN_ERROR throw new Error message public void yypushback int number if number yylength zzScanError ZZ_PUSHBACK_2BIG zzMarkedPos number public int getNextToken throws java io IOException int zzInput int zzAction int zzCurrentPosL int zzMarkedPosL int zzEndReadL zzEndRead char zzBufferL zzBuffer char zzCMapL ZZ_CMAP int zzTransL ZZ_TRANS int zzRowMapL ZZ_ROWMAP int zzAttrL ZZ_ATTRIBUTE while true zzMarkedPosL zzMarkedPos yychar zzMarkedPosL zzStartRead zzAction zzCurrentPosL zzCurrentPos zzStartRead zzMarkedPosL zzState zzLexicalState zzForAction while true if zzCurrentPosL zzEndReadL zzInput zzBufferL zzCurrentPosL else if zzAtEOF zzInput YYEOF break zzForAction else zzCurrentPos zzCurrentPosL zzMarkedPos zzMarkedPosL boolean eof zzRefill zzCurrentPosL zzCurrentPos zzMarkedPosL zzMarkedPos zzBufferL zzBuffer zzEndReadL zzEndRead if eof zzInput YYEOF break zzForAction else zzInput zzBufferL zzCurrentPosL int zzNext zzTransL zzRowMapL zzState zzCMapL zzInput if zzNext break zzForAction zzState zzNext int zzAttributes zzAttrL zzState if zzAttributes zzAction zzState zzMarkedPosL zzCurrentPosL if zzAttributes break zzForAction zzMarkedPos zzMarkedPosL switch zzAction zzAction ZZ_ACTION zzAction case return HOST case break case return ACRONYM case break case return ACRONYM_DEP case break case case break case return NUM case break case return CJ case break case return ALPHANUM case break case return COMPANY case break case return APOSTROPHE case break case return EMAIL case break default if zzInput YYEOF zzStartRead zzCurrentPos zzAtEOF true return YYEOF else zzScanError ZZ_NO_MATCH class NearSpansOrdered implements PayloadSpans private final int allowedSlop private boolean firstTime true private boolean more false private final PayloadSpans subSpans private boolean inSameDoc false private int matchDoc private int matchStart private int matchEnd private final PayloadSpans subSpansByDoc private final Comparator spanDocComparator new Comparator public int compare Object o1 Object o2 return Spans o1 doc Spans o2 doc private SpanNearQuery query public NearSpansOrdered SpanNearQuery spanNearQuery IndexReader reader throws IOException if spanNearQuery getClauses length throw new IllegalArgumentException spanNearQuery allowedSlop spanNearQuery getSlop SpanQuery clauses spanNearQuery getClauses subSpans new PayloadSpans clauses length matchPayload new LinkedList subSpansByDoc new PayloadSpans clauses length for int clauses length subSpans clauses getPayloadSpans reader public int doc return matchDoc public int start return matchStart public int end return matchEnd return matchPayload public boolean isPayloadAvailable return matchPayload isEmpty false public boolean next throws IOException if firstTime firstTime false for int subSpans length if subSpans next more false return false more true matchPayload clear return advanceAfterOrdered public boolean skipTo int target throws IOException if firstTime firstTime false for int subSpans length if subSpans skipTo target more false return false more true else if more subSpans doc target if subSpans skipTo target inSameDoc false else more false return false matchPayload clear return advanceAfterOrdered private boolean advanceAfterOrdered throws IOException while more inSameDoc toSameDoc if stretchToOrder shrinkToAfterShortestMatch return true private boolean toSameDoc throws IOException Arrays sort subSpansByDoc spanDocComparator int firstIndex int maxDoc subSpansByDoc subSpansByDoc length doc while subSpansByDoc firstIndex doc maxDoc if subSpansByDoc firstIndex skipTo maxDoc more false inSameDoc false return false maxDoc subSpansByDoc firstIndex doc if firstIndex subSpansByDoc length firstIndex for int subSpansByDoc length assert subSpansByDoc doc maxDoc subSpansByDoc subSpansByDoc doc maxDoc inSameDoc true return true static final boolean docSpansOrdered Spans spans1 Spans spans2 assert spans1 doc spans2 doc spans1 doc spans2 doc int start1 spans1 start int start2 spans2 start return start1 start2 spans1 end spans2 end start1 start2 private static final boolean docSpansOrdered int start1 int end1 int start2 int end2 return start1 start2 end1 end2 start1 start2 private boolean stretchToOrder throws IOException matchDoc subSpans doc for int inSameDoc subSpans length while docSpansOrdered subSpans subSpans if subSpans next inSameDoc false more false break else if matchDoc subSpans doc inSameDoc false break return inSameDoc private boolean shrinkToAfterShortestMatch throws IOException matchStart subSpans subSpans length start matchEnd subSpans subSpans length end if subSpans subSpans length isPayloadAvailable matchPayload addAll subSpans subSpans length getPayload int matchSlop int lastStart matchStart int lastEnd matchEnd for int subSpans length PayloadSpans prevSpans subSpans if subSpans isPayloadAvailable matchPayload addAll subSpans getPayload int prevStart prevSpans start int prevEnd prevSpans end if prevSpans next inSameDoc false more false else if matchDoc prevSpans doc else int ppStart prevSpans start if docSpansOrdered ppStart ppEnd lastStart lastEnd prevStart ppStart prevEnd ppEnd assert prevStart matchStart matchSlop matchStart prevEnd matchStart prevStart lastStart prevStart lastEnd prevEnd public String toString return getClass getName query toString firstTime more doc start end public class ChecksumIndexOutput extends IndexOutput IndexOutput main Checksum digest public ChecksumIndexOutput IndexOutput main this main main digest new CRC32 public void writeByte byte throws IOException digest update main writeByte public void writeBytes byte int offset int length throws IOException digest update offset length main writeBytes offset length public long getChecksum return digest getValue public void flush throws IOException main flush public void close throws IOException main close public long getFilePointer return main getFilePointer public void seek long pos throw new RuntimeException public void prepareCommit throws IOException final long checksum getChecksum final long pos main getFilePointer main writeLong checksum main flush main seek pos public void finishCommit throws IOException main writeLong getChecksum public long length throws IOException return main length public class DateField private DateField private static int DATE_LEN Long toString Character MAX_RADIX length public static String MIN_DATE_STRING return timeToString public static String MAX_DATE_STRING char buffer new char DATE_LEN char Character forDigit Character MAX_RADIX Character MAX_RADIX for int DATE_LEN buffer return new String buffer public static String dateToString Date date return timeToString date getTime public static String timeToString long time if time throw new RuntimeException time String Long toString time Character MAX_RADIX if length DATE_LEN throw new RuntimeException time DATE_LEN if length DATE_LEN StringBuffer sb new StringBuffer while sb length DATE_LEN sb insert sb toString return public static long stringToTime String return Long parseLong Character MAX_RADIX public static Date stringToDate String return new Date stringToTime public class FieldDoc extends ScoreDoc public Comparable fields public FieldDoc int doc float score super doc score public FieldDoc int doc float score Comparable fields super doc score this fields fields public class TokenMgrError extends Error static final int LEXICAL_ERROR static final int STATIC_LEXER_ERROR static final int INVALID_LEXICAL_STATE static final int LOOP_DETECTED int errorCode protected static final String addEscapes String str StringBuffer retval new StringBuffer char ch for int str length switch str charAt case continue case retval append continue case retval append continue case retval append continue case retval append continue case retval append continue case retval append continue case retval append continue case retval append continue default if ch str charAt ch String Integer toString ch retval append substring length length else retval append ch continue return retval toString protected static String LexicalError boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar return errorLine errorColumn EOFSeen addEscapes String valueOf curChar int curChar addEscapes errorAfter public String getMessage return super getMessage public TokenMgrError public TokenMgrError String message int reason super message errorCode reason public TokenMgrError boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason this LexicalError EOFSeen lexState errorLine errorColumn errorAfter curChar reason abstract class DocConsumerPerThread abstract DocumentsWriter DocWriter processDocument throws IOException abstract void abort final class SegmentMerger static final byte NORMS_HEADER new byte private Directory directory private String segment private int termIndexInterval IndexWriter DEFAULT_TERM_INDEX_INTERVAL private List readers new ArrayList private FieldInfos fieldInfos private int mergedDocs private CheckAbort checkAbort private boolean mergeDocStores private final static int MAX_RAW_MERGE_DOCS SegmentMerger Directory dir String name directory dir segment name SegmentMerger IndexWriter writer String name MergePolicy OneMerge merge directory writer getDirectory segment name if merge null checkAbort new CheckAbort merge directory termIndexInterval writer getTermIndexInterval boolean hasProx return fieldInfos hasProx final void add IndexReader reader readers add reader final IndexReader segmentReader int return IndexReader readers get final int merge throws CorruptIndexException IOException return merge true final int merge boolean mergeDocStores throws CorruptIndexException IOException this mergeDocStores mergeDocStores mergedDocs mergeFields mergeTerms mergeNorms if mergeDocStores fieldInfos hasVectors mergeVectors return mergedDocs final void closeReaders throws IOException IndexReader reader IndexReader readers get reader close final List createCompoundFile String fileName throws IOException CompoundFileWriter cfsWriter new CompoundFileWriter directory fileName checkAbort List files new ArrayList IndexFileNames COMPOUND_EXTENSIONS length for int IndexFileNames COMPOUND_EXTENSIONS length String ext IndexFileNames COMPOUND_EXTENSIONS if ext equals IndexFileNames PROX_EXTENSION hasProx continue if mergeDocStores ext equals IndexFileNames FIELDS_EXTENSION ext equals IndexFileNames FIELDS_INDEX_EXTENSION files add segment ext for int fieldInfos size FieldInfo fi fieldInfos fieldInfo if fi isIndexed fi omitNorms files add segment IndexFileNames NORMS_EXTENSION break if fieldInfos hasVectors mergeDocStores for int IndexFileNames VECTOR_EXTENSIONS length files add segment IndexFileNames VECTOR_EXTENSIONS Iterator it files iterator while it hasNext cfsWriter addFile String it next cfsWriter close return files private void addIndexed IndexReader reader FieldInfos fieldInfos Collection names boolean storeTermVectors boolean storePositionWithTermVector boolean storeOffsetWithTermVector boolean storePayloads boolean omitTf throws IOException Iterator names iterator while hasNext String field String next fieldInfos add field true storeTermVectors storePositionWithTermVector storeOffsetWithTermVector reader hasNorms field storePayloads omitTf private SegmentReader matchingSegmentReaders private int rawDocLengths private int rawDocLengths2 private void setMatchingSegmentReaders matchingSegmentReaders new SegmentReader readers size for int readers size IndexReader reader IndexReader readers get if reader instanceof SegmentReader SegmentReader segmentReader SegmentReader reader boolean same true FieldInfos segmentFieldInfos segmentReader getFieldInfos for int same segmentFieldInfos size same fieldInfos fieldName equals segmentFieldInfos fieldName if same matchingSegmentReaders segmentReader rawDocLengths new int MAX_RAW_MERGE_DOCS rawDocLengths2 new int MAX_RAW_MERGE_DOCS private final int mergeFields throws CorruptIndexException IOException if mergeDocStores final SegmentReader sr SegmentReader readers get readers size fieldInfos FieldInfos sr fieldInfos clone else for int readers size IndexReader reader IndexReader readers get if reader instanceof SegmentReader SegmentReader segmentReader SegmentReader reader for int segmentReader getFieldInfos size FieldInfo fi segmentReader getFieldInfos fieldInfo fieldInfos add fi name fi isIndexed fi storeTermVector fi storePositionWithTermVector fi storeOffsetWithTermVector reader hasNorms fi name fi storePayloads fi omitTf else addIndexed reader fieldInfos reader getFieldNames IndexReader FieldOption TERMVECTOR_WITH_POSITION_OFFSET true true true false false addIndexed reader fieldInfos reader getFieldNames IndexReader FieldOption TERMVECTOR_WITH_POSITION true true false false false addIndexed reader fieldInfos reader getFieldNames IndexReader FieldOption TERMVECTOR_WITH_OFFSET true false true false false addIndexed reader fieldInfos reader getFieldNames IndexReader FieldOption TERMVECTOR true false false false false addIndexed reader fieldInfos reader getFieldNames IndexReader FieldOption OMIT_TF false false false false true addIndexed reader fieldInfos reader getFieldNames IndexReader FieldOption STORES_PAYLOADS false false false true false addIndexed reader fieldInfos reader getFieldNames IndexReader FieldOption INDEXED false false false false false fieldInfos add reader getFieldNames IndexReader FieldOption UNINDEXED false fieldInfos write directory segment int docCount setMatchingSegmentReaders if mergeDocStores FieldSelector fieldSelectorMerge new FieldSelector public FieldSelectorResult accept String fieldName return FieldSelectorResult LOAD_FOR_MERGE final FieldsWriter fieldsWriter new FieldsWriter directory segment fieldInfos try for int readers size final IndexReader reader IndexReader readers get final SegmentReader matchingSegmentReader matchingSegmentReaders final FieldsReader matchingFieldsReader final boolean hasMatchingReader if matchingSegmentReader null final FieldsReader fieldsReader matchingSegmentReader getFieldsReader if fieldsReader null fieldsReader canReadRawDocs matchingFieldsReader null hasMatchingReader false else matchingFieldsReader fieldsReader hasMatchingReader true else hasMatchingReader false matchingFieldsReader null final int maxDoc reader maxDoc final boolean hasDeletions reader hasDeletions for int maxDoc if hasMatchingReader int start int numDocs do numDocs if maxDoc break if hasDeletions matchingSegmentReader isDeleted break while numDocs MAX_RAW_MERGE_DOCS IndexInput stream matchingFieldsReader rawDocs rawDocLengths start numDocs fieldsWriter addRawDocuments stream rawDocLengths numDocs docCount numDocs if checkAbort null checkAbort work numDocs else Document doc reader document fieldSelectorMerge fieldsWriter addDocument doc docCount if checkAbort null checkAbort work else finally fieldsWriter close final long fdxFileLength directory fileLength segment IndexFileNames FIELDS_INDEX_EXTENSION if docCount fdxFileLength throw new RuntimeException docCount fdxFileLength else for int readers size docCount IndexReader readers get numDocs return docCount private final void mergeVectors throws IOException TermVectorsWriter termVectorsWriter new TermVectorsWriter directory segment fieldInfos try for int readers size final SegmentReader matchingSegmentReader matchingSegmentReaders TermVectorsReader matchingVectorsReader final boolean hasMatchingReader if matchingSegmentReader null matchingVectorsReader matchingSegmentReader termVectorsReaderOrig if matchingVectorsReader null matchingVectorsReader canReadRawDocs matchingVectorsReader null hasMatchingReader false else hasMatchingReader matchingVectorsReader null else hasMatchingReader false matchingVectorsReader null IndexReader reader IndexReader readers get final boolean hasDeletions reader hasDeletions int maxDoc reader maxDoc for int docNum docNum maxDoc if hasDeletions reader isDeleted docNum if hasMatchingReader int start docNum int numDocs do docNum numDocs if docNum maxDoc break if hasDeletions matchingSegmentReader isDeleted docNum docNum break while numDocs MAX_RAW_MERGE_DOCS matchingVectorsReader rawDocs rawDocLengths rawDocLengths2 start numDocs termVectorsWriter addRawDocuments matchingVectorsReader rawDocLengths rawDocLengths2 numDocs if checkAbort null checkAbort work numDocs else TermFreqVector vectors reader getTermFreqVectors docNum termVectorsWriter addAllDocVectors vectors docNum if checkAbort null checkAbort work else docNum finally termVectorsWriter close final long tvxSize directory fileLength segment IndexFileNames VECTORS_INDEX_EXTENSION if mergedDocs tvxSize throw new RuntimeException mergedDocs tvxSize private IndexOutput freqOutput null private IndexOutput proxOutput null private TermInfosWriter termInfosWriter null private int skipInterval private int maxSkipLevels private SegmentMergeQueue queue null private DefaultSkipListWriter skipListWriter null private final void mergeTerms throws CorruptIndexException IOException try freqOutput directory createOutput segment if hasProx proxOutput directory createOutput segment termInfosWriter new TermInfosWriter directory segment fieldInfos termIndexInterval skipInterval termInfosWriter skipInterval maxSkipLevels termInfosWriter maxSkipLevels skipListWriter new DefaultSkipListWriter skipInterval maxSkipLevels mergedDocs freqOutput proxOutput queue new SegmentMergeQueue readers size mergeTermInfos finally if freqOutput null freqOutput close if proxOutput null proxOutput close if termInfosWriter null termInfosWriter close if queue null queue close private final void mergeTermInfos throws CorruptIndexException IOException int base final int readerCount readers size for int readerCount IndexReader reader IndexReader readers get TermEnum termEnum reader terms SegmentMergeInfo smi new SegmentMergeInfo base termEnum reader int docMap smi getDocMap if docMap null if docMaps null docMaps new int readerCount delCounts new int readerCount docMaps docMap delCounts smi reader maxDoc smi reader numDocs base reader numDocs if smi next else smi close SegmentMergeInfo match new SegmentMergeInfo readers size while queue size match matchSize SegmentMergeInfo queue pop Term term match term SegmentMergeInfo top SegmentMergeInfo queue top while top null term compareTo top term match matchSize SegmentMergeInfo queue pop top SegmentMergeInfo queue top if checkAbort null checkAbort work df while matchSize SegmentMergeInfo smi match matchSize if smi next else private final int mergeTermInfo SegmentMergeInfo smis int throws CorruptIndexException IOException final long freqPointer freqOutput getFilePointer final long proxPointer if proxOutput null proxPointer proxOutput getFilePointer else proxPointer int df df appendPostingsNoTf smis else df appendPostings smis long skipPointer skipListWriter writeSkip freqOutput if df termInfo set df freqPointer proxPointer int skipPointer freqPointer termInfosWriter add smis term termInfo return df private byte payloadBuffer private int docMaps int getDocMaps return docMaps private int delCounts int getDelCounts return delCounts private final int appendPostings SegmentMergeInfo smis int throws CorruptIndexException IOException int lastDoc skipListWriter resetSkip boolean storePayloads fieldInfos fieldInfo smis term field storePayloads for int SegmentMergeInfo smi smis TermPositions postings smi getPositions assert postings null int base smi base int docMap smi getDocMap postings seek smi termEnum while postings next int doc postings doc if docMap null if doc df doc lastDoc throw new CorruptIndexException doc lastDoc df if df skipInterval skipListWriter setSkipData lastDoc storePayloads lastPayloadLength skipListWriter bufferSkip df lastDoc doc int freq postings freq if freq else for int freq int position postings nextPosition int delta position lastPosition if storePayloads int payloadLength postings getPayloadLength if payloadLength lastPayloadLength proxOutput writeVInt delta else proxOutput writeVInt delta proxOutput writeVInt payloadLength lastPayloadLength payloadLength if payloadLength if payloadBuffer null payloadBuffer length payloadLength payloadBuffer new byte payloadLength postings getPayload payloadBuffer proxOutput writeBytes payloadBuffer payloadLength else proxOutput writeVInt delta lastPosition position return df private final int appendPostingsNoTf SegmentMergeInfo smis int throws CorruptIndexException IOException int lastDoc skipListWriter resetSkip for int SegmentMergeInfo smi smis TermPositions postings smi getPositions assert postings null int base smi base int docMap smi getDocMap postings seek smi termEnum while postings next int doc postings doc if docMap null if doc df doc lastDoc throw new CorruptIndexException doc lastDoc df if df skipInterval skipListWriter setSkipData lastDoc false lastPayloadLength skipListWriter bufferSkip df int docCode doc lastDoc lastDoc doc return df private void mergeNorms throws IOException byte normBuffer null IndexOutput output null try for int fieldInfos size FieldInfo fi fieldInfos fieldInfo if fi isIndexed fi omitNorms if output null output directory createOutput segment IndexFileNames NORMS_EXTENSION output writeBytes NORMS_HEADER NORMS_HEADER length for int readers size IndexReader reader IndexReader readers get int maxDoc reader maxDoc if normBuffer null normBuffer length maxDoc normBuffer new byte maxDoc reader norms fi name normBuffer if reader hasDeletions output writeBytes normBuffer maxDoc else for int maxDoc if reader isDeleted output writeByte normBuffer if checkAbort null checkAbort work maxDoc finally if output null output close final static class CheckAbort private double workCount private MergePolicy OneMerge merge private Directory dir public CheckAbort MergePolicy OneMerge merge Directory dir this merge merge this dir dir public void work double units throws MergePolicy MergeAbortedException workCount units if workCount merge checkAborted dir workCount public class SinkTokenizer extends Tokenizer this lst input public SinkTokenizer public SinkTokenizer int initCap return lst public Token next final Token reusableToken throws IOException assert reusableToken null if iter null iter lst iterator if iter hasNext Token nextToken Token iter next return Token nextToken clone return null public void add Token if null return lst add Token clone public void close throws IOException input null lst null public void reset throws IOException iter lst iterator final class DocumentsWriter IndexWriter writer Directory directory private final static int MAX_THREAD_STATE private DocumentsWriterThreadState threadStates new DocumentsWriterThreadState private final HashMap threadBindings new HashMap private DocFieldProcessor docFieldProcessor PrintStream infoStream int maxFieldLength IndexWriter DEFAULT_MAX_FIELD_LENGTH Similarity similarity List newFiles static class DocState DocumentsWriter docWriter Analyzer analyzer int maxFieldLength PrintStream infoStream Similarity similarity int docID Document doc String maxTermPrefix public boolean testPoint String name return docWriter writer testPoint name static class FlushState DocumentsWriter docWriter Directory directory String segmentName String docStoreSegmentName int numDocsInRAM int numDocsInStore Collection flushedFiles public String segmentFileName String ext return segmentName ext abstract static class DocWriter DocWriter next int docID abstract void finish throws IOException abstract void abort abstract long sizeInBytes void setNext DocWriter next this next next final DocConsumer consumer private BufferedDeletes deletesInRAM new BufferedDeletes private BufferedDeletes deletesFlushed new BufferedDeletes private int maxBufferedDeleteTerms IndexWriter DEFAULT_MAX_BUFFERED_DELETE_TERMS private long ramBufferSize long IndexWriter DEFAULT_RAM_BUFFER_SIZE_MB private long waitQueuePauseBytes long ramBufferSize private long waitQueueResumeBytes long ramBufferSize private long freeTrigger long IndexWriter DEFAULT_RAM_BUFFER_SIZE_MB private long freeLevel long IndexWriter DEFAULT_RAM_BUFFER_SIZE_MB private int maxBufferedDocs IndexWriter DEFAULT_MAX_BUFFERED_DOCS synchronized void updateFlushedDocCount int flushedDocCount synchronized int getFlushedDocCount return flushedDocCount synchronized void setFlushedDocCount int flushedDocCount private boolean closed DocumentsWriter Directory directory IndexWriter writer throws IOException this directory directory this writer writer this similarity writer getSimilarity flushedDocCount writer maxDoc final TermsHashConsumer termVectorsWriter new TermVectorsTermsWriter this final TermsHashConsumer freqProxWriter new FreqProxTermsWriter final InvertedDocConsumer termsHash new TermsHash this true freqProxWriter new TermsHash this false termVectorsWriter null final NormsWriter normsWriter new NormsWriter final DocInverter docInverter new DocInverter termsHash normsWriter final StoredFieldsWriter fieldsWriter new StoredFieldsWriter this final DocFieldConsumers docFieldConsumers new DocFieldConsumers docInverter fieldsWriter consumer docFieldProcessor new DocFieldProcessor this docFieldConsumers boolean hasProx return docFieldProcessor fieldInfos hasProx synchronized void setInfoStream PrintStream infoStream this infoStream infoStream for int threadStates length threadStates docState infoStream infoStream synchronized void setMaxFieldLength int maxFieldLength this maxFieldLength maxFieldLength for int threadStates length threadStates docState maxFieldLength maxFieldLength synchronized void setSimilarity Similarity similarity this similarity similarity for int threadStates length threadStates docState similarity similarity synchronized void setRAMBufferSizeMB double mb if mb IndexWriter DISABLE_AUTO_FLUSH ramBufferSize IndexWriter DISABLE_AUTO_FLUSH waitQueuePauseBytes waitQueueResumeBytes else ramBufferSize long mb waitQueuePauseBytes long ramBufferSize waitQueueResumeBytes long ramBufferSize freeTrigger long ramBufferSize freeLevel long ramBufferSize synchronized double getRAMBufferSizeMB if ramBufferSize IndexWriter DISABLE_AUTO_FLUSH return ramBufferSize else return ramBufferSize void setMaxBufferedDocs int count maxBufferedDocs count int getMaxBufferedDocs return maxBufferedDocs String getSegment return segment int getNumDocsInRAM return numDocsInRAM synchronized String getDocStoreSegment return docStoreSegment int getDocStoreOffset return docStoreOffset synchronized String closeDocStore throws IOException assert allThreadsIdle if infoStream null message openFiles size docStoreSegment numDocsInStore boolean success false try initFlushState true closedFiles clear consumer closeDocStore flushState assert openFiles size String docStoreSegment docStoreSegment null docStoreOffset numDocsInStore success true return finally if success abort private FlushState flushState Collection abortedFiles return abortedFiles void message String message writer message message final List openFiles new ArrayList final List closedFiles new ArrayList synchronized List openFiles return List ArrayList openFiles clone synchronized List closedFiles return List ArrayList closedFiles clone synchronized void addOpenFile String name assert openFiles contains name openFiles add name synchronized void removeOpenFile String name assert openFiles contains name openFiles remove name closedFiles add name synchronized void setAborting aborting true synchronized void abort throws IOException try message waitQueue abort pauseAllThreads try assert waitQueue numWaiting waitQueue waitingBytes try abortedFiles openFiles catch Throwable abortedFiles null deletesInRAM clear openFiles clear for int threadStates length try threadStates consumer abort catch Throwable try consumer abort catch Throwable docStoreSegment null numDocsInStore docStoreOffset doAfterFlush finally resumeAllThreads finally aborting false notifyAll private void doAfterFlush throws IOException assert allThreadsIdle threadBindings clear waitQueue reset segment null numDocsInRAM nextDocID bufferIsFull false flushPending false for int threadStates length threadStates doAfterFlush numBytesUsed synchronized boolean pauseAllThreads pauseThreads while allThreadsIdle try wait catch InterruptedException Thread currentThread interrupt return aborting synchronized void resumeAllThreads pauseThreads assert pauseThreads if pauseThreads notifyAll private synchronized boolean allThreadsIdle for int threadStates length if threadStates isIdle return false return true synchronized private void initFlushState boolean onlyDocStore initSegmentName onlyDocStore if flushState null flushState new FlushState flushState directory directory flushState docWriter this flushState docStoreSegmentName docStoreSegment flushState segmentName segment flushState numDocsInRAM numDocsInRAM flushState numDocsInStore numDocsInStore flushState flushedFiles new HashSet synchronized int flush boolean closeDocStore throws IOException assert allThreadsIdle assert numDocsInRAM assert nextDocID numDocsInRAM assert waitQueue numWaiting assert waitQueue waitingBytes initFlushState false docStoreOffset numDocsInStore if infoStream null message flushState segmentName numDocsInRAM boolean success false try if closeDocStore assert flushState docStoreSegmentName null assert flushState docStoreSegmentName equals flushState segmentName closeDocStore flushState numDocsInStore Collection threads new HashSet for int threadStates length threads add threadStates consumer consumer flush threads flushState if infoStream null final long newSegmentSize segmentSize flushState segmentName String message numBytesUsed newSegmentSize nf format numDocsInRAM newSegmentSize nf format newSegmentSize numBytesUsed message message flushedDocCount flushState numDocsInRAM doAfterFlush success true finally if success abort assert waitQueue waitingBytes return flushState numDocsInRAM void createCompoundFile String segment throws IOException CompoundFileWriter cfsWriter new CompoundFileWriter directory segment IndexFileNames COMPOUND_FILE_EXTENSION Iterator it flushState flushedFiles iterator while it hasNext cfsWriter addFile String it next cfsWriter close synchronized boolean setFlushPending if flushPending return false else flushPending true return true synchronized void clearFlushPending flushPending false synchronized void pushDeletes deletesFlushed update deletesInRAM synchronized void close closed true notifyAll synchronized void initSegmentName boolean onlyDocStore if segment null onlyDocStore docStoreSegment null segment writer newSegmentName assert numDocsInRAM if docStoreSegment null docStoreSegment segment assert numDocsInStore synchronized DocumentsWriterThreadState getThreadState Document doc Term delTerm throws IOException DocumentsWriterThreadState state DocumentsWriterThreadState threadBindings get Thread currentThread if state null DocumentsWriterThreadState minThreadState null for int threadStates length DocumentsWriterThreadState ts threadStates if minThreadState null ts numThreads minThreadState numThreads minThreadState ts if minThreadState null minThreadState numThreads threadStates length MAX_THREAD_STATE state minThreadState state numThreads else DocumentsWriterThreadState newArray new DocumentsWriterThreadState threadStates length if threadStates length System arraycopy threadStates newArray threadStates length state newArray threadStates length new DocumentsWriterThreadState this threadStates newArray threadBindings put Thread currentThread state waitReady state initSegmentName false state isIdle false boolean success false try state docState docID nextDocID assert writer testPoint if delTerm null addDeleteTerm delTerm state docState docID state doFlushAfter timeToFlushDeletes assert writer testPoint nextDocID numDocsInRAM if flushPending maxBufferedDocs IndexWriter DISABLE_AUTO_FLUSH numDocsInRAM maxBufferedDocs flushPending true state doFlushAfter true success true finally if success state isIdle true notifyAll if state doFlushAfter state doFlushAfter false flushPending false return state boolean addDocument Document doc Analyzer analyzer throws CorruptIndexException IOException return updateDocument doc analyzer null boolean updateDocument Term Document doc Analyzer analyzer throws CorruptIndexException IOException return updateDocument doc analyzer boolean updateDocument Document doc Analyzer analyzer Term delTerm throws CorruptIndexException IOException final DocumentsWriterThreadState state getThreadState doc delTerm final DocState docState state docState docState doc doc docState analyzer analyzer boolean success false try final DocWriter perDoc state consumer processDocument finishDocument state perDoc success true finally if success synchronized this if aborting state isIdle true notifyAll abort else skipDocWriter docID docState docID boolean success2 false try waitQueue add skipDocWriter success2 true finally if success2 state isIdle true notifyAll abort return false state isIdle true notifyAll if state doFlushAfter state doFlushAfter false flushPending false notifyAll addDeleteDocID state docState docID return state doFlushAfter timeToFlushDeletes synchronized int getNumBufferedDeleteTerms return deletesInRAM numTerms synchronized HashMap getBufferedDeleteTerms return deletesInRAM terms synchronized void remapDeletes SegmentInfos infos int docMaps int delCounts MergePolicy OneMerge merge int mergeDocCount if docMaps null return MergeDocIDRemapper mapper new MergeDocIDRemapper infos docMaps delCounts merge mergeDocCount deletesInRAM remap mapper infos docMaps delCounts merge mergeDocCount deletesFlushed remap mapper infos docMaps delCounts merge mergeDocCount flushedDocCount mapper docShift synchronized private void waitReady DocumentsWriterThreadState state while closed state null state isIdle pauseThreads flushPending aborting try wait catch InterruptedException Thread currentThread interrupt if closed throw new AlreadyClosedException synchronized boolean bufferDeleteTerms Term terms throws IOException waitReady null for int terms length addDeleteTerm terms numDocsInRAM return timeToFlushDeletes synchronized boolean bufferDeleteTerm Term term throws IOException waitReady null addDeleteTerm term numDocsInRAM return timeToFlushDeletes synchronized boolean bufferDeleteQueries Query queries throws IOException waitReady null for int queries length addDeleteQuery queries numDocsInRAM return timeToFlushDeletes synchronized boolean bufferDeleteQuery Query query throws IOException waitReady null addDeleteQuery query numDocsInRAM return timeToFlushDeletes synchronized boolean deletesFull return maxBufferedDeleteTerms IndexWriter DISABLE_AUTO_FLUSH deletesInRAM numTerms deletesInRAM queries size deletesInRAM docIDs size maxBufferedDeleteTerms synchronized private boolean timeToFlushDeletes return bufferIsFull deletesFull setFlushPending void setMaxBufferedDeleteTerms int maxBufferedDeleteTerms this maxBufferedDeleteTerms maxBufferedDeleteTerms int getMaxBufferedDeleteTerms return maxBufferedDeleteTerms synchronized boolean hasDeletes return deletesFlushed any synchronized boolean applyDeletes SegmentInfos infos throws IOException if hasDeletes return false if infoStream null message deletesFlushed numTerms deletesFlushed docIDs size deletesFlushed queries size infos size final int infosEnd infos size int docStart boolean any false for int infosEnd IndexReader reader SegmentReader get infos info false boolean success false try any applyDeletes reader docStart docStart reader maxDoc success true finally if reader null try if success reader doCommit finally reader doClose deletesFlushed clear return any private final synchronized boolean applyDeletes IndexReader reader int docIDStart throws CorruptIndexException IOException final int docEnd docIDStart reader maxDoc boolean any false Iterator iter deletesFlushed terms entrySet iterator while iter hasNext Entry entry Entry iter next Term term Term entry getKey TermDocs docs reader termDocs term if docs null int limit BufferedDeletes Num entry getValue getNum try while docs next int docID docs doc if docIDStart docID limit break reader deleteDocument docID any true finally docs close iter deletesFlushed docIDs iterator while iter hasNext int docID Integer iter next intValue if docID docIDStart docID docEnd reader deleteDocument docID docIDStart any true IndexSearcher searcher new IndexSearcher reader iter deletesFlushed queries entrySet iterator while iter hasNext Entry entry Entry iter next Query query Query entry getKey int limit Integer entry getValue intValue Weight weight query weight searcher Scorer scorer weight scorer reader while scorer next final int docID scorer doc if docIDStart docID limit break reader deleteDocument docID any true searcher close return any synchronized private void addDeleteTerm Term term int docCount BufferedDeletes Num num BufferedDeletes Num deletesInRAM terms get term final int docIDUpto flushedDocCount docCount if num null deletesInRAM terms put term new BufferedDeletes Num docIDUpto else num setNum docIDUpto deletesInRAM numTerms synchronized private void addDeleteDocID int docID deletesInRAM docIDs add new Integer flushedDocCount docID synchronized private void addDeleteQuery Query query int docID deletesInRAM queries put query new Integer flushedDocCount docID synchronized boolean doBalanceRAM return ramBufferSize IndexWriter DISABLE_AUTO_FLUSH bufferIsFull numBytesUsed ramBufferSize numBytesAlloc freeTrigger private void finishDocument DocumentsWriterThreadState perThread DocWriter docWriter throws IOException if doBalanceRAM balanceRAM synchronized this assert docWriter null docWriter docID perThread docState docID if aborting if docWriter null try docWriter abort catch Throwable perThread isIdle true notifyAll return final boolean doPause if docWriter null doPause waitQueue add docWriter else skipDocWriter docID perThread docState docID doPause waitQueue add skipDocWriter if doPause waitForWaitQueue if bufferIsFull flushPending flushPending true perThread doFlushAfter true perThread isIdle true notifyAll synchronized void waitForWaitQueue do try wait catch InterruptedException Thread currentThread interrupt while waitQueue doResume private static class SkipDocWriter extends DocWriter void finish void abort long sizeInBytes return final SkipDocWriter skipDocWriter new SkipDocWriter long getRAMUsed return numBytesUsed long numBytesAlloc long numBytesUsed NumberFormat nf NumberFormat getInstance private long segmentSize String segmentName throws IOException assert infoStream null long size directory fileLength segmentName directory fileLength segmentName directory fileLength segmentName directory fileLength segmentName final String normFileName segmentName if directory fileExists normFileName size directory fileLength normFileName return size final static int OBJECT_HEADER_BYTES final static int POINTER_NUM_BYTE final static int INT_NUM_BYTE final static int CHAR_NUM_BYTE final static int BYTE_BLOCK_SHIFT final static int BYTE_BLOCK_SIZE int BYTE_BLOCK_SHIFT final static int BYTE_BLOCK_MASK BYTE_BLOCK_SIZE final static int BYTE_BLOCK_NOT_MASK BYTE_BLOCK_MASK private class ByteBlockAllocator extends ByteBlockPool Allocator ArrayList freeByteBlocks new ArrayList byte getByteBlock boolean trackAllocations synchronized DocumentsWriter this final int size freeByteBlocks size final byte if size numBytesAlloc BYTE_BLOCK_SIZE new byte BYTE_BLOCK_SIZE else byte freeByteBlocks remove size if trackAllocations numBytesUsed BYTE_BLOCK_SIZE assert numBytesUsed numBytesAlloc return void recycleByteBlocks byte blocks int start int end synchronized DocumentsWriter this for int start end freeByteBlocks add blocks final static int INT_BLOCK_SHIFT final static int INT_BLOCK_SIZE int INT_BLOCK_SHIFT final static int INT_BLOCK_MASK INT_BLOCK_SIZE private ArrayList freeIntBlocks new ArrayList synchronized int getIntBlock boolean trackAllocations final int size freeIntBlocks size final int if size numBytesAlloc INT_BLOCK_SIZE INT_NUM_BYTE new int INT_BLOCK_SIZE else int freeIntBlocks remove size if trackAllocations numBytesUsed INT_BLOCK_SIZE INT_NUM_BYTE assert numBytesUsed numBytesAlloc return synchronized void bytesAllocated long numBytes numBytesAlloc numBytes assert numBytesUsed numBytesAlloc synchronized void bytesUsed long numBytes numBytesUsed numBytes assert numBytesUsed numBytesAlloc synchronized void recycleIntBlocks int blocks int start int end for int start end freeIntBlocks add blocks ByteBlockAllocator byteBlockAllocator new ByteBlockAllocator final static int CHAR_BLOCK_SHIFT final static int CHAR_BLOCK_SIZE int CHAR_BLOCK_SHIFT final static int CHAR_BLOCK_MASK CHAR_BLOCK_SIZE final static int MAX_TERM_LENGTH CHAR_BLOCK_SIZE private ArrayList freeCharBlocks new ArrayList synchronized char getCharBlock final int size freeCharBlocks size final char if size numBytesAlloc CHAR_BLOCK_SIZE CHAR_NUM_BYTE new char CHAR_BLOCK_SIZE else char freeCharBlocks remove size numBytesUsed CHAR_BLOCK_SIZE CHAR_NUM_BYTE assert numBytesUsed numBytesAlloc return synchronized void recycleCharBlocks char blocks int numBlocks for int numBlocks freeCharBlocks add blocks String toMB long return nf format void balanceRAM final long flushTrigger long ramBufferSize if numBytesAlloc freeTrigger if infoStream null message toMB numBytesUsed toMB flushTrigger toMB numBytesAlloc toMB freeTrigger toMB byteBlockAllocator freeByteBlocks size BYTE_BLOCK_SIZE toMB freeCharBlocks size CHAR_BLOCK_SIZE CHAR_NUM_BYTE final long startBytesAlloc numBytesAlloc int iter boolean any true while numBytesAlloc freeLevel synchronized this if byteBlockAllocator freeByteBlocks size freeCharBlocks size freeIntBlocks size any bufferIsFull numBytesUsed flushTrigger if infoStream null if numBytesUsed flushTrigger message else message assert numBytesUsed numBytesAlloc break if iter byteBlockAllocator freeByteBlocks size byteBlockAllocator freeByteBlocks remove byteBlockAllocator freeByteBlocks size numBytesAlloc BYTE_BLOCK_SIZE if iter freeCharBlocks size freeCharBlocks remove freeCharBlocks size numBytesAlloc CHAR_BLOCK_SIZE CHAR_NUM_BYTE if iter freeIntBlocks size freeIntBlocks remove freeIntBlocks size numBytesAlloc INT_BLOCK_SIZE INT_NUM_BYTE if iter any any consumer freeRAM iter if infoStream null message nf format startBytesAlloc numBytesAlloc nf format numBytesUsed nf format numBytesAlloc else synchronized this if numBytesUsed flushTrigger if infoStream null message nf format numBytesUsed nf format numBytesAlloc nf format flushTrigger bufferIsFull true final WaitQueue waitQueue new WaitQueue private class WaitQueue DocWriter waiting int nextWriteDocID int nextWriteLoc int numWaiting long waitingBytes public WaitQueue waiting new DocWriter synchronized void reset assert numWaiting assert waitingBytes nextWriteDocID synchronized boolean doResume return waitingBytes waitQueueResumeBytes synchronized boolean doPause return waitingBytes waitQueuePauseBytes synchronized void abort int count for int waiting length final DocWriter doc waiting if doc null doc abort waiting null count waitingBytes assert count numWaiting numWaiting private void writeDocument DocWriter doc throws IOException assert doc skipDocWriter nextWriteDocID doc docID boolean success false try doc finish nextWriteDocID numDocsInStore nextWriteLoc assert nextWriteLoc waiting length if nextWriteLoc waiting length nextWriteLoc success true finally if success setAborting synchronized public boolean add DocWriter doc throws IOException assert doc docID nextWriteDocID if doc docID nextWriteDocID writeDocument doc while true doc waiting nextWriteLoc if doc null numWaiting waiting nextWriteLoc null waitingBytes doc sizeInBytes writeDocument doc else break else int gap doc docID nextWriteDocID if gap waiting length DocWriter newArray new DocWriter ArrayUtil getNextSize gap assert nextWriteLoc System arraycopy waiting nextWriteLoc newArray waiting length nextWriteLoc System arraycopy waiting newArray waiting length nextWriteLoc nextWriteLoc nextWriteLoc waiting newArray gap doc docID nextWriteDocID int loc nextWriteLoc gap if loc waiting length loc waiting length assert loc waiting length assert waiting loc null waiting loc doc numWaiting waitingBytes doc sizeInBytes return doPause public class CachingSpanFilter extends SpanFilter protected SpanFilter filter protected transient Map cache public CachingSpanFilter SpanFilter filter this filter filter public BitSet bits IndexReader reader throws IOException SpanFilterResult result getCachedResult reader return result null result getBits null public DocIdSet getDocIdSet IndexReader reader throws IOException SpanFilterResult result getCachedResult reader return result null result getDocIdSet null private SpanFilterResult getCachedResult IndexReader reader throws IOException SpanFilterResult result null if cache null cache new WeakHashMap result SpanFilterResult cache get reader if result null result filter bitSpans reader cache put reader result return result public SpanFilterResult bitSpans IndexReader reader throws IOException return getCachedResult reader public String toString return filter public boolean equals Object if instanceof CachingSpanFilter return false return this filter equals CachingSpanFilter filter public int hashCode return filter hashCode public class TermVectorEntryFreqSortedComparator implements Comparator public int compare Object object Object object1 int result TermVectorEntry entry TermVectorEntry object TermVectorEntry entry1 TermVectorEntry object1 result entry1 getFrequency entry getFrequency if result result entry getTerm compareTo entry1 getTerm if result result entry getField compareTo entry1 getField return result public abstract class Tokenizer extends TokenStream protected Reader input protected Tokenizer protected Tokenizer Reader input this input input public void close throws IOException input close public void reset Reader input throws IOException this input input public final class LucenePackage public static Package get return LucenePackage class getPackage abstract class RawPostingList final static int BYTES_SIZE DocumentsWriter OBJECT_HEADER_BYTES DocumentsWriter INT_NUM_BYTE int textStart int intStart int byteStart public class ComplexExplanation extends Explanation private Boolean match public ComplexExplanation super public ComplexExplanation boolean match float value String description super value description this match Boolean valueOf match public Boolean getMatch return match public void setMatch Boolean match this match match public boolean isMatch Boolean getMatch return null booleanValue super isMatch protected String getSummary if null getMatch return super getSummary return getValue isMatch getDescription public class Hit implements java io Serializable private Document doc null private boolean resolved false private Hits hits null private int hitNumber Hit Hits hits int hitNumber this hits hits this hitNumber hitNumber public Document getDocument throws CorruptIndexException IOException if resolved fetchTheHit return doc public float getScore throws IOException return hits score hitNumber public int getId throws IOException return hits id hitNumber private void fetchTheHit throws CorruptIndexException IOException doc hits doc hitNumber resolved true public float getBoost throws CorruptIndexException IOException return getDocument getBoost public String get String name throws CorruptIndexException IOException return getDocument get name public String toString StringBuffer buffer new StringBuffer buffer append buffer append hits toString buffer append buffer append hitNumber buffer append if resolved buffer append else buffer append buffer append return buffer toString public abstract class Parameter implements Serializable static Map allParameters new HashMap private String name private Parameter protected Parameter String name this name name String key makeKey name if allParameters containsKey key throw new IllegalArgumentException key allParameters put key this private String makeKey String name return getClass name public String toString return name protected Object readResolve throws ObjectStreamException Object par allParameters get makeKey name if par null throw new StreamCorruptedException name return par class NearSpansUnordered implements PayloadSpans private SpanNearQuery query private class CellQueue extends PriorityQueue public CellQueue int size initialize size protected final boolean lessThan Object o1 Object o2 SpansCell spans1 SpansCell o1 SpansCell spans2 SpansCell o2 if spans1 doc spans2 doc return NearSpansOrdered docSpansOrdered spans1 spans2 else return spans1 doc spans2 doc private class SpansCell implements PayloadSpans private PayloadSpans spans private SpansCell next private int length private int index public SpansCell PayloadSpans spans int index this spans spans this index index public boolean next throws IOException return adjust spans next public boolean skipTo int target throws IOException return adjust spans skipTo target private boolean adjust boolean condition if length if condition length end start if max null doc max doc doc max doc end max end max this more condition return condition public int doc return spans doc public int start return spans start public int end return spans end return new ArrayList spans getPayload public boolean isPayloadAvailable return spans isPayloadAvailable public String toString return spans toString index public NearSpansUnordered SpanNearQuery query IndexReader reader throws IOException this query query this slop query getSlop SpanQuery clauses query getClauses queue new CellQueue clauses length for int clauses length SpansCell cell new SpansCell clauses getPayloadSpans reader ordered add cell public boolean next throws IOException if firstTime initList true firstTime false else if more else more false while more boolean queueStale false queueToList queueStale true while more first doc last doc queueStale true if more return false listToQueue queueStale false if atMatch return true more min next if more public boolean skipTo int target throws IOException initList false for SpansCell cell first more cell null cell cell next if more listToQueue firstTime false if min skipTo target queue adjustTop else more false return more atMatch next private SpansCell min return SpansCell queue top public int doc return min doc public int start return min start public int end return max end for SpansCell cell first cell null cell cell next if cell isPayloadAvailable matchPayload addAll cell getPayload return matchPayload public boolean isPayloadAvailable SpansCell pointer min while pointer null if pointer isPayloadAvailable return true pointer pointer next return false public String toString return getClass getName query toString firstTime more doc start end private void initList boolean next throws IOException for int more ordered size SpansCell cell SpansCell ordered get if next if more private void addToList SpansCell cell throws IOException last next cell else first cell last cell cell next null private void firstToLast last first first first next last next null private void queueToList throws IOException last first null while queue top null addToList SpansCell queue pop private void listToQueue for SpansCell cell first cell null cell cell next private boolean atMatch return min doc max doc max end min start totalLength slop public interface Fieldable extends Serializable void setBoost float boost float getBoost String name public String stringValue public Reader readerValue public byte binaryValue public TokenStream tokenStreamValue boolean isStored boolean isIndexed boolean isTokenized boolean isCompressed boolean isTermVectorStored boolean isStoreOffsetWithTermVector boolean isStorePositionWithTermVector boolean isBinary boolean getOmitNorms void setOmitNorms boolean omitNorms void setOmitTf boolean omitTf boolean getOmitTf boolean isLazy abstract int getBinaryOffset abstract int getBinaryLength abstract byte getBinaryValue abstract byte getBinaryValue byte result public final class Constants public static final String JAVA_VERSION System getProperty public static final boolean JAVA_1_1 JAVA_VERSION startsWith public static final boolean JAVA_1_2 JAVA_VERSION startsWith public static final boolean JAVA_1_3 JAVA_VERSION startsWith public static final String OS_NAME System getProperty public static final boolean LINUX OS_NAME startsWith public static final boolean WINDOWS OS_NAME startsWith public static final boolean SUN_OS OS_NAME startsWith public abstract class MultiTermQuery extends Query private Term term public MultiTermQuery Term term this term term public Term getTerm return term protected abstract FilteredTermEnum getEnum IndexReader reader throws IOException public Query rewrite IndexReader reader throws IOException FilteredTermEnum enumerator getEnum reader BooleanQuery query new BooleanQuery true try do Term enumerator term if null while enumerator next finally enumerator close return query public String toString String field StringBuffer buffer new StringBuffer if term field equals field buffer append term field buffer append buffer append term text buffer append ToStringUtils boost getBoost return buffer toString public boolean equals Object if this return true if instanceof MultiTermQuery return false final MultiTermQuery multiTermQuery MultiTermQuery if term equals multiTermQuery term return false return getBoost multiTermQuery getBoost public int hashCode return term hashCode Float floatToRawIntBits getBoost public class Token public int kind public int beginLine public int beginColumn public int endLine public int endColumn public String image public Token next public Token specialToken public Object getValue return null public Token public Token int kind this kind null public Token int kind String image this kind kind this image image public String toString return image public static Token newToken int ofKind String image switch ofKind default return new Token ofKind image public static Token newToken int ofKind return newToken ofKind null public class QueryFilter extends CachingWrapperFilter public QueryFilter Query query super new QueryWrapperFilter query public boolean equals Object return super equals QueryFilter public int hashCode return super hashCode public class FieldSortedTermVectorMapper extends TermVectorMapper private Map fieldToTerms new HashMap private SortedSet currentSet private String currentField private Comparator comparator public FieldSortedTermVectorMapper Comparator comparator this false false comparator public FieldSortedTermVectorMapper boolean ignoringPositions boolean ignoringOffsets Comparator comparator super ignoringPositions ignoringOffsets this comparator comparator public void map String term int frequency TermVectorOffsetInfo offsets int positions TermVectorEntry entry new TermVectorEntry currentField term frequency offsets positions currentSet add entry public void setExpectations String field int numTerms boolean storeOffsets boolean storePositions currentSet new TreeSet comparator currentField field fieldToTerms put field currentSet public Map getFieldToTerms return fieldToTerms public Comparator getComparator return comparator public class ParallelMultiSearcher extends MultiSearcher private Searchable searchables private int starts public ParallelMultiSearcher Searchable searchables throws IOException super searchables this searchables searchables this starts getStarts public int docFreq Term term throws IOException return super docFreq term public TopDocs search Weight weight Filter filter int nDocs throws IOException HitQueue hq new HitQueue nDocs int totalHits MultiSearcherThread msta new MultiSearcherThread searchables length msta new MultiSearcherThread searchables weight filter nDocs hq starts msta start for int searchables length try msta join catch InterruptedException ie IOException ioe msta getIOException if ioe null totalHits msta hits else throw ioe ScoreDoc scoreDocs new ScoreDoc hq size scoreDocs ScoreDoc hq pop float maxScore totalHits Float NEGATIVE_INFINITY scoreDocs score return new TopDocs totalHits scoreDocs maxScore public TopFieldDocs search Weight weight Filter filter int nDocs Sort sort throws IOException FieldDocSortedHitQueue hq new FieldDocSortedHitQueue null nDocs int totalHits MultiSearcherThread msta new MultiSearcherThread searchables length msta new MultiSearcherThread searchables weight filter nDocs hq sort starts msta start float maxScore Float NEGATIVE_INFINITY for int searchables length try msta join catch InterruptedException ie IOException ioe msta getIOException if ioe null totalHits msta hits maxScore Math max maxScore msta getMaxScore else throw ioe ScoreDoc scoreDocs new ScoreDoc hq size scoreDocs ScoreDoc hq pop return new TopFieldDocs totalHits scoreDocs hq getFields maxScore public void search Weight weight Filter filter final HitCollector results throws IOException for int searchables length final int start starts searchables search weight filter new HitCollector public void collect int doc float score results collect doc start score public Query rewrite Query original throws IOException return super rewrite original class MultiSearcherThread extends Thread private Searchable searchable private Weight weight private Filter filter private int nDocs private TopDocs docs private int private PriorityQueue hq private int starts private IOException ioe private Sort sort public MultiSearcherThread Searchable searchable Weight weight Filter filter int nDocs HitQueue hq int int starts String name super name this searchable searchable this weight weight this filter filter this nDocs nDocs this hq hq this this starts starts public MultiSearcherThread Searchable searchable Weight weight Filter filter int nDocs FieldDocSortedHitQueue hq Sort sort int int starts String name super name this searchable searchable this weight weight this filter filter this nDocs nDocs this hq hq this this starts starts this sort sort public void run try docs sort null searchable search weight filter nDocs searchable search weight filter nDocs sort catch IOException ioe this ioe ioe if ioe null if sort null FieldDocSortedHitQueue hq setFields TopFieldDocs docs fields ScoreDoc scoreDocs docs scoreDocs for int scoreDocs length ScoreDoc scoreDoc scoreDocs synchronized hq if hq insert scoreDoc break public int hits return docs totalHits public float getMaxScore return docs getMaxScore public IOException getIOException return ioe class ConjunctionScorer extends Scorer private final Scorer scorers private boolean firstTime true private boolean more private final float coord private int lastDoc public ConjunctionScorer Similarity similarity Collection scorers throws IOException this similarity Scorer scorers toArray new Scorer scorers size public ConjunctionScorer Similarity similarity Scorer scorers throws IOException super similarity this scorers scorers coord getSimilarity coord this scorers length this scorers length public int doc return lastDoc public boolean next throws IOException if firstTime return init else if more more scorers scorers length next return doNext private boolean doNext throws IOException int first Scorer lastScorer scorers scorers length Scorer firstScorer while more firstScorer scorers first doc lastDoc lastScorer doc more firstScorer skipTo lastDoc lastScorer firstScorer first first scorers length first return more public boolean skipTo int target throws IOException if firstTime return init target else if more more scorers scorers length skipTo target return doNext private boolean init int target throws IOException firstTime false more scorers length for int scorers length more target scorers next scorers skipTo target if more return false public int compare Object o1 Object o2 return Scorer o1 doc Scorer o2 doc doNext int end scorers length for int end Scorer tmp scorers scorers scorers end scorers end tmp return more public float score throws IOException float sum for int scorers length sum scorers score return sum coord public Explanation explain int doc throw new UnsupportedOperationException public class SmallFloat public static byte floatToByte float int numMantissaBits int zeroExp int fzero zeroExp numMantissaBits int bits Float floatToRawIntBits int smallfloat bits numMantissaBits if smallfloat fzero return bits else if smallfloat fzero else return byte smallfloat fzero public static float byteToFloat byte int numMantissaBits int zeroExp if return int bits numMantissaBits bits zeroExp return Float intBitsToFloat bits public static byte floatToByte315 float int bits Float floatToRawIntBits int smallfloat bits if smallfloat return bits byte byte if smallfloat return return byte smallfloat public static float byte315ToFloat byte if return int bits bits return Float intBitsToFloat bits public static byte floatToByte52 float int bits Float floatToRawIntBits int smallfloat bits if smallfloat return bits byte byte if smallfloat return return byte smallfloat public static float byte52ToFloat byte if return int bits bits return Float intBitsToFloat bits final class IndexFileDeleter private List deletable private Map refCounts new HashMap private List commits new ArrayList private List lastFiles new ArrayList private List commitsToDelete new ArrayList private PrintStream infoStream private Directory directory private IndexDeletionPolicy policy private DocumentsWriter docWriter public static boolean VERBOSE_REF_COUNTS false void setInfoStream PrintStream infoStream this infoStream infoStream if infoStream null message policy private void message String message infoStream println Thread currentThread getName message public IndexFileDeleter Directory directory IndexDeletionPolicy policy SegmentInfos segmentInfos PrintStream infoStream DocumentsWriter docWriter throws CorruptIndexException IOException this docWriter docWriter this infoStream infoStream if infoStream null message segmentInfos getCurrentSegmentFileName policy this policy policy this directory directory long currentGen segmentInfos getGeneration IndexFileNameFilter filter IndexFileNameFilter getFilter String files directory list if files null throw new IOException directory CommitPoint currentCommitPoint null for int files length String fileName files if filter accept null fileName fileName equals IndexFileNames SEGMENTS_GEN getRefCount fileName if fileName startsWith IndexFileNames SEGMENTS if SegmentInfos generationFromSegmentsFileName fileName currentGen if infoStream null message fileName SegmentInfos sis new SegmentInfos try sis read directory fileName catch FileNotFoundException if infoStream null message fileName sis null if sis null CommitPoint commitPoint new CommitPoint commitsToDelete directory sis if sis getGeneration segmentInfos getGeneration currentCommitPoint commitPoint commits add commitPoint incRef sis true if currentCommitPoint null SegmentInfos sis new SegmentInfos try sis read directory segmentInfos getCurrentSegmentFileName catch IOException throw new CorruptIndexException if infoStream null message segmentInfos getCurrentSegmentFileName currentCommitPoint new CommitPoint commitsToDelete directory sis commits add currentCommitPoint incRef sis true Collections sort commits Iterator it refCounts keySet iterator while it hasNext String fileName String it next RefCount rc RefCount refCounts get fileName if rc count if infoStream null message fileName deleteFile fileName policy onInit commits if currentCommitPoint deleted checkpoint segmentInfos false deleteCommits private void deleteCommits throws IOException int size commitsToDelete size if size for int size CommitPoint commit CommitPoint commitsToDelete get if infoStream null message commit getSegmentsFileName int size2 commit files size for int size2 decRef String commit files get commitsToDelete clear size commits size int readFrom int writeTo while readFrom size CommitPoint commit CommitPoint commits get readFrom if commit deleted if writeTo readFrom commits set writeTo commits get readFrom writeTo readFrom while size writeTo commits remove size size public void refresh String segmentName throws IOException String files directory list if files null throw new IOException directory IndexFileNameFilter filter IndexFileNameFilter getFilter String segmentPrefix1 String segmentPrefix2 if segmentName null segmentPrefix1 segmentName segmentPrefix2 segmentName else segmentPrefix1 null segmentPrefix2 null for int files length String fileName files if filter accept null fileName segmentName null fileName startsWith segmentPrefix1 fileName startsWith segmentPrefix2 refCounts containsKey fileName fileName equals IndexFileNames SEGMENTS_GEN if infoStream null message segmentName fileName deleteFile fileName public void refresh throws IOException refresh null public void close throws IOException deletePendingFiles private void deletePendingFiles throws IOException if deletable null List oldDeletable deletable deletable null int size oldDeletable size for int size if infoStream null message oldDeletable get deleteFile String oldDeletable get public void checkpoint SegmentInfos segmentInfos boolean isCommit throws IOException if infoStream null message segmentInfos getCurrentSegmentFileName segmentInfos size isCommit deletePendingFiles incRef segmentInfos isCommit if isCommit commits add new CommitPoint commitsToDelete directory segmentInfos policy onCommit commits deleteCommits else final List docWriterFiles if docWriter null docWriterFiles docWriter openFiles if docWriterFiles null incRef docWriterFiles else docWriterFiles null int size lastFiles size if size for int size decRef List lastFiles get lastFiles clear size segmentInfos size for int size SegmentInfo segmentInfo segmentInfos info if segmentInfo dir directory lastFiles add segmentInfo files if docWriterFiles null lastFiles add docWriterFiles void incRef SegmentInfos segmentInfos boolean isCommit throws IOException int size segmentInfos size for int size SegmentInfo segmentInfo segmentInfos info if segmentInfo dir directory incRef segmentInfo files if isCommit getRefCount segmentInfos getCurrentSegmentFileName IncRef void incRef List files throws IOException int size files size for int size String fileName String files get RefCount rc getRefCount fileName if infoStream null VERBOSE_REF_COUNTS message fileName rc count rc IncRef void decRef List files throws IOException int size files size for int size decRef String files get void decRef String fileName throws IOException RefCount rc getRefCount fileName if infoStream null VERBOSE_REF_COUNTS message fileName rc count if rc DecRef deleteFile fileName refCounts remove fileName void decRef SegmentInfos segmentInfos throws IOException final int size segmentInfos size for int size SegmentInfo segmentInfo segmentInfos info if segmentInfo dir directory decRef segmentInfo files private RefCount getRefCount String fileName RefCount rc if refCounts containsKey fileName rc new RefCount refCounts put fileName rc else rc RefCount refCounts get fileName return rc void deleteFiles List files throws IOException final int size files size for int size deleteFile String files get void deleteNewFiles Collection files throws IOException final Iterator it files iterator while it hasNext final String fileName String it next if refCounts containsKey fileName deleteFile fileName void deleteFile String fileName throws IOException try if infoStream null message fileName directory deleteFile fileName if directory fileExists fileName if infoStream null message fileName toString if deletable null deletable new ArrayList final private static class RefCount int count public int IncRef return count public int DecRef assert count return count final private static class CommitPoint extends IndexCommit implements Comparable long gen List files String segmentsFileName boolean deleted Directory directory Collection commitsToDelete long version long generation final boolean isOptimized public CommitPoint Collection commitsToDelete Directory directory SegmentInfos segmentInfos throws IOException this directory directory this commitsToDelete commitsToDelete segmentsFileName segmentInfos getCurrentSegmentFileName version segmentInfos getVersion generation segmentInfos getGeneration int size segmentInfos size files new ArrayList size files add segmentsFileName gen segmentInfos getGeneration for int size SegmentInfo segmentInfo segmentInfos info if segmentInfo dir directory files addAll segmentInfo files isOptimized segmentInfos size segmentInfos info hasDeletions public boolean isOptimized return isOptimized public String getSegmentsFileName return segmentsFileName public Collection getFileNames throws IOException return Collections unmodifiableCollection files public Directory getDirectory return directory public long getVersion return version public long getGeneration return generation public void delete if deleted deleted true commitsToDelete add this public boolean isDeleted return deleted public int compareTo Object obj CommitPoint commit CommitPoint obj if gen commit gen return else if gen commit gen return else return final class TermVectorsTermsWriter extends TermsHashConsumer final DocumentsWriter docWriter TermVectorsWriter termVectorsWriter PerDoc docFreeList new PerDoc int freeCount IndexOutput tvx IndexOutput tvd IndexOutput tvf int lastDocID public TermVectorsTermsWriter DocumentsWriter docWriter this docWriter docWriter public TermsHashConsumerPerThread addThread TermsHashPerThread termsHashPerThread return new TermVectorsTermsWriterPerThread termsHashPerThread this void createPostings RawPostingList postings int start int count final int end start count for int start end postings new PostingList synchronized void flush Map threadsAndFields final DocumentsWriter FlushState state throws IOException if tvx null if state numDocsInStore fill state numDocsInStore docWriter getDocStoreOffset tvx flush tvd flush tvf flush Iterator it threadsAndFields entrySet iterator while it hasNext Map Entry entry Map Entry it next Iterator it2 Collection entry getValue iterator while it2 hasNext TermVectorsTermsWriterPerField perField TermVectorsTermsWriterPerField it2 next perField termsHashPerField reset perField shrinkHash TermVectorsTermsWriterPerThread perThread TermVectorsTermsWriterPerThread entry getKey perThread termsHashPerThread reset true synchronized void closeDocStore final DocumentsWriter FlushState state throws IOException if tvx null fill state numDocsInStore docWriter getDocStoreOffset tvx close tvf close tvd close tvx null assert state docStoreSegmentName null if state numDocsInStore state directory fileLength state docStoreSegmentName IndexFileNames VECTORS_INDEX_EXTENSION throw new RuntimeException state numDocsInStore state directory fileLength state docStoreSegmentName IndexFileNames VECTORS_INDEX_EXTENSION state docStoreSegmentName IndexFileNames VECTORS_INDEX_EXTENSION state flushedFiles add state docStoreSegmentName IndexFileNames VECTORS_INDEX_EXTENSION state flushedFiles add state docStoreSegmentName IndexFileNames VECTORS_FIELDS_EXTENSION state flushedFiles add state docStoreSegmentName IndexFileNames VECTORS_DOCUMENTS_EXTENSION docWriter removeOpenFile state docStoreSegmentName IndexFileNames VECTORS_INDEX_EXTENSION docWriter removeOpenFile state docStoreSegmentName IndexFileNames VECTORS_FIELDS_EXTENSION docWriter removeOpenFile state docStoreSegmentName IndexFileNames VECTORS_DOCUMENTS_EXTENSION lastDocID int allocCount synchronized PerDoc getPerDoc if freeCount allocCount if allocCount docFreeList length assert allocCount docFreeList length docFreeList new PerDoc ArrayUtil getNextSize allocCount return new PerDoc else return docFreeList freeCount void fill int docID throws IOException final int docStoreOffset docWriter getDocStoreOffset final int end docID docStoreOffset if lastDocID end final long tvfPosition tvf getFilePointer while lastDocID end tvx writeLong tvd getFilePointer tvd writeVInt tvx writeLong tvfPosition lastDocID synchronized void initTermVectorsWriter throws IOException if tvx null final String docStoreSegment docWriter getDocStoreSegment if docStoreSegment null return assert docStoreSegment null tvx docWriter directory createOutput docStoreSegment IndexFileNames VECTORS_INDEX_EXTENSION tvd docWriter directory createOutput docStoreSegment IndexFileNames VECTORS_DOCUMENTS_EXTENSION tvf docWriter directory createOutput docStoreSegment IndexFileNames VECTORS_FIELDS_EXTENSION tvx writeInt TermVectorsReader FORMAT_CURRENT tvd writeInt TermVectorsReader FORMAT_CURRENT tvf writeInt TermVectorsReader FORMAT_CURRENT docWriter addOpenFile docStoreSegment IndexFileNames VECTORS_INDEX_EXTENSION docWriter addOpenFile docStoreSegment IndexFileNames VECTORS_FIELDS_EXTENSION docWriter addOpenFile docStoreSegment IndexFileNames VECTORS_DOCUMENTS_EXTENSION lastDocID synchronized void finishDocument PerDoc perDoc throws IOException assert docWriter writer testPoint initTermVectorsWriter fill perDoc docID tvx writeLong tvd getFilePointer tvx writeLong tvf getFilePointer tvd writeVInt perDoc numVectorFields if perDoc numVectorFields for int perDoc numVectorFields tvd writeVInt perDoc fieldNumbers assert perDoc fieldPointers long lastPos perDoc fieldPointers for int perDoc numVectorFields long pos perDoc fieldPointers tvd writeVLong pos lastPos lastPos pos perDoc tvf writeTo tvf perDoc tvf reset perDoc numVectorFields assert lastDocID perDoc docID docWriter getDocStoreOffset lastDocID free perDoc assert docWriter writer testPoint public boolean freeRAM return false public void abort if tvx null try tvx close catch Throwable tvx null if tvd null try tvd close catch Throwable tvd null if tvf null try tvf close catch Throwable tvf null lastDocID synchronized void free PerDoc doc assert freeCount docFreeList length docFreeList freeCount doc class PerDoc extends DocumentsWriter DocWriter RAMOutputStream tvf new RAMOutputStream int numVectorFields int fieldNumbers new int long fieldPointers new long void reset tvf reset numVectorFields void abort reset free this void addField final int fieldNumber if numVectorFields fieldNumbers length fieldNumbers ArrayUtil grow fieldNumbers fieldPointers ArrayUtil grow fieldPointers fieldNumbers numVectorFields fieldNumber fieldPointers numVectorFields tvf getFilePointer numVectorFields public long sizeInBytes return tvf sizeInBytes public void finish throws IOException finishDocument this static final class PostingList extends RawPostingList int bytesPerPosting return RawPostingList BYTES_SIZE DocumentsWriter INT_NUM_BYTE final class TermInfosReader private Directory directory private String segment private FieldInfos fieldInfos private CloseableThreadLocal threadResources new CloseableThreadLocal private SegmentTermEnum origEnum private long size private Term indexTerms null private TermInfo indexInfos private long indexPointers private SegmentTermEnum indexEnum private int indexDivisor private int totalIndexInterval private final static int DEFAULT_CACHE_SIZE private static final class ThreadResources SegmentTermEnum termEnum Cache termInfoCache TermInfosReader Directory dir String seg FieldInfos fis throws CorruptIndexException IOException this dir seg fis BufferedIndexInput BUFFER_SIZE TermInfosReader Directory dir String seg FieldInfos fis int readBufferSize throws CorruptIndexException IOException boolean success false try directory dir segment seg fieldInfos fis origEnum new SegmentTermEnum directory openInput segment IndexFileNames TERMS_EXTENSION readBufferSize fieldInfos false size origEnum size totalIndexInterval origEnum indexInterval indexEnum new SegmentTermEnum directory openInput segment IndexFileNames TERMS_INDEX_EXTENSION readBufferSize fieldInfos true success true finally if success close public int getSkipInterval return origEnum skipInterval public int getMaxSkipLevels return origEnum maxSkipLevels public void setIndexDivisor int indexDivisor throws IllegalStateException if indexDivisor throw new IllegalArgumentException indexDivisor if indexTerms null throw new IllegalStateException this indexDivisor indexDivisor totalIndexInterval origEnum indexInterval indexDivisor public int getIndexDivisor return indexDivisor final void close throws IOException if origEnum null origEnum close if indexEnum null indexEnum close threadResources close final long size return size private ThreadResources getThreadResources ThreadResources resources ThreadResources threadResources get if resources null resources new ThreadResources resources termEnum terms resources termInfoCache new SimpleLRUCache DEFAULT_CACHE_SIZE threadResources set resources return resources private synchronized void ensureIndexIsRead throws IOException try indexTerms new Term indexSize indexInfos new TermInfo indexSize indexPointers new long indexSize for int indexEnum next indexTerms indexEnum term indexInfos indexEnum termInfo indexPointers indexEnum indexPointer for int indexDivisor if indexEnum next break finally indexEnum close indexEnum null private final int getIndexOffset Term term int hi indexTerms length while hi lo int mid lo hi int delta term compareTo indexTerms mid if delta hi mid else if delta lo mid else return mid return hi private final void seekEnum SegmentTermEnum enumerator int indexOffset throws IOException enumerator seek indexPointers indexOffset indexOffset totalIndexInterval indexTerms indexOffset indexInfos indexOffset TermInfo get Term term throws IOException return get term true private TermInfo get Term term boolean useCache throws IOException if size return null ensureIndexIsRead TermInfo ti ThreadResources resources getThreadResources Cache cache null if useCache cache resources termInfoCache ti TermInfo cache get term if ti null return ti SegmentTermEnum enumerator resources termEnum enumerator prev null term compareTo enumerator prev term compareTo enumerator term int enumOffset int enumerator position totalIndexInterval term compareTo indexTerms enumOffset int numScans enumerator scanTo term if enumerator term null term compareTo enumerator term ti enumerator termInfo if cache null numScans cache put term ti else ti null return ti seekEnum enumerator getIndexOffset term enumerator scanTo term if enumerator term null term compareTo enumerator term ti enumerator termInfo if cache null cache put term ti else ti null return ti final Term get int position throws IOException if size return null SegmentTermEnum enumerator getThreadResources termEnum if enumerator null enumerator term null position enumerator position position enumerator position totalIndexInterval return scanEnum enumerator position private final Term scanEnum SegmentTermEnum enumerator int position throws IOException while enumerator position position if enumerator next return null return enumerator term final long getPosition Term term throws IOException if size return ensureIndexIsRead int indexOffset getIndexOffset term SegmentTermEnum enumerator getThreadResources termEnum seekEnum enumerator indexOffset while term compareTo enumerator term enumerator next if term compareTo enumerator term return enumerator position else return public SegmentTermEnum terms return SegmentTermEnum origEnum clone public SegmentTermEnum terms Term term throws IOException get term false return SegmentTermEnum getThreadResources termEnum clone public class LockStressTest public static void main String args throws Exception if args length System out println System exit final int myID Integer parseInt args if myID myID System out println System exit final String verifierHost args final int verifierPort Integer parseInt args final String lockFactoryClassName args final String lockDirName args final int sleepTimeMS Integer parseInt args Class try Class forName lockFactoryClassName catch ClassNotFoundException throw new IOException lockFactoryClassName LockFactory lockFactory try lockFactory LockFactory newInstance catch IllegalAccessException throw new IOException lockFactoryClassName catch InstantiationException throw new IOException lockFactoryClassName catch ClassCastException throw new IOException lockFactoryClassName File lockDir new File lockDirName if lockFactory instanceof NativeFSLockFactory NativeFSLockFactory lockFactory setLockDir lockDir else if lockFactory instanceof SimpleFSLockFactory SimpleFSLockFactory lockFactory setLockDir lockDir lockFactory setLockPrefix LockFactory verifyLF new VerifyingLockFactory byte myID lockFactory verifierHost verifierPort Lock verifyLF makeLock while true boolean obtained false try obtained obtain catch LockObtainFailedException System out print if obtained System out print release Thread sleep sleepTimeMS public abstract class MergePolicy public static class OneMerge final SegmentInfos segments final boolean useCompoundFile boolean aborted Throwable error public OneMerge SegmentInfos segments boolean useCompoundFile if segments size throw new RuntimeException this segments segments this useCompoundFile useCompoundFile synchronized void setException Throwable error this error error synchronized Throwable getException return error synchronized void abort aborted true synchronized boolean isAborted return aborted synchronized void checkAborted Directory dir throws MergeAbortedException if aborted throw new MergeAbortedException segString dir String segString Directory dir StringBuffer new StringBuffer final int numSegments segments size for int numSegments if append append segments info segString dir if info null append append info name if optimize append return toString public static class MergeSpecification public List merges new ArrayList public void add OneMerge merge merges add merge public String segString Directory dir StringBuffer new StringBuffer append final int count merges size for int count append append append append OneMerge merges get segString dir return toString public static class MergeException extends RuntimeException private Directory dir public MergeException String message super message public MergeException String message Directory dir super message this dir dir public MergeException Throwable exc super exc public MergeException Throwable exc Directory dir super exc this dir dir public Directory getDirectory return dir public static class MergeAbortedException extends IOException public MergeAbortedException super public MergeAbortedException String message super message abstract MergeSpecification findMerges SegmentInfos segmentInfos IndexWriter writer throws CorruptIndexException IOException abstract MergeSpecification findMergesForOptimize SegmentInfos segmentInfos IndexWriter writer int maxSegmentCount Set segmentsToOptimize throws CorruptIndexException IOException MergeSpecification findMergesToExpungeDeletes SegmentInfos segmentInfos IndexWriter writer throws CorruptIndexException IOException throw new RuntimeException abstract void close abstract boolean useCompoundFile SegmentInfos segments SegmentInfo newSegment abstract boolean useCompoundDocStore SegmentInfos segments final class NormsWriterPerThread extends InvertedDocEndConsumerPerThread final NormsWriter normsWriter final DocumentsWriter DocState docState public NormsWriterPerThread DocInverterPerThread docInverterPerThread NormsWriter normsWriter this normsWriter normsWriter docState docInverterPerThread docState InvertedDocEndConsumerPerField addField DocInverterPerField docInverterPerField final FieldInfo fieldInfo return new NormsWriterPerField docInverterPerField this fieldInfo void abort void startDocument void finishDocument boolean freeRAM return false public final class KeepOnlyLastCommitDeletionPolicy implements IndexDeletionPolicy public void onInit List commits onCommit commits public void onCommit List commits int size commits size for int size IndexCommit commits get delete public abstract class DocIdSet public abstract DocIdSetIterator iterator public class SetBasedFieldSelector implements FieldSelector private Set fieldsToLoad private Set lazyFieldsToLoad public SetBasedFieldSelector Set fieldsToLoad Set lazyFieldsToLoad this fieldsToLoad fieldsToLoad this lazyFieldsToLoad lazyFieldsToLoad public FieldSelectorResult accept String fieldName FieldSelectorResult result FieldSelectorResult NO_LOAD if fieldsToLoad contains fieldName true result FieldSelectorResult LOAD if lazyFieldsToLoad contains fieldName true result FieldSelectorResult LAZY_LOAD return result public class Explanation implements java io Serializable public Explanation public Explanation float value String description this value value this description description public boolean isMatch return getValue public float getValue return value public void setValue float value this value value public String getDescription return description public void setDescription String description this description description protected String getSummary return getValue getDescription public Explanation getDetails if details null return null return Explanation details toArray new Explanation public void addDetail Explanation detail if details null details new ArrayList details add detail public String toString return toString protected String toString int depth StringBuffer buffer new StringBuffer for int depth buffer append buffer append getSummary buffer append Explanation details getDetails if details null for int details length buffer append details toString depth return buffer toString public String toHtml StringBuffer buffer new StringBuffer buffer append buffer append buffer append getSummary buffer append Explanation details getDetails if details null for int details length buffer append details toHtml buffer append buffer append return buffer toString public interface Spans boolean next throws IOException boolean skipTo int target throws IOException int doc int start int end final class SegmentMergeInfo Term term int base TermEnum termEnum IndexReader reader SegmentMergeInfo int TermEnum te IndexReader throws IOException base reader termEnum te term te term int getDocMap if docMap null if reader hasDeletions int maxDoc reader maxDoc docMap new int maxDoc int for int maxDoc if reader isDeleted docMap else docMap return docMap TermPositions getPositions throws IOException if postings null postings reader termPositions return postings final boolean next throws IOException if termEnum next term termEnum term return true else term null return false final void close throws IOException termEnum close if postings null postings close public class OpenBitSetIterator extends DocIdSetIterator protected final static int bitlist private final long arr private final int words private int private long word private int wordShift private int indexArray private int curDocId public OpenBitSetIterator OpenBitSet obs this obs getBits obs getNumWords public OpenBitSetIterator long bits int numWords arr bits words numWords private void shift if int word wordShift word word if word wordShift word if word wordShift word indexArray bitlist int word public boolean next if indexArray if word word wordShift while word if words curDocId return false word arr shift int bitIndex indexArray wordShift indexArray curDocId bitIndex return true public boolean skipTo int target indexArray target if words curDocId return false wordShift target word arr wordShift if word else while word if words curDocId return false word arr wordShift shift int bitIndex indexArray wordShift indexArray curDocId bitIndex return true public int doc return this curDocId final class ByteBlockPool abstract static class Allocator abstract void recycleByteBlocks byte blocks int start int end abstract byte getByteBlock boolean trackAllocations public byte buffers new byte private final boolean trackAllocations private final Allocator allocator public ByteBlockPool Allocator allocator boolean trackAllocations this allocator allocator this trackAllocations trackAllocations public void reset if bufferUpto for int bufferUpto Arrays fill buffers byte Arrays fill buffers bufferUpto byteUpto byte if bufferUpto allocator recycleByteBlocks buffers bufferUpto bufferUpto byteUpto byteOffset buffer buffers public void nextBuffer if bufferUpto buffers length byte newBuffers new byte int buffers length System arraycopy buffers newBuffers buffers length buffers newBuffers buffer buffers bufferUpto allocator getByteBlock trackAllocations bufferUpto byteUpto byteOffset DocumentsWriter BYTE_BLOCK_SIZE public int newSlice final int size if byteUpto DocumentsWriter BYTE_BLOCK_SIZE size nextBuffer final int upto byteUpto byteUpto size buffer byteUpto return upto final static int nextLevelArray final static int levelSizeArray final static int FIRST_LEVEL_SIZE levelSizeArray public int allocSlice final byte slice final int upto final int level slice upto final int newLevel nextLevelArray level final int newSize levelSizeArray newLevel if byteUpto DocumentsWriter BYTE_BLOCK_SIZE newSize nextBuffer final int newUpto byteUpto final int offset newUpto byteOffset byteUpto newSize buffer newUpto slice upto buffer newUpto slice upto buffer newUpto slice upto slice upto byte offset slice upto byte offset slice upto byte offset slice upto byte offset buffer byteUpto byte newLevel return newUpto public class LockVerifyServer private static String getTime long startTime return System currentTimeMillis startTime public static void main String args throws IOException if args length System out println System exit final int port Integer parseInt args ServerSocket new ServerSocket port setReuseAddress true System out println port int lockedID long startTime System currentTimeMillis while true Socket cs accept OutputStream out cs getOutputStream InputStream in cs getInputStream int id in read int command in read boolean err false if command if lockedID err true System out println getTime startTime id lockedID lockedID id else if command if lockedID id err true System out println getTime startTime id lockedID lockedID else throw new RuntimeException command System out print if err out write else out write out close in close cs close final class ByteSliceWriter private byte slice private int upto private final ByteBlockPool pool int offset0 public ByteSliceWriter ByteBlockPool pool this pool pool public void init int address slice pool buffers address DocumentsWriter BYTE_BLOCK_SHIFT assert slice null upto address DocumentsWriter BYTE_BLOCK_MASK offset0 address assert upto slice length public void writeByte byte assert slice null if slice upto upto pool allocSlice slice upto slice pool buffer offset0 pool byteOffset assert slice null slice upto assert upto slice length public void writeBytes final byte int offset final int len final int offsetEnd offset len while offset offsetEnd if slice upto upto pool allocSlice slice upto slice pool buffer offset0 pool byteOffset slice upto offset assert upto slice length public int getAddress return upto offset0 DocumentsWriter BYTE_BLOCK_NOT_MASK public void writeVInt int while writeByte byte writeByte byte class CompoundFileReader extends Directory private int readBufferSize private static final class FileEntry long offset long length private Directory directory private String fileName private IndexInput stream private HashMap entries new HashMap public CompoundFileReader Directory dir String name throws IOException this dir name BufferedIndexInput BUFFER_SIZE public CompoundFileReader Directory dir String name int readBufferSize throws IOException directory dir fileName name this readBufferSize readBufferSize boolean success false try stream dir openInput name readBufferSize int count stream readVInt FileEntry entry null for int count long offset stream readLong String id stream readString if entry null entry length offset entry offset entry new FileEntry entry offset offset entries put id entry if entry null entry length stream length entry offset success true finally if success stream null try stream close catch IOException public Directory getDirectory return directory public String getName return fileName public synchronized void close throws IOException if stream null throw new IOException entries clear stream close stream null public synchronized IndexInput openInput String id throws IOException return openInput id readBufferSize public synchronized IndexInput openInput String id int readBufferSize throws IOException if stream null throw new IOException FileEntry entry FileEntry entries get id if entry null throw new IOException id return new CSIndexInput stream entry offset entry length readBufferSize public String list String res new String entries size return String entries keySet toArray res public boolean fileExists String name return entries containsKey name public long fileModified String name throws IOException return directory fileModified fileName public void touchFile String name throws IOException directory touchFile fileName public void deleteFile String name throw new UnsupportedOperationException public void renameFile String from String to throw new UnsupportedOperationException public long fileLength String name throws IOException FileEntry FileEntry entries get name if null throw new IOException name return length public IndexOutput createOutput String name throw new UnsupportedOperationException public Lock makeLock String name throw new UnsupportedOperationException static final class CSIndexInput extends BufferedIndexInput IndexInput base long fileOffset long length CSIndexInput final IndexInput base final long fileOffset final long length this base fileOffset length BufferedIndexInput BUFFER_SIZE CSIndexInput final IndexInput base final long fileOffset final long length int readBufferSize super readBufferSize this base IndexInput base clone this fileOffset fileOffset this length length public Object clone CSIndexInput clone CSIndexInput super clone clone base IndexInput base clone clone fileOffset fileOffset clone length length return clone protected void readInternal byte int offset int len throws IOException long start getFilePointer if start len length throw new IOException base seek fileOffset start base readBytes offset len false protected void seekInternal long pos public void close throws IOException base close public long length return length final class TermsHash extends InvertedDocConsumer final TermsHashConsumer consumer final TermsHash nextTermsHash final int bytesPerPosting final int postingsFreeChunk final DocumentsWriter docWriter private TermsHash primaryTermsHash private RawPostingList postingsFreeList new RawPostingList private int postingsFreeCount private int postingsAllocCount boolean trackAllocations public TermsHash final DocumentsWriter docWriter boolean trackAllocations final TermsHashConsumer consumer final TermsHash nextTermsHash this docWriter docWriter this consumer consumer this nextTermsHash nextTermsHash this trackAllocations trackAllocations bytesPerPosting consumer bytesPerPosting DocumentsWriter POINTER_NUM_BYTE postingsFreeChunk int DocumentsWriter BYTE_BLOCK_SIZE bytesPerPosting InvertedDocConsumerPerThread addThread DocInverterPerThread docInverterPerThread return new TermsHashPerThread docInverterPerThread this nextTermsHash null TermsHashPerThread addThread DocInverterPerThread docInverterPerThread TermsHashPerThread primaryPerThread return new TermsHashPerThread docInverterPerThread this nextTermsHash primaryPerThread void setFieldInfos FieldInfos fieldInfos this fieldInfos fieldInfos consumer setFieldInfos fieldInfos synchronized public void abort consumer abort if nextTermsHash null nextTermsHash abort void shrinkFreePostings Map threadsAndFields DocumentsWriter FlushState state assert postingsFreeCount postingsAllocCount Thread currentThread getName postingsFreeCount postingsAllocCount consumer final int newSize ArrayUtil getShrinkSize postingsFreeList length postingsAllocCount if newSize postingsFreeList length RawPostingList newArray new RawPostingList newSize System arraycopy postingsFreeList newArray postingsFreeCount postingsFreeList newArray synchronized void closeDocStore DocumentsWriter FlushState state throws IOException consumer closeDocStore state if nextTermsHash null nextTermsHash closeDocStore state synchronized void flush Map threadsAndFields final DocumentsWriter FlushState state throws IOException Map childThreadsAndFields new HashMap Map nextThreadsAndFields if nextTermsHash null nextThreadsAndFields new HashMap else nextThreadsAndFields null Iterator it threadsAndFields entrySet iterator while it hasNext Map Entry entry Map Entry it next TermsHashPerThread perThread TermsHashPerThread entry getKey Collection fields Collection entry getValue Iterator fieldsIt fields iterator Collection childFields new HashSet Collection nextChildFields if nextTermsHash null nextChildFields new HashSet else nextChildFields null while fieldsIt hasNext TermsHashPerField perField TermsHashPerField fieldsIt next childFields add perField consumer if nextTermsHash null nextChildFields add perField nextPerField childThreadsAndFields put perThread consumer childFields if nextTermsHash null nextThreadsAndFields put perThread nextPerThread nextChildFields consumer flush childThreadsAndFields state shrinkFreePostings threadsAndFields state if nextTermsHash null nextTermsHash flush nextThreadsAndFields state synchronized public boolean freeRAM if trackAllocations return false boolean any final int numToFree if postingsFreeCount postingsFreeChunk numToFree postingsFreeChunk else numToFree postingsFreeCount any numToFree if any Arrays fill postingsFreeList postingsFreeCount numToFree postingsFreeCount null postingsFreeCount numToFree postingsAllocCount numToFree docWriter bytesAllocated numToFree bytesPerPosting any true if nextTermsHash null any nextTermsHash freeRAM return any synchronized public void recyclePostings final RawPostingList postings final int numPostings assert postings length numPostings assert postingsFreeCount numPostings postingsFreeList length System arraycopy postings postingsFreeList postingsFreeCount numPostings postingsFreeCount numPostings synchronized public void getPostings final RawPostingList postings assert docWriter writer testPoint assert postingsFreeCount postingsFreeList length assert postingsFreeCount postingsAllocCount postingsFreeCount postingsAllocCount final int numToCopy if postingsFreeCount postings length numToCopy postingsFreeCount else numToCopy postings length final int start postingsFreeCount numToCopy assert start assert start numToCopy postingsFreeList length assert numToCopy postings length System arraycopy postingsFreeList start postings numToCopy if numToCopy postings length final int extra postings length numToCopy final int newPostingsAllocCount postingsAllocCount extra consumer createPostings postings numToCopy extra assert docWriter writer testPoint postingsAllocCount extra if trackAllocations docWriter bytesAllocated extra bytesPerPosting if newPostingsAllocCount postingsFreeList length postingsFreeList new RawPostingList ArrayUtil getNextSize newPostingsAllocCount postingsFreeCount numToCopy if trackAllocations docWriter bytesUsed postings length bytesPerPosting public final class FieldSelectorResult implements Serializable public transient static final FieldSelectorResult LOAD new FieldSelectorResult public transient static final FieldSelectorResult LAZY_LOAD new FieldSelectorResult public transient static final FieldSelectorResult NO_LOAD new FieldSelectorResult public transient static final FieldSelectorResult LOAD_AND_BREAK new FieldSelectorResult public transient static final FieldSelectorResult LOAD_FOR_MERGE new FieldSelectorResult public transient static final FieldSelectorResult SIZE new FieldSelectorResult public transient static final FieldSelectorResult SIZE_AND_BREAK new FieldSelectorResult private int id private FieldSelectorResult int id this id id public boolean equals Object if this return true if null getClass getClass return false final FieldSelectorResult that FieldSelectorResult if id that id return false return true public int hashCode return id public class QueryWrapperFilter extends Filter private Query query public QueryWrapperFilter Query query this query query public BitSet bits IndexReader reader throws IOException final BitSet bits new BitSet reader maxDoc new IndexSearcher reader search query new HitCollector public final void collect int doc float score return bits public DocIdSet getDocIdSet IndexReader reader throws IOException final OpenBitSet bits new OpenBitSet reader maxDoc new IndexSearcher reader search query new HitCollector public final void collect int doc float score return bits public String toString return query public boolean equals Object if instanceof QueryWrapperFilter return false return this query equals QueryWrapperFilter query public int hashCode return query hashCode public final class StopAnalyzer extends Analyzer private Set stopWords public static final String ENGLISH_STOP_WORDS public StopAnalyzer stopWords StopFilter makeStopSet ENGLISH_STOP_WORDS public StopAnalyzer Set stopWords this stopWords stopWords public StopAnalyzer String stopWords this stopWords StopFilter makeStopSet stopWords public StopAnalyzer File stopwordsFile throws IOException stopWords WordlistLoader getWordSet stopwordsFile public StopAnalyzer Reader stopwords throws IOException stopWords WordlistLoader getWordSet stopwords public TokenStream tokenStream String fieldName Reader reader return new StopFilter new LowerCaseTokenizer reader stopWords private class SavedStreams Tokenizer source TokenStream result public TokenStream reusableTokenStream String fieldName Reader reader throws IOException SavedStreams streams SavedStreams getPreviousTokenStream if streams null streams new SavedStreams streams source new LowerCaseTokenizer reader streams result new StopFilter streams source stopWords setPreviousTokenStream streams else streams source reset reader return streams result public class PositionBasedTermVectorMapper extends TermVectorMapper private String currentField private boolean storeOffsets public PositionBasedTermVectorMapper super false false public PositionBasedTermVectorMapper boolean ignoringOffsets super false ignoringOffsets public boolean isIgnoringPositions return false public void map String term int frequency TermVectorOffsetInfo offsets int positions for int positions length Integer posVal new Integer positions TVPositionInfo pos TVPositionInfo currentPositions get posVal if pos null pos new TVPositionInfo positions storeOffsets currentPositions put posVal pos pos addTerm term offsets null offsets null public void setExpectations String field int numTerms boolean storeOffsets boolean storePositions if storePositions false throw new RuntimeException if storeOffsets true fieldToTerms new HashMap numTerms this storeOffsets storeOffsets currentField field currentPositions new HashMap fieldToTerms put currentField currentPositions public Map getFieldToTerms return fieldToTerms public static class TVPositionInfo private int position private List terms private List offsets public TVPositionInfo int position boolean storeOffsets this position position terms new ArrayList if storeOffsets offsets new ArrayList void addTerm String term TermVectorOffsetInfo info terms add term if offsets null offsets add info public int getPosition return position public List getTerms return terms public List getOffsets return offsets public class ReqOptSumScorer extends Scorer private Scorer reqScorer private Scorer optScorer public ReqOptSumScorer Scorer reqScorer Scorer optScorer this reqScorer reqScorer this optScorer optScorer private boolean firstTimeOptScorer true public boolean next throws IOException return reqScorer next public boolean skipTo int target throws IOException return reqScorer skipTo target public int doc return reqScorer doc public float score throws IOException int curDoc reqScorer doc float reqScore reqScorer score if firstTimeOptScorer firstTimeOptScorer false if optScorer skipTo curDoc optScorer null return reqScore else if optScorer null return reqScore else if optScorer doc curDoc optScorer skipTo curDoc optScorer null return reqScore return optScorer doc curDoc reqScore optScorer score reqScore public Explanation explain int doc throws IOException Explanation res new Explanation res setDescription res addDetail reqScorer explain doc res addDetail optScorer explain doc return res class TermVectorsReader implements Cloneable static final int FORMAT_VERSION static final int FORMAT_VERSION2 static final int FORMAT_UTF8_LENGTH_IN_BYTES static final int FORMAT_CURRENT FORMAT_UTF8_LENGTH_IN_BYTES static final int FORMAT_SIZE static final byte STORE_POSITIONS_WITH_TERMVECTOR static final byte STORE_OFFSET_WITH_TERMVECTOR private FieldInfos fieldInfos private IndexInput tvx private IndexInput tvd private IndexInput tvf private int size private int numTotalDocs private int docStoreOffset private final int format TermVectorsReader Directory String segment FieldInfos fieldInfos throws CorruptIndexException IOException this segment fieldInfos BufferedIndexInput BUFFER_SIZE TermVectorsReader Directory String segment FieldInfos fieldInfos int readBufferSize throws CorruptIndexException IOException this segment fieldInfos readBufferSize TermVectorsReader Directory String segment FieldInfos fieldInfos int readBufferSize int docStoreOffset int size throws CorruptIndexException IOException boolean success false try if fileExists segment IndexFileNames VECTORS_INDEX_EXTENSION tvx openInput segment IndexFileNames VECTORS_INDEX_EXTENSION readBufferSize format checkValidFormat tvx tvd openInput segment IndexFileNames VECTORS_DOCUMENTS_EXTENSION readBufferSize final int tvdFormat checkValidFormat tvd tvf openInput segment IndexFileNames VECTORS_FIELDS_EXTENSION readBufferSize final int tvfFormat checkValidFormat tvf assert format tvdFormat assert format tvfFormat if format FORMAT_VERSION2 assert tvx length FORMAT_SIZE numTotalDocs int tvx length else assert tvx length FORMAT_SIZE numTotalDocs int tvx length if docStoreOffset this docStoreOffset this size numTotalDocs assert size numTotalDocs size else this docStoreOffset docStoreOffset this size size assert numTotalDocs size docStoreOffset numTotalDocs size docStoreOffset else format this fieldInfos fieldInfos success true finally if success close IndexInput getTvdStream return tvd IndexInput getTvfStream return tvf final private void seekTvx final int docNum throws IOException if format FORMAT_VERSION2 tvx seek docNum docStoreOffset FORMAT_SIZE else tvx seek docNum docStoreOffset FORMAT_SIZE boolean canReadRawDocs return format FORMAT_UTF8_LENGTH_IN_BYTES final void rawDocs int tvdLengths int tvfLengths int startDocID int numDocs throws IOException if tvx null Arrays fill tvdLengths Arrays fill tvfLengths return if format FORMAT_VERSION2 throw new IllegalStateException seekTvx startDocID long tvdPosition tvx readLong tvd seek tvdPosition long tvfPosition tvx readLong tvf seek tvfPosition long lastTvdPosition tvdPosition long lastTvfPosition tvfPosition int count while count numDocs final int docID docStoreOffset startDocID count assert docID numTotalDocs if docID numTotalDocs tvdPosition tvx readLong tvfPosition tvx readLong else tvdPosition tvd length tvfPosition tvf length assert count numDocs tvdLengths count int tvdPosition lastTvdPosition tvfLengths count int tvfPosition lastTvfPosition count lastTvdPosition tvdPosition lastTvfPosition tvfPosition private int checkValidFormat IndexInput in throws CorruptIndexException IOException int format in readInt if format FORMAT_CURRENT throw new CorruptIndexException format FORMAT_CURRENT return format void close throws IOException IOException keep null if tvx null try tvx close catch IOException if keep null keep if tvd null try tvd close catch IOException if keep null keep if tvf null try tvf close catch IOException if keep null keep if keep null throw IOException keep fillInStackTrace int size return size public void get int docNum String field TermVectorMapper mapper throws IOException if tvx null int fieldNumber fieldInfos fieldNumber field seekTvx docNum long tvdPosition tvx readLong tvd seek tvdPosition int fieldCount tvd readVInt int number int found for int fieldCount if format FORMAT_VERSION number tvd readVInt else number tvd readVInt if number fieldNumber found if found long position if format FORMAT_VERSION2 position tvx readLong else position tvd readVLong for int found position tvd readVLong mapper setDocumentNumber docNum readTermVector field position mapper else else TermFreqVector get int docNum String field throws IOException ParallelArrayTermVectorMapper mapper new ParallelArrayTermVectorMapper get docNum field mapper return mapper materializeVector final private String readFields int fieldCount throws IOException int number String fields new String fieldCount for int fieldCount if format FORMAT_VERSION number tvd readVInt else number tvd readVInt fields fieldInfos fieldName number return fields final private long readTvfPointers int fieldCount throws IOException long position if format FORMAT_VERSION2 position tvx readLong else position tvd readVLong long tvfPointers new long fieldCount tvfPointers position for int fieldCount position tvd readVLong tvfPointers position return tvfPointers TermFreqVector get int docNum throws IOException TermFreqVector result null if tvx null seekTvx docNum long tvdPosition tvx readLong tvd seek tvdPosition int fieldCount tvd readVInt if fieldCount final String fields readFields fieldCount final long tvfPointers readTvfPointers fieldCount result readTermVectors docNum fields tvfPointers else return result public void get int docNumber TermVectorMapper mapper throws IOException if tvx null seekTvx docNumber long tvdPosition tvx readLong tvd seek tvdPosition int fieldCount tvd readVInt if fieldCount final String fields readFields fieldCount final long tvfPointers readTvfPointers fieldCount mapper setDocumentNumber docNumber readTermVectors fields tvfPointers mapper else private SegmentTermVector readTermVectors int docNum String fields long tvfPointers throws IOException SegmentTermVector res new SegmentTermVector fields length for int fields length ParallelArrayTermVectorMapper mapper new ParallelArrayTermVectorMapper mapper setDocumentNumber docNum readTermVector fields tvfPointers mapper res SegmentTermVector mapper materializeVector return res private void readTermVectors String fields long tvfPointers TermVectorMapper mapper throws IOException for int fields length readTermVector fields tvfPointers mapper private void readTermVector String field long tvfPointer TermVectorMapper mapper throws IOException tvf seek tvfPointer int numTerms tvf readVInt if numTerms return boolean storePositions boolean storeOffsets if format FORMAT_VERSION byte bits tvf readByte storePositions bits STORE_POSITIONS_WITH_TERMVECTOR storeOffsets bits STORE_OFFSET_WITH_TERMVECTOR else tvf readVInt storePositions false storeOffsets false mapper setExpectations field numTerms storeOffsets storePositions int start int deltaLength int totalLength byte byteBuffer char charBuffer final boolean preUTF8 format FORMAT_UTF8_LENGTH_IN_BYTES if preUTF8 charBuffer new char byteBuffer null else charBuffer null byteBuffer new byte for int numTerms start tvf readVInt deltaLength tvf readVInt totalLength start deltaLength final String term if preUTF8 if charBuffer length totalLength char newCharBuffer new char int totalLength System arraycopy charBuffer newCharBuffer start charBuffer newCharBuffer tvf readChars charBuffer start deltaLength term new String charBuffer totalLength else if byteBuffer length totalLength byte newByteBuffer new byte int totalLength System arraycopy byteBuffer newByteBuffer start byteBuffer newByteBuffer tvf readBytes byteBuffer start deltaLength term new String byteBuffer totalLength int freq tvf readVInt int positions null if mapper isIgnoringPositions false positions new int freq int prevPosition for int freq positions prevPosition tvf readVInt prevPosition positions else for int freq tvf readVInt TermVectorOffsetInfo offsets null if storeOffsets if mapper isIgnoringOffsets false offsets new TermVectorOffsetInfo freq int prevOffset for int freq int startOffset prevOffset tvf readVInt int endOffset startOffset tvf readVInt offsets new TermVectorOffsetInfo startOffset endOffset prevOffset endOffset else for int freq tvf readVInt tvf readVInt mapper map term freq offsets positions protected Object clone throws CloneNotSupportedException final TermVectorsReader clone TermVectorsReader super clone if tvx null tvd null tvf null clone tvx IndexInput tvx clone clone tvd IndexInput tvd clone clone tvf IndexInput tvf clone return clone class ParallelArrayTermVectorMapper extends TermVectorMapper private String terms private int termFreqs private int positions private TermVectorOffsetInfo offsets private int currentPosition private boolean storingOffsets private boolean storingPositions private String field public void setExpectations String field int numTerms boolean storeOffsets boolean storePositions this field field terms new String numTerms termFreqs new int numTerms this storingOffsets storeOffsets this storingPositions storePositions if storePositions this positions new int numTerms if storeOffsets this offsets new TermVectorOffsetInfo numTerms public void map String term int frequency TermVectorOffsetInfo offsets int positions terms currentPosition term termFreqs currentPosition frequency if storingOffsets this offsets currentPosition offsets if storingPositions this positions currentPosition positions currentPosition public TermFreqVector materializeVector SegmentTermVector tv null if field null terms null if storingPositions storingOffsets tv new SegmentTermPositionVector field terms termFreqs positions offsets else tv new SegmentTermVector field terms termFreqs return tv public class NumberTools private static final int RADIX private static final char NEGATIVE_PREFIX private static final char POSITIVE_PREFIX public static final String MIN_STRING_VALUE NEGATIVE_PREFIX public static final String MAX_STRING_VALUE POSITIVE_PREFIX public static final int STR_SIZE MIN_STRING_VALUE length public static String longToString long if Long MIN_VALUE return MIN_STRING_VALUE StringBuffer buf new StringBuffer STR_SIZE if buf append NEGATIVE_PREFIX Long MAX_VALUE else buf append POSITIVE_PREFIX String num Long toString RADIX int padLen STR_SIZE num length buf length while padLen buf append buf append num return buf toString public static long stringToLong String str if str null throw new NullPointerException if str length STR_SIZE throw new NumberFormatException if str equals MIN_STRING_VALUE return Long MIN_VALUE char prefix str charAt long Long parseLong str substring RADIX if prefix POSITIVE_PREFIX else if prefix NEGATIVE_PREFIX Long MAX_VALUE else throw new NumberFormatException return public class TermVectorEntry private String field private String term private int frequency private TermVectorOffsetInfo offsets int positions public TermVectorEntry public TermVectorEntry String field String term int frequency TermVectorOffsetInfo offsets int positions this field field this term term this frequency frequency this offsets offsets this positions positions public String getField return field public int getFrequency return frequency public TermVectorOffsetInfo getOffsets return offsets public int getPositions return positions public String getTerm return term void setFrequency int frequency this frequency frequency void setOffsets TermVectorOffsetInfo offsets this offsets offsets void setPositions int positions this positions positions public boolean equals Object if this return true if null getClass getClass return false TermVectorEntry that TermVectorEntry if term null term equals that term that term null return false return true public int hashCode return term null term hashCode public String toString return field term frequency public class ISOLatin1AccentFilter extends TokenFilter public ISOLatin1AccentFilter TokenStream input super input private char output new char private int outputPos public final Token next final Token reusableToken throws java io IOException assert reusableToken null Token nextToken input next reusableToken if nextToken null final char buffer nextToken termBuffer final int length nextToken termLength for int length final char buffer if removeAccents buffer length nextToken setTermBuffer output outputPos break return nextToken else return null public final void removeAccents char input int length final int maxSizeNeeded length int size output length while size maxSizeNeeded size if size output length output new char size outputPos int pos for int length pos final char input pos if output outputPos else switch output outputPos break output outputPos output outputPos break output outputPos break output outputPos break output outputPos break output outputPos output outputPos break output outputPos break output outputPos break output outputPos break output outputPos output outputPos break output outputPos output outputPos break output outputPos break output outputPos break output outputPos break output outputPos output outputPos break output outputPos break output outputPos break output outputPos break output outputPos output outputPos break output outputPos break output outputPos break output outputPos break output outputPos output outputPos break output outputPos output outputPos break output outputPos output outputPos break output outputPos break output outputPos break output outputPos output outputPos break output outputPos output outputPos break output outputPos output outputPos break output outputPos output outputPos break output outputPos output outputPos break default output outputPos break public class ConcurrentMergeScheduler extends MergeScheduler private int mergeThreadPriority protected List mergeThreads new ArrayList private int maxThreadCount private List exceptions new ArrayList protected Directory dir private boolean closed protected IndexWriter writer protected int mergeThreadCount public ConcurrentMergeScheduler if allInstances null addMyself public void setMaxThreadCount int count if count throw new IllegalArgumentException maxThreadCount count public int getMaxThreadCount return maxThreadCount public synchronized int getMergeThreadPriority initMergeThreadPriority return mergeThreadPriority public synchronized void setMergeThreadPriority int pri if pri Thread MAX_PRIORITY pri Thread MIN_PRIORITY throw new IllegalArgumentException Thread MIN_PRIORITY Thread MAX_PRIORITY mergeThreadPriority pri final int numThreads mergeThreadCount for int numThreads MergeThread merge MergeThread mergeThreads get merge setThreadPriority pri private void message String message if writer null writer message message private synchronized void initMergeThreadPriority if mergeThreadPriority mergeThreadPriority Thread currentThread getPriority if mergeThreadPriority Thread MAX_PRIORITY mergeThreadPriority Thread MAX_PRIORITY public void close closed true public synchronized void sync while mergeThreadCount message mergeThreads size final int count mergeThreads size for int count message MergeThread mergeThreads get try wait catch InterruptedException private synchronized int mergeThreadCount int count final int numThreads mergeThreads size for int numThreads if MergeThread mergeThreads get isAlive count return count public void merge IndexWriter writer throws CorruptIndexException IOException this writer writer initMergeThreadPriority dir writer getDirectory message message writer segString while true MergePolicy OneMerge merge writer getNextMerge if merge null message return writer mergeInit merge synchronized this while mergeThreadCount maxThreadCount message try wait catch InterruptedException ie Thread currentThread interrupt message merge segString dir assert mergeThreadCount maxThreadCount final MergeThread merger getMergeThread writer merge mergeThreads add merger message merger getName merger start protected void doMerge MergePolicy OneMerge merge throws IOException writer merge merge protected synchronized MergeThread getMergeThread IndexWriter writer MergePolicy OneMerge merge throws IOException final MergeThread thread new MergeThread writer merge thread setThreadPriority mergeThreadPriority thread setDaemon true thread setName mergeThreadCount return thread protected class MergeThread extends Thread IndexWriter writer MergePolicy OneMerge startMerge MergePolicy OneMerge runningMerge public MergeThread IndexWriter writer MergePolicy OneMerge startMerge throws IOException this writer writer this startMerge startMerge public synchronized void setRunningMerge MergePolicy OneMerge merge runningMerge merge public synchronized MergePolicy OneMerge getRunningMerge return runningMerge public void setThreadPriority int pri try setPriority pri catch NullPointerException npe catch SecurityException se public void run MergePolicy OneMerge merge this startMerge try message while true setRunningMerge merge doMerge merge merge writer getNextMerge if merge null writer mergeInit merge message merge segString dir else break message catch Throwable exc if exc instanceof MergePolicy MergeAbortedException synchronized ConcurrentMergeScheduler this exceptions add exc if suppressExceptions anyExceptions true handleMergeException exc finally synchronized ConcurrentMergeScheduler this ConcurrentMergeScheduler this notifyAll boolean removed mergeThreads remove this assert removed public String toString MergePolicy OneMerge merge getRunningMerge if merge null merge startMerge return merge segString dir protected void handleMergeException Throwable exc throw new MergePolicy MergeException exc dir static boolean anyExceptions false public static boolean anyUnhandledExceptions synchronized allInstances final int count allInstances size for int count ConcurrentMergeScheduler allInstances get sync boolean anyExceptions anyExceptions false return public static void clearUnhandledExceptions synchronized allInstances anyExceptions false private void addMyself synchronized allInstances final int size int upto for int size final ConcurrentMergeScheduler other ConcurrentMergeScheduler allInstances get if other closed other mergeThreadCount allInstances set upto other allInstances subList upto allInstances size clear allInstances add this private boolean suppressExceptions void setSuppressExceptions suppressExceptions true void clearSuppressExceptions suppressExceptions false private static List allInstances public static void setTestMode allInstances new ArrayList public class SimpleLRUCache extends SimpleMapCache private final static float LOADFACTOR private int cacheSize public SimpleLRUCache int cacheSize super null this cacheSize cacheSize int capacity int Math ceil cacheSize LOADFACTOR super map new LinkedHashMap capacity LOADFACTOR true protected boolean removeEldestEntry Map Entry eldest return size SimpleLRUCache this cacheSize public class RemoteCachingWrapperFilter extends Filter protected Filter filter public RemoteCachingWrapperFilter Filter filter this filter filter public BitSet bits IndexReader reader throws IOException Filter cachedFilter FilterManager getInstance getFilter filter return cachedFilter bits reader public DocIdSet getDocIdSet IndexReader reader throws IOException Filter cachedFilter FilterManager getInstance getFilter filter return cachedFilter getDocIdSet reader public class BitUtil public static int pop long return int public static long pop_array long int wordOffset int numWords int wordOffset numWords long tot tot8 long ones twos fours int for wordOffset long twosA twosB foursA foursB eights long long ones twosA ones ones long long ones twosB ones ones long twos twosA foursA twos twosA twosB twos twosB long long ones twosA ones ones long long ones twosB ones ones long twos twosA foursB twos twosA twosB twos twosB long fours foursA eights fours foursA foursB fours foursB tot8 pop eights if long twosA twosB foursA eights long long ones twosA ones ones long long ones twosB ones ones long twos twosA foursA twos twosA twosB twos twosB eights fours foursA fours fours foursA tot8 pop eights if long long ones long twosA ones ones long foursA twos twosA twos twos twosA long eights fours foursA fours fours foursA tot8 pop eights if tot pop tot pop fours pop twos pop ones tot8 return tot public static long pop_intersect long long int wordOffset int numWords int wordOffset numWords long tot tot8 long ones twos fours int for wordOffset long twosA twosB foursA foursB eights long long ones twosA ones ones long long ones twosB ones ones long twos twosA foursA twos twosA twosB twos twosB long long ones twosA ones ones long long ones twosB ones ones long twos twosA foursB twos twosA twosB twos twosB long fours foursA eights fours foursA foursB fours foursB tot8 pop eights if long twosA twosB foursA eights long long ones twosA ones ones long long ones twosB ones ones long twos twosA foursA twos twosA twosB twos twosB eights fours foursA fours fours foursA tot8 pop eights if long long ones long twosA ones ones long foursA twos twosA twos twos twosA long eights fours foursA fours fours foursA tot8 pop eights if tot pop tot pop fours pop twos pop ones tot8 return tot public static long pop_union long long int wordOffset int numWords int wordOffset numWords long tot tot8 long ones twos fours int for wordOffset long twosA twosB foursA foursB eights long long ones twosA ones ones long long ones twosB ones ones long twos twosA foursA twos twosA twosB twos twosB long long ones twosA ones ones long long ones twosB ones ones long twos twosA foursB twos twosA twosB twos twosB long fours foursA eights fours foursA foursB fours foursB tot8 pop eights if long twosA twosB foursA eights long long ones twosA ones ones long long ones twosB ones ones long twos twosA foursA twos twosA twosB twos twosB eights fours foursA fours fours foursA tot8 pop eights if long long ones long twosA ones ones long foursA twos twosA twos twos twosA long eights fours foursA fours fours foursA tot8 pop eights if tot pop tot pop fours pop twos pop ones tot8 return tot public static long pop_andnot long long int wordOffset int numWords int wordOffset numWords long tot tot8 long ones twos fours int for wordOffset long twosA twosB foursA foursB eights long long ones twosA ones ones long long ones twosB ones ones long twos twosA foursA twos twosA twosB twos twosB long long ones twosA ones ones long long ones twosB ones ones long twos twosA foursB twos twosA twosB twos twosB long fours foursA eights fours foursA foursB fours foursB tot8 pop eights if long twosA twosB foursA eights long long ones twosA ones ones long long ones twosB ones ones long twos twosA foursA twos twosA twosB twos twosB eights fours foursA fours fours foursA tot8 pop eights if long long ones long twosA ones ones long foursA twos twosA twos twos twosA long eights fours foursA fours fours foursA tot8 pop eights if tot pop tot pop fours pop twos pop ones tot8 return tot public static long pop_xor long long int wordOffset int numWords int wordOffset numWords long tot tot8 long ones twos fours int for wordOffset long twosA twosB foursA foursB eights long long ones twosA ones ones long long ones twosB ones ones long twos twosA foursA twos twosA twosB twos twosB long long ones twosA ones ones long long ones twosB ones ones long twos twosA foursB twos twosA twosB twos twosB long fours foursA eights fours foursA foursB fours foursB tot8 pop eights if long twosA twosB foursA eights long long ones twosA ones ones long long ones twosB ones ones long twos twosA foursA twos twosA twosB twos twosB eights fours foursA fours fours foursA tot8 pop eights if long long ones long twosA ones ones long foursA twos twosA twos twos twosA long eights fours foursA fours fours foursA tot8 pop eights if tot pop tot pop fours pop twos pop ones tot8 return tot public static final byte ntzTable public static int ntz long val int lower int val int lowByte lower if lowByte return ntzTable lowByte if lower lowByte lower if lowByte return ntzTable lowByte lowByte lower if lowByte return ntzTable lowByte return ntzTable lower else int upper int val lowByte upper if lowByte return ntzTable lowByte lowByte upper if lowByte return ntzTable lowByte lowByte upper if lowByte return ntzTable lowByte return ntzTable upper public static int ntz2 long int int int if if return ntzTable public static int ntz3 long int int int if int if if if if return public static boolean isPowerOfTwo int return public static boolean isPowerOfTwo long return public static int nextHighestPowerOfTwo int return public static long nextHighestPowerOfTwo long return public class CheckIndex public static PrintStream out null private PrintStream infoStream private Directory dir public static class Status public boolean clean public boolean missingSegments public boolean cantOpenSegments public boolean missingSegmentVersion public String segmentsFileName public int numSegments public String segmentFormat public boolean toolOutOfDate public Directory dir SegmentInfos newSegments public int totLoseDocCount public int numBadSegments public boolean partial public static class SegmentInfoStatus public String name public int docCount public boolean compound public int numFiles public double sizeMB public int docStoreOffset public String docStoreSegment public boolean docStoreCompoundFile public boolean hasDeletions public String deletionsFileName public int numDeleted public boolean openReaderPassed int numFields public boolean hasProx public CheckIndex Directory dir this dir dir infoStream out public void setInfoStream PrintStream out infoStream out private void msg String msg if infoStream null infoStream println msg private static class MySegmentTermDocs extends SegmentTermDocs int delCount MySegmentTermDocs SegmentReader super public void seek Term term throws IOException super seek term delCount protected void skippingDoc throws IOException delCount public static boolean check Directory dir boolean doFix throws IOException return check dir doFix null public static boolean check Directory dir boolean doFix List onlySegments throws IOException CheckIndex checker new CheckIndex dir Status status checker checkIndex onlySegments if doFix status clean checker fixIndex status return status clean public Status checkIndex throws IOException return checkIndex null public Status checkIndex List onlySegments throws IOException NumberFormat nf NumberFormat getInstance SegmentInfos sis new SegmentInfos Status result new Status result dir dir try sis read dir catch Throwable msg result missingSegments true if infoStream null printStackTrace infoStream return result final int numSegments sis size final String segmentsFileName sis getCurrentSegmentFileName IndexInput input null try input dir openInput segmentsFileName catch Throwable msg if infoStream null printStackTrace infoStream result cantOpenSegments true return result int format try format input readInt catch Throwable msg if infoStream null printStackTrace infoStream result missingSegmentVersion true return result finally if input null input close String sFormat boolean skip false if format SegmentInfos FORMAT sFormat if format SegmentInfos FORMAT_LOCKLESS sFormat else if format SegmentInfos FORMAT_SINGLE_NORM_FILE sFormat else if format SegmentInfos FORMAT_SHARED_DOC_STORE sFormat else if format SegmentInfos FORMAT_CHECKSUM sFormat else if format SegmentInfos FORMAT_DEL_COUNT sFormat else if format SegmentInfos FORMAT_HAS_PROX sFormat else if format SegmentInfos CURRENT_FORMAT sFormat format skip true else sFormat format msg segmentsFileName numSegments sFormat result segmentsFileName segmentsFileName result numSegments numSegments result segmentFormat sFormat if onlySegments null result partial true if infoStream null infoStream print Iterator it onlySegments iterator while it hasNext if infoStream null infoStream print it next result segmentsChecked addAll onlySegments msg if skip msg result toolOutOfDate true return result result newSegments SegmentInfos sis clone result newSegments clear for int numSegments final SegmentInfo info sis info if onlySegments null onlySegments contains info name continue Status SegmentInfoStatus segInfoStat new Status SegmentInfoStatus result segmentInfos add segInfoStat msg numSegments info name info docCount segInfoStat name info name segInfoStat docCount info docCount int toLoseDocCount info docCount SegmentReader reader null try msg info getUseCompoundFile segInfoStat compound info getUseCompoundFile msg info getHasProx segInfoStat hasProx info getHasProx msg info files size segInfoStat numFiles info files size msg nf format info sizeInBytes segInfoStat sizeMB info sizeInBytes final int docStoreOffset info getDocStoreOffset if docStoreOffset msg docStoreOffset segInfoStat docStoreOffset docStoreOffset msg info getDocStoreSegment segInfoStat docStoreSegment info getDocStoreSegment msg info getDocStoreIsCompoundFile segInfoStat docStoreCompoundFile info getDocStoreIsCompoundFile final String delFileName info getDelFileName if delFileName null msg segInfoStat hasDeletions false else msg delFileName segInfoStat hasDeletions true segInfoStat deletionsFileName delFileName if infoStream null infoStream print reader SegmentReader get info final int numDocs reader numDocs toLoseDocCount numDocs if reader hasDeletions if info docCount numDocs info getDelCount throw new RuntimeException info getDelCount info docCount numDocs segInfoStat numDeleted info docCount numDocs msg segInfoStat numDeleted else if info getDelCount throw new RuntimeException info getDelCount info docCount numDocs msg if infoStream null infoStream print Collection fieldNames reader getFieldNames IndexReader FieldOption ALL Iterator it fieldNames iterator while it hasNext final String fieldName String it next byte reader norms fieldName if length info docCount throw new RuntimeException fieldName length info docCount msg fieldNames size segInfoStat numFields fieldNames size if infoStream null infoStream print final TermEnum termEnum reader terms final TermPositions termPositions reader termPositions final MySegmentTermDocs myTermDocs new MySegmentTermDocs reader long termCount long totFreq long totPos while termEnum next termCount final Term term termEnum term final int docFreq termEnum docFreq termPositions seek term int lastDoc int freq0 totFreq docFreq while termPositions next freq0 final int doc termPositions doc final int freq termPositions freq if doc lastDoc throw new RuntimeException term doc lastDoc lastDoc doc if freq throw new RuntimeException term doc freq int lastPos totPos freq for int freq final int pos termPositions nextPosition if pos throw new RuntimeException term doc pos if pos lastPos throw new RuntimeException term doc pos lastPos final int delCount if reader hasDeletions myTermDocs seek term while myTermDocs next delCount myTermDocs delCount else delCount if freq0 delCount docFreq throw new RuntimeException term docFreq freq0 delCount msg termCount totFreq totPos if infoStream null infoStream print int docCount long totFields for int info docCount if reader isDeleted docCount Document doc reader document totFields doc getFields size if docCount reader numDocs throw new RuntimeException docCount docCount msg totFields nf format float totFields docCount if infoStream null infoStream print int totVectors for int info docCount if reader isDeleted TermFreqVector tfv reader getTermFreqVectors if tfv null totVectors tfv length msg totVectors nf format float totVectors docCount msg catch Throwable msg String comment comment msg comment if infoStream null printStackTrace infoStream msg result totLoseDocCount toLoseDocCount result numBadSegments continue finally if reader null reader close result newSegments add info clone if result numBadSegments result clean true msg else msg result numBadSegments result totLoseDocCount return result public void fixIndex Status result throws IOException if result partial throw new IllegalArgumentException result newSegments commit result dir private static boolean assertsOn private static boolean testAsserts assertsOn true return true private static boolean assertsOn assert testAsserts return assertsOn public static void main String args throws IOException boolean doFix false List onlySegments new ArrayList String indexPath null int while args length if args equals doFix true else if args equals if args length System out println System exit onlySegments add args else if indexPath null System out println args System exit indexPath args if indexPath null System out println System out println System exit if assertsOn System out println if onlySegments size onlySegments null else if doFix System out println System exit System out println indexPath Directory dir null try dir FSDirectory getDirectory indexPath catch Throwable System out println indexPath printStackTrace System out System exit CheckIndex checker new CheckIndex dir checker setInfoStream System out Status result checker checkIndex onlySegments if result clean if doFix System out println result totLoseDocCount else System out println result totLoseDocCount System out println result totLoseDocCount for int try Thread sleep catch InterruptedException ie Thread currentThread interrupt continue System out println System out println checker fixIndex result System out println System out println result newSegments getCurrentSegmentFileName System out println final int exitCode if result null result clean true exitCode else exitCode System exit exitCode class RAMFile implements Serializable private static final long serialVersionUID private ArrayList buffers new ArrayList long length RAMDirectory directory private long lastModified System currentTimeMillis RAMFile RAMFile RAMDirectory directory this directory directory synchronized long getLength return length synchronized void setLength long length this length length synchronized long getLastModified return lastModified synchronized void setLastModified long lastModified this lastModified lastModified final synchronized byte addBuffer int size byte buffer newBuffer size if directory null buffers add buffer directory sizeInBytes size sizeInBytes size else buffers add buffer return buffer final synchronized byte getBuffer int index return byte buffers get index final synchronized int numBuffers return buffers size byte newBuffer int size return new byte size long getSizeInBytes synchronized directory return sizeInBytes public class LockObtainFailedException extends IOException public LockObtainFailedException String message super message public class Sort implements Serializable public static final Sort RELEVANCE new Sort public static final Sort INDEXORDER new Sort SortField FIELD_DOC SortField fields public Sort this new SortField SortField FIELD_SCORE SortField FIELD_DOC public Sort String field setSort field false public Sort String field boolean reverse setSort field reverse public Sort String fields setSort fields public Sort SortField field setSort field public Sort SortField fields setSort fields public final void setSort String field setSort field false public void setSort String field boolean reverse SortField nfields new SortField new SortField field SortField AUTO reverse SortField FIELD_DOC fields nfields public void setSort String fieldnames final int fieldnames length SortField nfields new SortField for int nfields new SortField fieldnames SortField AUTO fields nfields public void setSort SortField field this fields new SortField field public void setSort SortField fields this fields fields public SortField getSort return fields public String toString StringBuffer buffer new StringBuffer for int fields length buffer append fields toString if fields length buffer append return buffer toString final class StoredFieldsWriterPerThread extends DocFieldConsumerPerThread final FieldsWriter localFieldsWriter final StoredFieldsWriter storedFieldsWriter final DocumentsWriter DocState docState StoredFieldsWriter PerDoc doc public StoredFieldsWriterPerThread DocFieldProcessorPerThread docFieldProcessorPerThread StoredFieldsWriter storedFieldsWriter throws IOException this storedFieldsWriter storedFieldsWriter this docState docFieldProcessorPerThread docState localFieldsWriter new FieldsWriter IndexOutput null IndexOutput null storedFieldsWriter fieldInfos public void startDocument if doc null doc reset doc docID docState docID public DocumentsWriter DocWriter finishDocument try return doc finally doc null public void abort if doc null doc abort doc null public DocFieldConsumerPerField addField FieldInfo fieldInfo return new StoredFieldsWriterPerField this fieldInfo public class IndexWriter public static long WRITE_LOCK_TIMEOUT private long writeLockTimeout WRITE_LOCK_TIMEOUT public static final String WRITE_LOCK_NAME public final static int DEFAULT_MERGE_FACTOR LogMergePolicy DEFAULT_MERGE_FACTOR public final static int DISABLE_AUTO_FLUSH public final static int DEFAULT_MAX_BUFFERED_DOCS DISABLE_AUTO_FLUSH public final static double DEFAULT_RAM_BUFFER_SIZE_MB public final static int DEFAULT_MAX_BUFFERED_DELETE_TERMS DISABLE_AUTO_FLUSH public final static int DEFAULT_MAX_MERGE_DOCS LogDocMergePolicy DEFAULT_MAX_MERGE_DOCS public final static int DEFAULT_MAX_FIELD_LENGTH public final static int DEFAULT_TERM_INDEX_INTERVAL public final static int MAX_TERM_LENGTH DocumentsWriter MAX_TERM_LENGTH public final static double DEFAULT_MAX_SYNC_PAUSE_SECONDS static if Constants WINDOWS DEFAULT_MAX_SYNC_PAUSE_SECONDS else DEFAULT_MAX_SYNC_PAUSE_SECONDS private final static int MERGE_READ_BUFFER_SIZE private static Object MESSAGE_ID_LOCK new Object private static int MESSAGE_ID private int messageID volatile private boolean hitOOM private HashMap rollbackSegments volatile long pendingCommitChangeCount private DocumentsWriter docWriter private IndexFileDeleter deleter private Lock writeLock private int termIndexInterval DEFAULT_TERM_INDEX_INTERVAL private boolean closeDir private boolean closed private boolean closing private HashSet mergingSegments new HashSet private MergePolicy mergePolicy new LogByteSizeMergePolicy private MergeScheduler mergeScheduler new ConcurrentMergeScheduler private LinkedList pendingMerges new LinkedList private Set runningMerges new HashSet private List mergeExceptions new ArrayList private long mergeGen private boolean stopMerges private int flushCount private int flushDeletesCount private double maxSyncPauseSeconds DEFAULT_MAX_SYNC_PAUSE_SECONDS synchronized void acquireWrite while writeThread null readCount doWait ensureOpen writeThread Thread currentThread synchronized void releaseWrite assert Thread currentThread writeThread writeThread null notifyAll synchronized void acquireRead final Thread current Thread currentThread while writeThread null writeThread current doWait readCount synchronized void releaseRead readCount assert readCount if readCount notifyAll protected synchronized final void ensureOpen boolean includePendingClose throws AlreadyClosedException if closed includePendingClose closing throw new AlreadyClosedException protected synchronized final void ensureOpen throws AlreadyClosedException ensureOpen true public void message String message if infoStream null infoStream println messageID Thread currentThread getName message private synchronized void setMessageID PrintStream infoStream if infoStream null messageID synchronized MESSAGE_ID_LOCK messageID MESSAGE_ID this infoStream infoStream private LogMergePolicy getLogMergePolicy if mergePolicy instanceof LogMergePolicy return LogMergePolicy mergePolicy else throw new IllegalArgumentException public boolean getUseCompoundFile return getLogMergePolicy getUseCompoundFile public void setUseCompoundFile boolean value getLogMergePolicy setUseCompoundFile value getLogMergePolicy setUseCompoundDocStore value public void setSimilarity Similarity similarity ensureOpen this similarity similarity docWriter setSimilarity similarity public Similarity getSimilarity ensureOpen return this similarity public void setTermIndexInterval int interval ensureOpen this termIndexInterval interval public int getTermIndexInterval ensureOpen false return termIndexInterval public IndexWriter String path Analyzer boolean create MaxFieldLength mfl throws CorruptIndexException LockObtainFailedException IOException init FSDirectory getDirectory path create true null false mfl getLimit public IndexWriter String path Analyzer boolean create throws CorruptIndexException LockObtainFailedException IOException init FSDirectory getDirectory path create true null true DEFAULT_MAX_FIELD_LENGTH public IndexWriter File path Analyzer boolean create MaxFieldLength mfl throws CorruptIndexException LockObtainFailedException IOException init FSDirectory getDirectory path create true null false mfl getLimit public IndexWriter File path Analyzer boolean create throws CorruptIndexException LockObtainFailedException IOException init FSDirectory getDirectory path create true null true DEFAULT_MAX_FIELD_LENGTH public IndexWriter Directory Analyzer boolean create MaxFieldLength mfl throws CorruptIndexException LockObtainFailedException IOException init create false null false mfl getLimit public IndexWriter Directory Analyzer boolean create throws CorruptIndexException LockObtainFailedException IOException init create false null true DEFAULT_MAX_FIELD_LENGTH public IndexWriter String path Analyzer MaxFieldLength mfl throws CorruptIndexException LockObtainFailedException IOException init FSDirectory getDirectory path true null false mfl getLimit public IndexWriter String path Analyzer throws CorruptIndexException LockObtainFailedException IOException init FSDirectory getDirectory path true null true DEFAULT_MAX_FIELD_LENGTH public IndexWriter File path Analyzer MaxFieldLength mfl throws CorruptIndexException LockObtainFailedException IOException init FSDirectory getDirectory path true null false mfl getLimit public IndexWriter File path Analyzer throws CorruptIndexException LockObtainFailedException IOException init FSDirectory getDirectory path true null true DEFAULT_MAX_FIELD_LENGTH public IndexWriter Directory Analyzer MaxFieldLength mfl throws CorruptIndexException LockObtainFailedException IOException init false null false mfl getLimit public IndexWriter Directory Analyzer throws CorruptIndexException LockObtainFailedException IOException init false null true DEFAULT_MAX_FIELD_LENGTH public IndexWriter Directory boolean autoCommit Analyzer throws CorruptIndexException LockObtainFailedException IOException init false null autoCommit DEFAULT_MAX_FIELD_LENGTH public IndexWriter Directory boolean autoCommit Analyzer boolean create throws CorruptIndexException LockObtainFailedException IOException init create false null autoCommit DEFAULT_MAX_FIELD_LENGTH public IndexWriter Directory Analyzer IndexDeletionPolicy deletionPolicy MaxFieldLength mfl throws CorruptIndexException LockObtainFailedException IOException init false deletionPolicy false mfl getLimit public IndexWriter Directory boolean autoCommit Analyzer IndexDeletionPolicy deletionPolicy throws CorruptIndexException LockObtainFailedException IOException init false deletionPolicy autoCommit DEFAULT_MAX_FIELD_LENGTH public IndexWriter Directory Analyzer boolean create IndexDeletionPolicy deletionPolicy MaxFieldLength mfl throws CorruptIndexException LockObtainFailedException IOException init create false deletionPolicy false mfl getLimit public IndexWriter Directory boolean autoCommit Analyzer boolean create IndexDeletionPolicy deletionPolicy throws CorruptIndexException LockObtainFailedException IOException init create false deletionPolicy autoCommit DEFAULT_MAX_FIELD_LENGTH private void init Directory Analyzer boolean closeDir IndexDeletionPolicy deletionPolicy boolean autoCommit int maxFieldLength throws CorruptIndexException LockObtainFailedException IOException if IndexReader indexExists init false closeDir deletionPolicy autoCommit maxFieldLength else init true closeDir deletionPolicy autoCommit maxFieldLength private void init Directory Analyzer final boolean create boolean closeDir IndexDeletionPolicy deletionPolicy boolean autoCommit int maxFieldLength throws CorruptIndexException LockObtainFailedException IOException this closeDir closeDir directory analyzer setMessageID defaultInfoStream this maxFieldLength maxFieldLength if create directory clearLock WRITE_LOCK_NAME Lock writeLock directory makeLock WRITE_LOCK_NAME throw new LockObtainFailedException writeLock try if create try segmentInfos read directory segmentInfos clear catch IOException segmentInfos commit directory else segmentInfos read directory for int segmentInfos size final SegmentInfo info segmentInfos info List files info files for int files size synced add files get this autoCommit autoCommit setRollbackSegmentInfos segmentInfos docWriter new DocumentsWriter directory this docWriter setInfoStream infoStream docWriter setMaxFieldLength maxFieldLength deleter new IndexFileDeleter directory deletionPolicy null new KeepOnlyLastCommitDeletionPolicy deletionPolicy segmentInfos infoStream docWriter pushMaxBufferedDocs if infoStream null message create messageState catch IOException this writeLock release this writeLock null throw private synchronized void setRollbackSegmentInfos SegmentInfos infos rollbackSegmentInfos SegmentInfos infos clone assert hasExternalSegments rollbackSegmentInfos rollbackSegments new HashMap final int size rollbackSegmentInfos size for int size rollbackSegments put rollbackSegmentInfos info new Integer public void setMergePolicy MergePolicy mp ensureOpen if mp null throw new NullPointerException if mergePolicy mp mergePolicy close mergePolicy mp pushMaxBufferedDocs if infoStream null message mp public MergePolicy getMergePolicy ensureOpen return mergePolicy synchronized public void setMergeScheduler MergeScheduler mergeScheduler throws CorruptIndexException IOException ensureOpen if mergeScheduler null throw new NullPointerException if this mergeScheduler mergeScheduler finishMerges true this mergeScheduler close this mergeScheduler mergeScheduler if infoStream null message mergeScheduler public MergeScheduler getMergeScheduler ensureOpen return mergeScheduler public void setMaxMergeDocs int maxMergeDocs getLogMergePolicy setMaxMergeDocs maxMergeDocs public int getMaxMergeDocs return getLogMergePolicy getMaxMergeDocs public void setMaxFieldLength int maxFieldLength ensureOpen this maxFieldLength maxFieldLength docWriter setMaxFieldLength maxFieldLength if infoStream null message maxFieldLength public int getMaxFieldLength ensureOpen return maxFieldLength public void setMaxBufferedDocs int maxBufferedDocs ensureOpen if maxBufferedDocs DISABLE_AUTO_FLUSH maxBufferedDocs throw new IllegalArgumentException if maxBufferedDocs DISABLE_AUTO_FLUSH getRAMBufferSizeMB DISABLE_AUTO_FLUSH throw new IllegalArgumentException docWriter setMaxBufferedDocs maxBufferedDocs pushMaxBufferedDocs if infoStream null message maxBufferedDocs private void pushMaxBufferedDocs if docWriter getMaxBufferedDocs DISABLE_AUTO_FLUSH final MergePolicy mp mergePolicy if mp instanceof LogDocMergePolicy LogDocMergePolicy lmp LogDocMergePolicy mp final int maxBufferedDocs docWriter getMaxBufferedDocs if lmp getMinMergeDocs maxBufferedDocs if infoStream null message maxBufferedDocs lmp setMinMergeDocs maxBufferedDocs public int getMaxBufferedDocs ensureOpen return docWriter getMaxBufferedDocs public void setRAMBufferSizeMB double mb if mb DISABLE_AUTO_FLUSH mb throw new IllegalArgumentException if mb DISABLE_AUTO_FLUSH getMaxBufferedDocs DISABLE_AUTO_FLUSH throw new IllegalArgumentException docWriter setRAMBufferSizeMB mb if infoStream null message mb public double getRAMBufferSizeMB return docWriter getRAMBufferSizeMB public void setMaxBufferedDeleteTerms int maxBufferedDeleteTerms ensureOpen if maxBufferedDeleteTerms DISABLE_AUTO_FLUSH maxBufferedDeleteTerms throw new IllegalArgumentException docWriter setMaxBufferedDeleteTerms maxBufferedDeleteTerms if infoStream null message maxBufferedDeleteTerms public int getMaxBufferedDeleteTerms ensureOpen return docWriter getMaxBufferedDeleteTerms public void setMergeFactor int mergeFactor getLogMergePolicy setMergeFactor mergeFactor public int getMergeFactor return getLogMergePolicy getMergeFactor public double getMaxSyncPauseSeconds return maxSyncPauseSeconds public void setMaxSyncPauseSeconds double seconds maxSyncPauseSeconds seconds public static void setDefaultInfoStream PrintStream infoStream IndexWriter defaultInfoStream infoStream public static PrintStream getDefaultInfoStream return IndexWriter defaultInfoStream public void setInfoStream PrintStream infoStream ensureOpen setMessageID infoStream docWriter setInfoStream infoStream deleter setInfoStream infoStream if infoStream null messageState private void messageState message directory autoCommit mergePolicy mergeScheduler docWriter getRAMBufferSizeMB docWriter getMaxBufferedDocs docWriter getMaxBufferedDeleteTerms maxFieldLength segString public PrintStream getInfoStream ensureOpen return infoStream public void setWriteLockTimeout long writeLockTimeout ensureOpen this writeLockTimeout writeLockTimeout public long getWriteLockTimeout ensureOpen return writeLockTimeout public static void setDefaultWriteLockTimeout long writeLockTimeout IndexWriter WRITE_LOCK_TIMEOUT writeLockTimeout public static long getDefaultWriteLockTimeout return IndexWriter WRITE_LOCK_TIMEOUT public void close throws CorruptIndexException IOException close true public void close boolean waitForMerges throws CorruptIndexException IOException if hitOOM rollback return if shouldClose closeInternal waitForMerges synchronized private boolean shouldClose while true if closed if closing closing true return true else doWait else return false private void closeInternal boolean waitForMerges throws CorruptIndexException IOException docWriter pauseAllThreads try if infoStream null message docWriter close flush waitForMerges true true if waitForMerges mergeScheduler merge this mergePolicy close finishMerges waitForMerges mergeScheduler close if infoStream null message commit if infoStream null message segString synchronized this docWriter null deleter close if closeDir directory close if writeLock null writeLock null synchronized this closed true catch OutOfMemoryError oom hitOOM true throw oom finally synchronized this closing false notifyAll if closed if docWriter null docWriter resumeAllThreads if infoStream null message private synchronized boolean flushDocStores throws IOException boolean useCompoundDocStore false String docStoreSegment boolean success false try docStoreSegment docWriter closeDocStore success true finally if success if infoStream null message useCompoundDocStore mergePolicy useCompoundDocStore segmentInfos if useCompoundDocStore docStoreSegment null docWriter closedFiles size success false final int numSegments segmentInfos size final String compoundFileName docStoreSegment IndexFileNames COMPOUND_FILE_STORE_EXTENSION try CompoundFileWriter cfsWriter new CompoundFileWriter directory compoundFileName final Iterator it docWriter closedFiles iterator while it hasNext cfsWriter addFile String it next cfsWriter close success true finally if success if infoStream null message docStoreSegment deleter deleteFile compoundFileName for int numSegments SegmentInfo si segmentInfos info if si getDocStoreOffset si getDocStoreSegment equals docStoreSegment si setDocStoreIsCompoundFile true checkpoint deleter deleteNewFiles docWriter closedFiles return useCompoundDocStore protected void finalize throws Throwable try if writeLock null writeLock null finally super finalize public Directory getDirectory ensureOpen false return directory public Analyzer getAnalyzer ensureOpen return analyzer public synchronized int docCount ensureOpen return maxDoc public synchronized int maxDoc int count if docWriter null count docWriter getNumDocsInRAM else count for int segmentInfos size count segmentInfos info docCount return count public synchronized int numDocs throws IOException int count if docWriter null count docWriter getNumDocsInRAM else count for int segmentInfos size final SegmentInfo info segmentInfos info count info docCount info getDelCount return count public synchronized boolean hasDeletions throws IOException ensureOpen if docWriter hasDeletes return true for int segmentInfos size if segmentInfos info hasDeletions return true return false private int maxFieldLength public void addDocument Document doc throws CorruptIndexException IOException addDocument doc analyzer public void addDocument Document doc Analyzer analyzer throws CorruptIndexException IOException ensureOpen boolean doFlush false boolean success false try try doFlush docWriter addDocument doc analyzer success true finally if success if infoStream null message synchronized this if docWriter null final Collection files docWriter abortedFiles if files null deleter deleteNewFiles files if doFlush flush true false false catch OutOfMemoryError oom hitOOM true throw oom public void deleteDocuments Term term throws CorruptIndexException IOException ensureOpen try boolean doFlush docWriter bufferDeleteTerm term if doFlush flush true false false catch OutOfMemoryError oom hitOOM true throw oom public void deleteDocuments Term terms throws CorruptIndexException IOException ensureOpen try boolean doFlush docWriter bufferDeleteTerms terms if doFlush flush true false false catch OutOfMemoryError oom hitOOM true throw oom public void deleteDocuments Query query throws CorruptIndexException IOException ensureOpen boolean doFlush docWriter bufferDeleteQuery query if doFlush flush true false false public void deleteDocuments Query queries throws CorruptIndexException IOException ensureOpen boolean doFlush docWriter bufferDeleteQueries queries if doFlush flush true false false public void updateDocument Term term Document doc throws CorruptIndexException IOException ensureOpen updateDocument term doc getAnalyzer public void updateDocument Term term Document doc Analyzer analyzer throws CorruptIndexException IOException ensureOpen try boolean doFlush false boolean success false try doFlush docWriter updateDocument term doc analyzer success true finally if success if infoStream null message synchronized this final Collection files docWriter abortedFiles if files null deleter deleteNewFiles files if doFlush flush true false false catch OutOfMemoryError oom hitOOM true throw oom final synchronized int getSegmentCount return segmentInfos size final synchronized int getNumBufferedDocuments return docWriter getNumDocsInRAM final synchronized int getDocCount int if segmentInfos size return segmentInfos info docCount else return final synchronized int getFlushCount return flushCount final synchronized int getFlushDeletesCount return flushDeletesCount final String newSegmentName synchronized segmentInfos changeCount return Integer toString segmentInfos counter Character MAX_RADIX private PrintStream infoStream null private static PrintStream defaultInfoStream null public void optimize throws CorruptIndexException IOException optimize true public void optimize int maxNumSegments throws CorruptIndexException IOException optimize maxNumSegments true public void optimize boolean doWait throws CorruptIndexException IOException optimize doWait public void optimize int maxNumSegments boolean doWait throws CorruptIndexException IOException ensureOpen if maxNumSegments throw new IllegalArgumentException maxNumSegments if infoStream null message segString flush true false true synchronized this resetMergeExceptions segmentsToOptimize new HashSet final int numSegments segmentInfos size for int numSegments segmentsToOptimize add segmentInfos info Iterator it pendingMerges iterator while it hasNext final MergePolicy OneMerge merge MergePolicy OneMerge it next merge optimize true merge maxNumSegmentsOptimize maxNumSegments it runningMerges iterator while it hasNext final MergePolicy OneMerge merge MergePolicy OneMerge it next merge optimize true merge maxNumSegmentsOptimize maxNumSegments maybeMerge maxNumSegments true if doWait synchronized this while true if mergeExceptions size final int size mergeExceptions size for int size final MergePolicy OneMerge merge MergePolicy OneMerge mergeExceptions get if merge optimize IOException err new IOException merge segString directory final Throwable merge getException if null err initCause throw err if optimizeMergesPending doWait else break ensureOpen private synchronized boolean optimizeMergesPending Iterator it pendingMerges iterator while it hasNext if MergePolicy OneMerge it next optimize return true it runningMerges iterator while it hasNext if MergePolicy OneMerge it next optimize return true return false public void expungeDeletes boolean doWait throws CorruptIndexException IOException ensureOpen if infoStream null message segString MergePolicy MergeSpecification spec synchronized this spec mergePolicy findMergesToExpungeDeletes segmentInfos this if spec null final int numMerges spec merges size for int numMerges registerMerge MergePolicy OneMerge spec merges get mergeScheduler merge this if spec null doWait final int numMerges spec merges size synchronized this boolean running true while running running false for int numMerges final MergePolicy OneMerge merge MergePolicy OneMerge spec merges get if pendingMerges contains merge runningMerges contains merge running true Throwable merge getException if null IOException ioe new IOException merge segString directory ioe initCause throw ioe if running doWait public void expungeDeletes throws CorruptIndexException IOException expungeDeletes true public final void maybeMerge throws CorruptIndexException IOException maybeMerge false private final void maybeMerge boolean optimize throws CorruptIndexException IOException maybeMerge optimize private final void maybeMerge int maxNumSegmentsOptimize boolean optimize throws CorruptIndexException IOException updatePendingMerges maxNumSegmentsOptimize optimize mergeScheduler merge this private synchronized void updatePendingMerges int maxNumSegmentsOptimize boolean optimize throws CorruptIndexException IOException assert optimize maxNumSegmentsOptimize if stopMerges return final MergePolicy MergeSpecification spec if optimize spec mergePolicy findMergesForOptimize segmentInfos this maxNumSegmentsOptimize segmentsToOptimize if spec null final int numMerges spec merges size for int numMerges final MergePolicy OneMerge merge MergePolicy OneMerge spec merges get merge optimize true merge maxNumSegmentsOptimize maxNumSegmentsOptimize else spec mergePolicy findMerges segmentInfos this if spec null final int numMerges spec merges size for int numMerges registerMerge MergePolicy OneMerge spec merges get synchronized MergePolicy OneMerge getNextMerge if pendingMerges size return null else MergePolicy OneMerge merge MergePolicy OneMerge pendingMerges removeFirst runningMerges add merge return merge private synchronized MergePolicy OneMerge getNextExternalMerge if pendingMerges size return null else Iterator it pendingMerges iterator while it hasNext MergePolicy OneMerge merge MergePolicy OneMerge it next if merge isExternal it remove runningMerges add merge return merge return null private synchronized void startTransaction boolean haveWriteLock throws IOException boolean success false try if infoStream null message assert docWriter getNumBufferedDeleteTerms docWriter getNumBufferedDeleteTerms assert docWriter getNumDocsInRAM docWriter getNumDocsInRAM ensureOpen synchronized this while stopMerges doWait success true finally if success haveWriteLock releaseWrite if haveWriteLock acquireWrite success false try localRollbackSegmentInfos SegmentInfos segmentInfos clone assert hasExternalSegments segmentInfos localAutoCommit autoCommit localFlushedDocCount docWriter getFlushedDocCount if localAutoCommit if infoStream null message flush true false false autoCommit false else deleter incRef segmentInfos false success true finally if success finishAddIndexes private synchronized void rollbackTransaction throws IOException if infoStream null message autoCommit localAutoCommit docWriter setFlushedDocCount localFlushedDocCount finishMerges false segmentInfos clear segmentInfos addAll localRollbackSegmentInfos localRollbackSegmentInfos null finishAddIndexes deleter checkpoint segmentInfos false if autoCommit deleter decRef segmentInfos deleter refresh notifyAll assert hasExternalSegments private synchronized void commitTransaction throws IOException if infoStream null message autoCommit localAutoCommit checkpoint if autoCommit boolean success false try commit success true finally if success if infoStream null message rollbackTransaction else deleter decRef localRollbackSegmentInfos localRollbackSegmentInfos null assert hasExternalSegments finishAddIndexes public void abort throws IOException rollback public void rollback throws IOException ensureOpen if autoCommit throw new IllegalStateException if shouldClose rollbackInternal private void rollbackInternal throws IOException boolean success false docWriter pauseAllThreads try finishMerges false mergePolicy close mergeScheduler close synchronized this if pendingCommit null pendingCommit rollbackCommit directory deleter decRef pendingCommit pendingCommit null notifyAll segmentInfos clear segmentInfos addAll rollbackSegmentInfos assert hasExternalSegments docWriter abort assert testPoint deleter checkpoint segmentInfos false deleter refresh lastCommitChangeCount changeCount success true catch OutOfMemoryError oom hitOOM true throw oom finally synchronized this if success docWriter resumeAllThreads closing false notifyAll if infoStream null message closeInternal false private synchronized void finishMerges boolean waitForMerges throws IOException if waitForMerges stopMerges true Iterator it pendingMerges iterator while it hasNext final MergePolicy OneMerge merge MergePolicy OneMerge it next if infoStream null message merge segString directory merge abort mergeFinish merge pendingMerges clear it runningMerges iterator while it hasNext final MergePolicy OneMerge merge MergePolicy OneMerge it next if infoStream null message merge segString directory merge abort acquireRead releaseRead while runningMerges size if infoStream null message runningMerges size doWait stopMerges false notifyAll assert mergingSegments size if infoStream null message else acquireRead releaseRead while pendingMerges size runningMerges size doWait assert mergingSegments size private synchronized void checkpoint throws IOException changeCount deleter checkpoint segmentInfos false private void finishAddIndexes releaseWrite private void blockAddIndexes boolean includePendingClose acquireRead boolean success false try ensureOpen includePendingClose success true finally if success releaseRead private void resumeAddIndexes releaseRead public void addIndexes Directory dirs throws CorruptIndexException IOException ensureOpen noDupDirs dirs docWriter pauseAllThreads try if infoStream null message flush true false true boolean success false startTransaction false try int docCount synchronized this ensureOpen for int dirs length sis read dirs for int sis size final SegmentInfo info sis info docCount info docCount assert segmentInfos contains info docWriter updateFlushedDocCount docCount optimize success true finally if success commitTransaction else rollbackTransaction catch OutOfMemoryError oom hitOOM true throw oom finally docWriter resumeAllThreads private synchronized void resetMergeExceptions mergeExceptions new ArrayList mergeGen private void noDupDirs Directory dirs HashSet dups new HashSet for int dirs length if dups contains dirs throw new IllegalArgumentException dirs if dirs directory throw new IllegalArgumentException dups add dirs public void addIndexesNoOptimize Directory dirs throws CorruptIndexException IOException ensureOpen noDupDirs dirs docWriter pauseAllThreads try if infoStream null message flush true false true boolean success false startTransaction false try int docCount synchronized this ensureOpen for int dirs length if directory dirs throw new IllegalArgumentException sis read dirs for int sis size SegmentInfo info sis info assert segmentInfos contains info info dir info name docCount info docCount docWriter updateFlushedDocCount docCount maybeMerge ensureOpen resolveExternalSegments ensureOpen success true finally if success commitTransaction else rollbackTransaction catch OutOfMemoryError oom hitOOM true throw oom finally docWriter resumeAllThreads private boolean hasExternalSegments return hasExternalSegments segmentInfos private boolean hasExternalSegments SegmentInfos infos final int numSegments infos size for int numSegments if infos info dir directory return true return false private void resolveExternalSegments throws CorruptIndexException IOException boolean any false boolean done false while done SegmentInfo info null MergePolicy OneMerge merge null synchronized this if stopMerges throw new MergePolicy MergeAbortedException final int numSegments segmentInfos size done true for int numSegments info segmentInfos info if info dir directory done false final MergePolicy OneMerge newMerge new MergePolicy OneMerge segmentInfos range info getUseCompoundFile if registerMerge newMerge merge newMerge pendingMerges remove merge runningMerges add merge break if done merge null merge getNextExternalMerge if done merge null doWait if merge null any true merge merge if any mergeScheduler merge this public void addIndexes IndexReader readers throws CorruptIndexException IOException ensureOpen docWriter pauseAllThreads acquireWrite try boolean success false SegmentInfo info null String mergedName null SegmentMerger merger null try flush true false true success true finally if success releaseWrite startTransaction true try mergedName newSegmentName merger new SegmentMerger this mergedName null IndexReader sReader null synchronized this sReader SegmentReader get true segmentInfos info try if sReader null merger add sReader merger add readers if sReader null sReader close sReader null synchronized this info new SegmentInfo mergedName docCount directory false true null false merger hasProx segmentInfos add info docWriter updateFlushedDocCount docCount success true finally if sReader null sReader close finally if success if infoStream null message rollbackTransaction else commitTransaction if mergePolicy instanceof LogMergePolicy getUseCompoundFile List files null synchronized this if segmentInfos contains info files info files deleter incRef files if files null success false startTransaction false try merger createCompoundFile mergedName synchronized this info setUseCompoundFile true success true finally deleter decRef files if success if infoStream null message rollbackTransaction else commitTransaction catch OutOfMemoryError oom hitOOM true throw oom finally docWriter resumeAllThreads void doAfterFlush throws IOException public final void flush throws CorruptIndexException IOException flush true false true public final void prepareCommit throws CorruptIndexException IOException ensureOpen prepareCommit false private final void prepareCommit boolean internal throws CorruptIndexException IOException if hitOOM throw new IllegalStateException if autoCommit internal throw new IllegalStateException if autoCommit pendingCommit null throw new IllegalStateException message flush true true true startCommit private void commit long sizeInBytes throws IOException startCommit sizeInBytes finishCommit private boolean committing synchronized private void waitForCommit while committing doWait committing true synchronized private void doneCommit committing false notifyAll public final void commit throws CorruptIndexException IOException ensureOpen waitForCommit try message if autoCommit pendingCommit null message prepareCommit true else message finishCommit finally doneCommit private synchronized final void finishCommit throws CorruptIndexException IOException if pendingCommit null try message pendingCommit finishCommit directory lastCommitChangeCount pendingCommitChangeCount segmentInfos updateGeneration pendingCommit setRollbackSegmentInfos pendingCommit deleter checkpoint pendingCommit true finally deleter decRef pendingCommit pendingCommit null notifyAll else message message protected final void flush boolean triggerMerge boolean flushDocStores boolean flushDeletes throws CorruptIndexException IOException ensureOpen false if doFlush flushDocStores flushDeletes triggerMerge maybeMerge private synchronized final boolean doFlush boolean flushDocStores boolean flushDeletes throws CorruptIndexException IOException ensureOpen false assert testPoint flushCount flushDeletes docWriter deletesFull flushDeletes autoCommit if docWriter pauseAllThreads docWriter resumeAllThreads return false try SegmentInfo newSegment null final int numDocs docWriter getNumDocsInRAM boolean flushDocs numDocs flushDocStores autoCommit String docStoreSegment docWriter getDocStoreSegment if docStoreSegment null flushDocStores false int docStoreOffset docWriter getDocStoreOffset assert autoCommit docStoreOffset boolean docStoreIsCompoundFile false if infoStream null message docWriter getSegment docWriter getDocStoreSegment docStoreOffset flushDocs flushDeletes flushDocStores numDocs docWriter getNumBufferedDeleteTerms message segString if flushDocStores flushDocs docWriter getSegment equals docWriter getDocStoreSegment if infoStream null message docStoreSegment docStoreIsCompoundFile flushDocStores flushDocStores false String segment docWriter getSegment assert segment null flushDocs if flushDocs boolean success false final int flushedDocCount try flushedDocCount docWriter flush flushDocStores success true finally if success if infoStream null message segment deleter refresh segment if docStoreOffset flushDocStores assert docStoreSegment null assert docStoreSegment equals segment docStoreOffset docStoreIsCompoundFile false docStoreSegment null newSegment new SegmentInfo segment flushedDocCount directory false true docStoreOffset docStoreSegment docStoreIsCompoundFile docWriter hasProx docWriter pushDeletes if flushDocs segmentInfos add newSegment if flushDeletes flushDeletesCount applyDeletes doAfterFlush if flushDocs checkpoint if flushDocs mergePolicy useCompoundFile segmentInfos newSegment boolean success false try docWriter createCompoundFile segment success true finally if success if infoStream null message segment deleter deleteFile segment IndexFileNames COMPOUND_FILE_EXTENSION newSegment setUseCompoundFile true checkpoint return flushDocs catch OutOfMemoryError oom hitOOM true throw oom finally docWriter clearFlushPending docWriter resumeAllThreads public final long ramSizeInBytes ensureOpen return docWriter getRAMUsed public final synchronized int numRamDocs ensureOpen return docWriter getNumDocsInRAM private int ensureContiguousMerge MergePolicy OneMerge merge int first segmentInfos indexOf merge segments info if first throw new MergePolicy MergeException merge segments info name directory final int numSegments segmentInfos size final int numSegmentsToMerge merge segments size for int numSegmentsToMerge final SegmentInfo info merge segments info if first numSegments segmentInfos info first equals info if segmentInfos indexOf info throw new MergePolicy MergeException info name directory else throw new MergePolicy MergeException merge segString directory segString directory return first synchronized private void commitMergedDeletes MergePolicy OneMerge merge throws IOException assert testPoint final SegmentInfos sourceSegmentsClone merge segmentsClone final SegmentInfos sourceSegments merge segments if infoStream null message merge segString directory BitVector deletes null int docUpto int delCount final int numSegmentsToMerge sourceSegments size for int numSegmentsToMerge final SegmentInfo previousInfo sourceSegmentsClone info final SegmentInfo currentInfo sourceSegments info assert currentInfo docCount previousInfo docCount final int docCount currentInfo docCount if previousInfo hasDeletions assert currentInfo hasDeletions BitVector previousDeletes new BitVector previousInfo dir previousInfo getDelFileName if currentInfo getDelFileName equals previousInfo getDelFileName if deletes null deletes new BitVector merge info docCount BitVector currentDeletes new BitVector currentInfo dir currentInfo getDelFileName for int docCount if previousDeletes get assert currentDeletes get else if currentDeletes get deletes set docUpto delCount docUpto else docUpto docCount previousDeletes count else if currentInfo hasDeletions if deletes null deletes new BitVector merge info docCount BitVector currentDeletes new BitVector directory currentInfo getDelFileName for int docCount if currentDeletes get deletes set docUpto delCount docUpto else docUpto currentInfo docCount if deletes null merge info advanceDelGen message merge info getDelFileName deletes write directory merge info getDelFileName merge info setDelCount delCount assert delCount deletes count synchronized private boolean commitMerge MergePolicy OneMerge merge SegmentMerger merger int mergedDocCount throws IOException assert testPoint if hitOOM return false if infoStream null message merge segString directory segString assert merge registerDone if merge isAborted if infoStream null message merge segString directory deleter refresh merge info name return false final int start ensureContiguousMerge merge commitMergedDeletes merge docWriter remapDeletes segmentInfos merger getDocMaps merger getDelCounts merge mergedDocCount final String mergeDocStoreSegment merge info getDocStoreSegment if mergeDocStoreSegment null merge info getDocStoreIsCompoundFile final int size segmentInfos size for int size final SegmentInfo info segmentInfos info final String docStoreSegment info getDocStoreSegment if docStoreSegment null docStoreSegment equals mergeDocStoreSegment info getDocStoreIsCompoundFile merge info setDocStoreIsCompoundFile true break merge info setHasProx merger hasProx segmentInfos subList start start merge segments size clear assert segmentInfos contains merge info segmentInfos add start merge info checkpoint decrefMergeSegments merge if merge optimize segmentsToOptimize add merge info return true private void decrefMergeSegments MergePolicy OneMerge merge throws IOException final SegmentInfos sourceSegmentsClone merge segmentsClone final int numSegmentsToMerge sourceSegmentsClone size assert merge increfDone merge increfDone false for int numSegmentsToMerge final SegmentInfo previousInfo sourceSegmentsClone info if previousInfo dir directory deleter decRef previousInfo files final private void handleMergeException Throwable MergePolicy OneMerge merge throws IOException merge setException addMergeException merge if instanceof MergePolicy MergeAbortedException if merge isExternal throw MergePolicy MergeAbortedException else if instanceof IOException throw IOException else if instanceof RuntimeException throw RuntimeException else if instanceof Error throw Error else throw new RuntimeException final void merge MergePolicy OneMerge merge throws CorruptIndexException IOException boolean success false try try try mergeInit merge if infoStream null message merge segString directory merge segString mergeMiddle merge success true catch Throwable handleMergeException merge finally synchronized this try mergeFinish merge if success if infoStream null message if merge info null segmentInfos contains merge info deleter refresh merge info name if success merge isAborted closed closing updatePendingMerges merge maxNumSegmentsOptimize merge optimize finally runningMerges remove merge catch OutOfMemoryError oom hitOOM true throw oom final synchronized boolean registerMerge MergePolicy OneMerge merge throws MergePolicy MergeAbortedException if merge registerDone return true if stopMerges merge abort throw new MergePolicy MergeAbortedException merge segString directory final int count merge segments size boolean isExternal false for int count final SegmentInfo info merge segments info if mergingSegments contains info return false if segmentInfos indexOf info return false if info dir directory isExternal true ensureContiguousMerge merge pendingMerges add merge if infoStream null message merge segString directory pendingMerges size merge mergeGen mergeGen merge isExternal isExternal for int count mergingSegments add merge segments info merge registerDone true return true final synchronized void mergeInit MergePolicy OneMerge merge throws IOException boolean success false try merge success true finally if success mergeFinish merge runningMerges remove merge final synchronized private void MergePolicy OneMerge merge throws IOException assert testPoint assert merge registerDone assert merge optimize merge maxNumSegmentsOptimize if merge info null return if merge isAborted return boolean changed applyDeletes assert changed autoCommit final SegmentInfos sourceSegments merge segments final int end sourceSegments size Directory lastDir directory String lastDocStoreSegment null int next boolean mergeDocStores false boolean doFlushDocStore false final String currentDocStoreSegment docWriter getDocStoreSegment for int end SegmentInfo si sourceSegments info if si hasDeletions mergeDocStores true if si getDocStoreOffset mergeDocStores true String docStoreSegment si getDocStoreSegment if docStoreSegment null mergeDocStores true else if lastDocStoreSegment null lastDocStoreSegment docStoreSegment else if lastDocStoreSegment equals docStoreSegment mergeDocStores true if next next si getDocStoreOffset si docCount else if next si getDocStoreOffset mergeDocStores true else next si getDocStoreOffset si docCount if lastDir si dir mergeDocStores true if si getDocStoreOffset currentDocStoreSegment null si getDocStoreSegment equals currentDocStoreSegment doFlushDocStore true final int docStoreOffset final String docStoreSegment final boolean docStoreIsCompoundFile if mergeDocStores docStoreOffset docStoreSegment null docStoreIsCompoundFile false else SegmentInfo si sourceSegments info docStoreOffset si getDocStoreOffset docStoreSegment si getDocStoreSegment docStoreIsCompoundFile si getDocStoreIsCompoundFile if mergeDocStores doFlushDocStore if infoStream null message doFlush true false merge segmentsClone SegmentInfos merge segments clone for int end SegmentInfo si merge segmentsClone info if si dir directory deleter incRef si files merge increfDone true merge mergeDocStores mergeDocStores merge info new SegmentInfo newSegmentName directory false true docStoreOffset docStoreSegment docStoreIsCompoundFile false mergingSegments add merge info private synchronized boolean doCommitBeforeMergeCFS MergePolicy OneMerge merge throws IOException long freeableBytes final int size merge segments size for int size final SegmentInfo info merge segments info Integer loc Integer rollbackSegments get info if loc null final SegmentInfo oldInfo rollbackSegmentInfos info loc intValue if oldInfo getUseCompoundFile info getUseCompoundFile freeableBytes info sizeInBytes long totalBytes final int numSegments segmentInfos size for int numSegments totalBytes segmentInfos info sizeInBytes if freeableBytes totalBytes return true else return false final synchronized void mergeFinish MergePolicy OneMerge merge throws IOException notifyAll if merge increfDone decrefMergeSegments merge assert merge registerDone final SegmentInfos sourceSegments merge segments final int end sourceSegments size for int end mergingSegments remove sourceSegments info mergingSegments remove merge info merge registerDone false final private int mergeMiddle MergePolicy OneMerge merge throws CorruptIndexException IOException merge checkAborted directory final String mergedName merge info name SegmentMerger merger null int mergedDocCount SegmentInfos sourceSegments merge segments SegmentInfos sourceSegmentsClone merge segmentsClone final int numSegments sourceSegments size if infoStream null message merge segString directory merger new SegmentMerger this mergedName merge boolean success false try int totDocCount for int numSegments SegmentInfo si sourceSegmentsClone info merger add reader totDocCount reader numDocs if infoStream null message totDocCount merge checkAborted directory mergedDocCount merge info docCount merger merge merge mergeDocStores assert mergedDocCount totDocCount success true finally if merger null merger closeReaders if commitMerge merge merger mergedDocCount return if merge useCompoundFile if autoCommit doCommitBeforeMergeCFS merge final long size synchronized this size merge info sizeInBytes commit size success false final String compoundFileName mergedName IndexFileNames COMPOUND_FILE_EXTENSION try merger createCompoundFile compoundFileName success true catch IOException ioe synchronized this if merge isAborted success true else handleMergeException ioe merge catch Throwable handleMergeException merge finally if success if infoStream null message synchronized this deleter deleteFile compoundFileName if merge isAborted if infoStream null message deleter deleteFile compoundFileName return synchronized this if segmentInfos indexOf merge info merge isAborted deleter deleteFile compoundFileName else merge info setUseCompoundFile true checkpoint if autoCommit final long size synchronized this size merge info sizeInBytes commit size return mergedDocCount synchronized void addMergeException MergePolicy OneMerge merge assert merge getException null if mergeExceptions contains merge mergeGen merge mergeGen mergeExceptions add merge private final synchronized boolean applyDeletes throws CorruptIndexException IOException assert testPoint SegmentInfos rollback SegmentInfos segmentInfos clone boolean success false boolean changed try changed docWriter applyDeletes segmentInfos success true finally if success if infoStream null message final int size rollback size for int size final String newDelFileName segmentInfos info getDelFileName final String delFileName rollback info getDelFileName if newDelFileName null newDelFileName equals delFileName deleter deleteFile newDelFileName segmentInfos clear segmentInfos addAll rollback if changed checkpoint return changed final synchronized int getBufferedDeleteTermsSize return docWriter getBufferedDeleteTerms size final synchronized int getNumBufferedDeleteTerms return docWriter getNumBufferedDeleteTerms SegmentInfo newestSegment return segmentInfos info segmentInfos size public synchronized String segString return segString segmentInfos private synchronized String segString SegmentInfos infos StringBuffer buffer new StringBuffer final int count infos size for int count if buffer append final SegmentInfo info infos info buffer append info segString directory if info dir directory buffer append return buffer toString private HashSet synced new HashSet private HashSet syncing new HashSet private boolean startSync String fileName Collection pending synchronized synced if synced contains fileName if syncing contains fileName syncing add fileName return true else pending add fileName return false else return false private void finishSync String fileName boolean success synchronized synced assert syncing contains fileName syncing remove fileName if success synced add fileName synced notifyAll private boolean waitForAllSynced Collection syncing throws IOException synchronized synced Iterator it syncing iterator while it hasNext final String fileName String it next while synced contains fileName if syncing contains fileName return false else try synced wait catch InterruptedException ie continue return true private void syncPause long sizeInBytes if mergeScheduler instanceof ConcurrentMergeScheduler maxSyncPauseSeconds long pauseTime long sizeInBytes final long maxPauseTime long maxSyncPauseSeconds if pauseTime maxPauseTime pauseTime maxPauseTime final int sleepCount int pauseTime for int sleepCount synchronized this if stopMerges closing break try Thread sleep catch InterruptedException ie Thread currentThread interrupt private synchronized void doWait try wait catch InterruptedException ie Thread currentThread interrupt private void startCommit long sizeInBytes throws IOException assert testPoint if hitOOM return try if infoStream null message sizeInBytes if sizeInBytes syncPause sizeInBytes SegmentInfos toSync null final long myChangeCount synchronized this if sizeInBytes stopMerges return blockAddIndexes false assert hasExternalSegments try assert lastCommitChangeCount changeCount if changeCount lastCommitChangeCount if infoStream null message return if infoStream null message segString segmentInfos changeCount toSync SegmentInfos segmentInfos clone deleter incRef toSync false myChangeCount changeCount finally resumeAddIndexes assert testPoint boolean setPending false try while true final Collection pending new ArrayList for int toSync size final SegmentInfo info toSync info final List files info files for int files size final String fileName String files get if startSync fileName pending boolean success false try assert directory fileExists fileName fileName directory message fileName directory sync fileName success true finally finishSync fileName success if waitForAllSynced pending break assert testPoint synchronized this if myChangeCount lastCommitChangeCount pendingCommit null myChangeCount pendingCommitChangeCount while pendingCommit null message doWait if segmentInfos getGeneration toSync getGeneration toSync updateGeneration segmentInfos boolean success false try try toSync prepareCommit directory finally segmentInfos updateGeneration toSync assert pendingCommit null setPending true pendingCommit toSync pendingCommitChangeCount myChangeCount success true finally if success message else message message assert testPoint finally synchronized this if setPending deleter decRef toSync catch OutOfMemoryError oom hitOOM true throw oom assert testPoint public static boolean isLocked Directory directory throws IOException return directory makeLock WRITE_LOCK_NAME isLocked public static boolean isLocked String directory throws IOException Directory dir FSDirectory getDirectory directory try return isLocked dir finally dir close public static void unlock Directory directory throws IOException directory makeLock IndexWriter WRITE_LOCK_NAME release public static final class MaxFieldLength private int limit private String name private MaxFieldLength String name int limit this name name this limit limit public MaxFieldLength int limit this limit public int getLimit return limit public String toString return name limit public static final MaxFieldLength UNLIMITED new MaxFieldLength Integer MAX_VALUE public static final MaxFieldLength LIMITED new MaxFieldLength DEFAULT_MAX_FIELD_LENGTH boolean testPoint String name return true public class ConstantScoreRangeQuery extends Query private final String fieldName private final String lowerVal private final String upperVal private final boolean includeLower private final boolean includeUpper private Collator collator public ConstantScoreRangeQuery String fieldName String lowerVal String upperVal boolean includeLower boolean includeUpper if lowerVal null includeLower true else if includeLower lowerVal equals lowerVal null if upperVal null includeUpper true this lowerVal lowerVal this upperVal upperVal this includeLower includeLower this includeUpper includeUpper public ConstantScoreRangeQuery String fieldName String lowerVal String upperVal boolean includeLower boolean includeUpper Collator collator this fieldName lowerVal upperVal includeLower includeUpper this collator collator public String getField return fieldName public String getLowerVal return lowerVal public String getUpperVal return upperVal public boolean includesLower return includeLower public boolean includesUpper return includeUpper public Query rewrite IndexReader reader throws IOException RangeFilter rangeFilt new RangeFilter fieldName lowerVal null lowerVal upperVal lowerVal false includeLower upperVal null false includeUpper collator Query new ConstantScoreQuery rangeFilt setBoost getBoost return public String toString String field StringBuffer buffer new StringBuffer if getField equals field buffer append getField buffer append buffer append includeLower buffer append lowerVal null lowerVal buffer append buffer append upperVal null upperVal buffer append includeUpper if getBoost buffer append buffer append Float toString getBoost return buffer toString public boolean equals Object if this return true if instanceof ConstantScoreRangeQuery return false ConstantScoreRangeQuery other ConstantScoreRangeQuery this includeLower other includeLower this includeUpper other includeUpper this collator null this collator equals other collator return false if this lowerVal null this lowerVal equals other lowerVal other lowerVal null return false if this upperVal null this upperVal equals other upperVal other upperVal null return false return this getBoost other getBoost public int hashCode int Float floatToIntBits getBoost fieldName hashCode lowerVal null lowerVal hashCode upperVal null upperVal hashCode includeLower includeUpper collator null collator hashCode return public final class WhitespaceAnalyzer extends Analyzer public TokenStream tokenStream String fieldName Reader reader return new WhitespaceTokenizer reader public TokenStream reusableTokenStream String fieldName Reader reader throws IOException Tokenizer tokenizer Tokenizer getPreviousTokenStream if tokenizer null tokenizer new WhitespaceTokenizer reader setPreviousTokenStream tokenizer else tokenizer reset reader return tokenizer public final class ArrayUtil public static int getNextSize int targetSize return targetSize targetSize targetSize public static int getShrinkSize int currentSize int targetSize final int newSize getNextSize targetSize if newSize currentSize return newSize else return currentSize public static int grow int array int minSize if array length minSize int newArray new int getNextSize minSize System arraycopy array newArray array length return newArray else return array public static int grow int array return grow array array length public static int shrink int array int targetSize final int newSize getShrinkSize array length targetSize if newSize array length int newArray new int newSize System arraycopy array newArray newSize return newArray else return array public static long grow long array int minSize if array length minSize long newArray new long getNextSize minSize System arraycopy array newArray array length return newArray else return array public static long grow long array return grow array array length public static long shrink long array int targetSize final int newSize getShrinkSize array length targetSize if newSize array length long newArray new long newSize System arraycopy array newArray newSize return newArray else return array public static byte grow byte array int minSize if array length minSize byte newArray new byte getNextSize minSize System arraycopy array newArray array length return newArray else return array public static byte grow byte array return grow array array length public static byte shrink byte array int targetSize final int newSize getShrinkSize array length targetSize if newSize array length byte newArray new byte newSize System arraycopy array newArray newSize return newArray else return array public static int hashCode char array int start int end int code for int end start code code array return code public static int hashCode byte array int start int end int code for int end start code code array return code abstract class MultiLevelSkipListReader private int maxNumberOfSkipLevels private int numberOfSkipLevels private int numberOfLevelsToBuffer private int docCount private boolean haveSkipped private boolean inputIsBuffered public MultiLevelSkipListReader IndexInput skipStream int maxSkipLevels int skipInterval this skipStream new IndexInput maxSkipLevels this skipPointer new long maxSkipLevels this childPointer new long maxSkipLevels this numSkipped new int maxSkipLevels this maxNumberOfSkipLevels maxSkipLevels this skipInterval new int maxSkipLevels this skipStream skipStream this inputIsBuffered skipStream instanceof BufferedIndexInput this skipInterval skipInterval for int maxSkipLevels this skipInterval this skipInterval skipInterval skipDoc new int maxSkipLevels int getDoc return lastDoc int skipTo int target throws IOException if haveSkipped loadSkipLevels haveSkipped true int level while level numberOfSkipLevels target skipDoc level level while level if target skipDoc level if loadNextSkip level continue else if level lastChildPointer skipStream level getFilePointer seekChild level level return numSkipped skipInterval private boolean loadNextSkip int level throws IOException setLastSkipData level numSkipped level skipInterval level if numSkipped level docCount skipDoc level Integer MAX_VALUE if numberOfSkipLevels level numberOfSkipLevels level return false skipDoc level readSkipData level skipStream level if level childPointer level skipStream level readVLong skipPointer level return true protected void seekChild int level throws IOException skipStream level seek lastChildPointer numSkipped level numSkipped level skipInterval level skipDoc level lastDoc if level childPointer level skipStream level readVLong skipPointer level void close throws IOException for int skipStream length if skipStream null skipStream close void init long skipPointer int df this skipPointer skipPointer this docCount df Arrays fill skipDoc Arrays fill numSkipped Arrays fill childPointer haveSkipped false for int numberOfSkipLevels skipStream null private void loadSkipLevels throws IOException numberOfSkipLevels docCount int Math floor Math log docCount Math log skipInterval if numberOfSkipLevels maxNumberOfSkipLevels numberOfSkipLevels maxNumberOfSkipLevels skipStream seek skipPointer int toBuffer numberOfLevelsToBuffer for int numberOfSkipLevels long length skipStream readVLong skipPointer skipStream getFilePointer if toBuffer skipStream new SkipBuffer skipStream int length toBuffer else skipStream IndexInput skipStream clone if inputIsBuffered length BufferedIndexInput BUFFER_SIZE BufferedIndexInput skipStream setBufferSize int length skipStream seek skipStream getFilePointer length skipPointer skipStream getFilePointer protected abstract int readSkipData int level IndexInput skipStream throws IOException protected void setLastSkipData int level lastDoc skipDoc level lastChildPointer childPointer level private final static class SkipBuffer extends IndexInput private byte data private long pointer private int pos SkipBuffer IndexInput input int length throws IOException data new byte length pointer input getFilePointer input readBytes data length public void close throws IOException data null public long getFilePointer return pointer pos public long length return data length public byte readByte throws IOException return data pos public void readBytes byte int offset int len throws IOException System arraycopy data pos offset len pos len public void seek long pos throws IOException this pos int pos pointer public class RAMDirectory extends Directory implements Serializable private static final long serialVersionUID HashMap fileMap new HashMap long sizeInBytes public RAMDirectory setLockFactory new SingleInstanceLockFactory public RAMDirectory Directory dir throws IOException this dir false private RAMDirectory Directory dir boolean closeDir throws IOException this Directory copy dir this closeDir public RAMDirectory File dir throws IOException this FSDirectory getDirectory dir true public RAMDirectory String dir throws IOException this FSDirectory getDirectory dir true public synchronized final String list ensureOpen Set fileNames fileMap keySet String result new String fileNames size int Iterator it fileNames iterator while it hasNext result String it next return result public final boolean fileExists String name ensureOpen RAMFile file synchronized this file RAMFile fileMap get name return file null public final long fileModified String name throws IOException ensureOpen RAMFile file synchronized this file RAMFile fileMap get name if file null throw new FileNotFoundException name return file getLastModified public void touchFile String name throws IOException ensureOpen RAMFile file synchronized this file RAMFile fileMap get name if file null throw new FileNotFoundException name long ts2 ts1 System currentTimeMillis do try Thread sleep catch InterruptedException ts2 System currentTimeMillis while ts1 ts2 file setLastModified ts2 public final long fileLength String name throws IOException ensureOpen RAMFile file synchronized this file RAMFile fileMap get name if file null throw new FileNotFoundException name return file getLength public synchronized final long sizeInBytes ensureOpen return sizeInBytes public synchronized void deleteFile String name throws IOException ensureOpen RAMFile file RAMFile fileMap get name if file null fileMap remove name file directory null else throw new FileNotFoundException name public synchronized final void renameFile String from String to throws IOException ensureOpen RAMFile fromFile RAMFile fileMap get from if fromFile null throw new FileNotFoundException from RAMFile toFile RAMFile fileMap get to if toFile null toFile directory null fileMap remove from fileMap put to fromFile public IndexOutput createOutput String name throws IOException ensureOpen RAMFile file new RAMFile this synchronized this RAMFile existing RAMFile fileMap get name if existing null sizeInBytes existing sizeInBytes existing directory null fileMap put name file return new RAMOutputStream file public IndexInput openInput String name throws IOException ensureOpen RAMFile file synchronized this file RAMFile fileMap get name if file null throw new FileNotFoundException name return new RAMInputStream file public void close isOpen false fileMap null final class DocFieldProcessorPerThread extends DocConsumerPerThread float docBoost int fieldGen final DocFieldProcessor docFieldProcessor final FieldInfos fieldInfos final DocFieldConsumerPerThread consumer DocFieldProcessorPerField fields new DocFieldProcessorPerField int fieldCount DocFieldProcessorPerField fieldHash new DocFieldProcessorPerField int hashMask int totalFieldCount final DocumentsWriter DocState docState public DocFieldProcessorPerThread DocumentsWriterThreadState threadState DocFieldProcessor docFieldProcessor throws IOException this docState threadState docState this docFieldProcessor docFieldProcessor this fieldInfos docFieldProcessor fieldInfos this consumer docFieldProcessor consumer addThread this public void abort for int fieldHash length DocFieldProcessorPerField field fieldHash while field null final DocFieldProcessorPerField next field next field abort field next consumer abort public Collection fields Collection fields new HashSet for int fieldHash length DocFieldProcessorPerField field fieldHash while field null fields add field consumer field field next assert fields size totalFieldCount return fields void trimFields DocumentsWriter FlushState state for int fieldHash length DocFieldProcessorPerField perField fieldHash DocFieldProcessorPerField lastPerField null while perField null if perField lastGen if lastPerField null fieldHash perField next else lastPerField next perField next if state docWriter infoStream null state docWriter infoStream println perField fieldInfo name totalFieldCount else perField lastGen lastPerField perField perField perField next private void rehash final int newHashSize int fieldHash length assert newHashSize fieldHash length final DocFieldProcessorPerField newHashArray new DocFieldProcessorPerField newHashSize int newHashMask newHashSize for int fieldHash length DocFieldProcessorPerField fp0 fieldHash while fp0 null final int hashPos2 fp0 fieldInfo name hashCode newHashMask DocFieldProcessorPerField nextFP0 fp0 next fp0 next newHashArray hashPos2 newHashArray hashPos2 fp0 fp0 nextFP0 fieldHash newHashArray hashMask newHashMask public DocumentsWriter DocWriter processDocument throws IOException consumer startDocument final Document doc docState doc assert docFieldProcessor docWriter writer testPoint fieldCount final int thisFieldGen fieldGen final List docFields doc getFields final int numDocFields docFields size for int numDocFields Fieldable field Fieldable docFields get final String fieldName field name final int hashPos fieldName hashCode hashMask DocFieldProcessorPerField fp fieldHash hashPos while fp null fp fieldInfo name equals fieldName fp fp next if fp null FieldInfo fi fieldInfos add fieldName field isIndexed field isTermVectorStored field isStorePositionWithTermVector field isStoreOffsetWithTermVector field getOmitNorms false field getOmitTf fp new DocFieldProcessorPerField this fi fp next fieldHash hashPos fieldHash hashPos fp totalFieldCount if totalFieldCount fieldHash length rehash else fp fieldInfo update field isIndexed field isTermVectorStored field isStorePositionWithTermVector field isStoreOffsetWithTermVector field getOmitNorms false field getOmitTf if thisFieldGen fp lastGen fp fieldCount if fieldCount fields length final int newSize fields length DocFieldProcessorPerField newArray new DocFieldProcessorPerField newSize System arraycopy fields newArray fieldCount fields newArray fields fieldCount fp fp lastGen thisFieldGen if fp fieldCount fp fields length Fieldable newArray new Fieldable fp fields length System arraycopy fp fields newArray fp fieldCount fp fields newArray fp fields fp fieldCount field quickSort fields fieldCount for int fieldCount fields consumer processFields fields fields fields fieldCount if docState maxTermPrefix null docState infoStream null docState infoStream println DocumentsWriter MAX_TERM_LENGTH docState maxTermPrefix return consumer finishDocument void quickSort DocFieldProcessorPerField array int lo int hi if lo hi return else if hi lo if array lo fieldInfo name compareTo array hi fieldInfo name final DocFieldProcessorPerField tmp array lo array lo array hi array hi tmp return int mid lo hi if array lo fieldInfo name compareTo array mid fieldInfo name DocFieldProcessorPerField tmp array lo array lo array mid array mid tmp if array mid fieldInfo name compareTo array hi fieldInfo name DocFieldProcessorPerField tmp array mid array mid array hi array hi tmp if array lo fieldInfo name compareTo array mid fieldInfo name DocFieldProcessorPerField tmp2 array lo array lo array mid array mid tmp2 int left lo int right hi if left right return DocFieldProcessorPerField partition array mid for while array right fieldInfo name compareTo partition fieldInfo name right while left right array left fieldInfo name compareTo partition fieldInfo name left if left right DocFieldProcessorPerField tmp array left array left array right array right tmp right else break quickSort array lo left quickSort array left hi abstract class TermsHashConsumer abstract int bytesPerPosting abstract void createPostings RawPostingList postings int start int count abstract TermsHashConsumerPerThread addThread TermsHashPerThread perThread abstract void flush Map threadsAndFields final DocumentsWriter FlushState state throws IOException abstract void abort abstract void closeDocStore DocumentsWriter FlushState state throws IOException FieldInfos fieldInfos void setFieldInfos FieldInfos fieldInfos this fieldInfos fieldInfos public abstract class SpanQuery extends Query public abstract Spans getSpans IndexReader reader throws IOException public PayloadSpans getPayloadSpans IndexReader reader throws IOException return null public abstract String getField public abstract Collection getTerms protected Weight createWeight Searcher searcher throws IOException return new SpanWeight this searcher public abstract class FilteredTermEnum extends TermEnum private Term currentTerm null private TermEnum actualEnum null public FilteredTermEnum protected abstract boolean termCompare Term term public abstract float difference protected abstract boolean endEnum protected void setEnum TermEnum actualEnum throws IOException this actualEnum actualEnum Term term actualEnum term if term null termCompare term currentTerm term else next public int docFreq if actualEnum null return return actualEnum docFreq public boolean next throws IOException currentTerm null while currentTerm null if endEnum return false if actualEnum next Term term actualEnum term if termCompare term currentTerm term return true else return false currentTerm null return false public Term term return currentTerm public void close throws IOException actualEnum close currentTerm null actualEnum null class MultiSegmentReader extends DirectoryIndexReader protected SegmentReader subReaders private Map normsCache new HashMap private int maxDoc private int numDocs private boolean hasDeletions false MultiSegmentReader Directory directory SegmentInfos sis boolean closeDirectory boolean readOnly throws IOException super directory sis closeDirectory readOnly SegmentReader readers new SegmentReader sis size for int sis size try readers SegmentReader get readOnly sis info catch IOException for sis size try readers close catch IOException ignore throw initialize readers MultiSegmentReader Directory directory SegmentInfos infos boolean closeDirectory SegmentReader oldReaders int oldStarts Map oldNormsCache boolean readOnly throws IOException super directory infos closeDirectory readOnly Map segmentReaders new HashMap if oldReaders null for int oldReaders length segmentReaders put oldReaders getSegmentName new Integer SegmentReader newReaders new SegmentReader infos size boolean readerShared new boolean infos size for int infos size Integer oldReaderIndex Integer segmentReaders get infos info name if oldReaderIndex null newReaders null else newReaders oldReaders oldReaderIndex intValue boolean success false try SegmentReader newReader if newReaders null infos info getUseCompoundFile newReaders getSegmentInfo getUseCompoundFile newReader SegmentReader get readOnly infos info else newReader SegmentReader newReaders reopenSegment infos info if newReader newReaders readerShared true newReader incRef else readerShared false newReaders newReader success true finally if success for infos size if newReaders null try if readerShared newReaders close else newReaders decRef catch IOException ignore initialize newReaders if oldNormsCache null Iterator it oldNormsCache entrySet iterator while it hasNext Map Entry entry Map Entry it next String field String entry getKey if hasNorms field continue byte oldBytes byte entry getValue byte bytes new byte maxDoc for int subReaders length Integer oldReaderIndex Integer segmentReaders get subReaders getSegmentName if oldReaderIndex null oldReaders oldReaderIndex intValue subReaders oldReaders oldReaderIndex intValue norms get field subReaders norms get field System arraycopy oldBytes oldStarts oldReaderIndex intValue bytes starts starts starts else subReaders norms field bytes starts private void initialize SegmentReader subReaders this subReaders subReaders for int subReaders length starts maxDoc if subReaders hasDeletions hasDeletions true starts subReaders length maxDoc protected synchronized DirectoryIndexReader doReopen SegmentInfos infos throws CorruptIndexException IOException if infos size return SegmentReader get readOnly infos infos info false else if readOnly return new ReadOnlyMultiSegmentReader directory infos closeDirectory subReaders starts normsCache else return new MultiSegmentReader directory infos closeDirectory subReaders starts normsCache false public TermFreqVector getTermFreqVectors int throws IOException ensureOpen public TermFreqVector getTermFreqVector int String field throws IOException ensureOpen return subReaders getTermFreqVector starts field public void getTermFreqVector int docNumber String field TermVectorMapper mapper throws IOException ensureOpen subReaders getTermFreqVector docNumber starts field mapper public void getTermFreqVector int docNumber TermVectorMapper mapper throws IOException ensureOpen subReaders getTermFreqVector docNumber starts mapper public boolean isOptimized return false public synchronized int numDocs for int subReaders length numDocs return numDocs public int maxDoc return maxDoc public Document document int FieldSelector fieldSelector throws CorruptIndexException IOException ensureOpen public boolean isDeleted int public boolean hasDeletions return hasDeletions protected void doDelete int throws CorruptIndexException IOException hasDeletions true protected void doUndeleteAll throws CorruptIndexException IOException for int subReaders length subReaders undeleteAll hasDeletions false return readerIndex this starts this subReaders length while hi lo int mid lo hi int midValue starts mid if midValue hi mid else if midValue lo mid while mid numSubReaders starts mid midValue return mid return hi public boolean hasNorms String field throws IOException ensureOpen for int subReaders length if subReaders hasNorms field return true return false private byte ones private byte fakeNorms if ones null ones SegmentReader createFakeNorms maxDoc return ones public synchronized byte norms String field throws IOException ensureOpen byte bytes byte normsCache get field if bytes null if hasNorms field return fakeNorms bytes new byte maxDoc for int subReaders length subReaders norms field bytes starts return bytes public synchronized void norms String field byte result int offset throws IOException ensureOpen byte bytes byte normsCache get field if bytes null hasNorms field bytes fakeNorms System arraycopy bytes result offset maxDoc subReaders norms field result offset starts protected void doSetNorm int String field byte value throws CorruptIndexException IOException synchronized normsCache public TermEnum terms throws IOException ensureOpen return new MultiTermEnum subReaders starts null public TermEnum terms Term term throws IOException ensureOpen return new MultiTermEnum subReaders starts term public int docFreq Term throws IOException ensureOpen for int subReaders length total subReaders docFreq return total public TermDocs termDocs throws IOException ensureOpen return new MultiTermDocs subReaders starts public TermPositions termPositions throws IOException ensureOpen return new MultiTermPositions subReaders starts protected void commitChanges throws IOException for int subReaders length subReaders commit void startCommit super startCommit for int subReaders length subReaders startCommit void rollbackCommit super rollbackCommit for int subReaders length subReaders rollbackCommit protected synchronized void doClose throws IOException for int subReaders length subReaders decRef super doClose public Collection getFieldNames IndexReader FieldOption fieldNames ensureOpen return getFieldNames fieldNames this subReaders static Collection getFieldNames IndexReader FieldOption fieldNames IndexReader subReaders Set fieldSet new HashSet for int subReaders length IndexReader reader subReaders Collection names reader getFieldNames fieldNames fieldSet addAll names return fieldSet SegmentReader getSubReaders return subReaders public void setTermInfosIndexDivisor int indexDivisor throws IllegalStateException for int subReaders length subReaders setTermInfosIndexDivisor indexDivisor public int getTermInfosIndexDivisor throws IllegalStateException if subReaders length return subReaders getTermInfosIndexDivisor else throw new IllegalStateException static class MultiTermEnum extends TermEnum private SegmentMergeQueue queue private Term term private int docFreq public MultiTermEnum IndexReader readers int starts Term throws IOException queue new SegmentMergeQueue readers length for int readers length IndexReader reader readers TermEnum termEnum if null termEnum reader terms else termEnum reader terms SegmentMergeInfo smi new SegmentMergeInfo starts termEnum reader if null smi next termEnum term null else smi close if null queue size next public boolean next throws IOException SegmentMergeInfo top SegmentMergeInfo queue top if top null term null return false term top term docFreq while top null term compareTo top term queue pop if top next else top SegmentMergeInfo queue top return true public Term term return term public int docFreq return docFreq public void close throws IOException queue close static class MultiTermDocs implements TermDocs protected IndexReader readers protected int starts protected Term term protected int base protected int pointer private TermDocs readerTermDocs public MultiTermDocs IndexReader int readers starts readerTermDocs new TermDocs length public int doc return base current doc public int freq return current freq public void seek Term term this term term this base this pointer this current null public void seek TermEnum termEnum throws IOException seek termEnum term public boolean next throws IOException for if current null current next return true else if pointer readers length base starts pointer current termDocs pointer else return false public int read final int docs final int freqs throws IOException while true while current null base starts pointer current termDocs pointer else return int end current read docs freqs current null for int end docs return end public boolean skipTo int target throws IOException for if current null current skipTo target base return true else if pointer readers length base starts pointer current termDocs pointer else return false private TermDocs termDocs int throws IOException if term null return null TermDocs result readerTermDocs if result null result readerTermDocs termDocs readers result seek term return result protected TermDocs termDocs IndexReader reader throws IOException return reader termDocs public void close throws IOException for int readerTermDocs length if readerTermDocs null readerTermDocs close static class MultiTermPositions extends MultiTermDocs implements TermPositions public MultiTermPositions IndexReader int super protected TermDocs termDocs IndexReader reader throws IOException return TermDocs reader termPositions public int nextPosition throws IOException return TermPositions current nextPosition public int getPayloadLength return TermPositions current getPayloadLength public byte getPayload byte data int offset throws IOException return TermPositions current getPayload data offset public boolean isPayloadAvailable return TermPositions current isPayloadAvailable public class QueryParser implements QueryParserConstants private static final int CONJ_NONE private static final int CONJ_AND private static final int CONJ_OR private static final int MOD_NONE private static final int MOD_NOT private static final int MOD_REQ public static final Operator AND_OPERATOR Operator AND public static final Operator OR_OPERATOR Operator OR private Operator operator OR_OPERATOR boolean lowercaseExpandedTerms true boolean useOldRangeQuery false boolean allowLeadingWildcard false boolean enablePositionIncrements false Analyzer analyzer String field int phraseSlop float fuzzyMinSim FuzzyQuery defaultMinSimilarity int fuzzyPrefixLength FuzzyQuery defaultPrefixLength Locale locale Locale getDefault DateTools Resolution dateResolution null Map fieldToDateResolution null Collator rangeCollator null static public final class Operator extends Parameter private Operator String name super name static public final Operator OR new Operator static public final Operator AND new Operator public QueryParser String Analyzer this new FastCharStream new StringReader analyzer field public Query parse String query throws ParseException ReInit new FastCharStream new StringReader query try Query res TopLevelQuery field return res null res newBooleanQuery false catch ParseException tme throw new ParseException query tme getMessage catch TokenMgrError tme throw new ParseException query tme getMessage catch BooleanQuery TooManyClauses tmc throw new ParseException query public Analyzer getAnalyzer return analyzer public String getField return field public float getFuzzyMinSim return fuzzyMinSim public void setFuzzyMinSim float fuzzyMinSim this fuzzyMinSim fuzzyMinSim public int getFuzzyPrefixLength return fuzzyPrefixLength public void setFuzzyPrefixLength int fuzzyPrefixLength this fuzzyPrefixLength fuzzyPrefixLength public void setPhraseSlop int phraseSlop this phraseSlop phraseSlop public int getPhraseSlop return phraseSlop public void setAllowLeadingWildcard boolean allowLeadingWildcard this allowLeadingWildcard allowLeadingWildcard public boolean getAllowLeadingWildcard return allowLeadingWildcard public void setEnablePositionIncrements boolean enable this enablePositionIncrements enable public boolean getEnablePositionIncrements return enablePositionIncrements public void setDefaultOperator Operator op this operator op public Operator getDefaultOperator return operator public void setLowercaseExpandedTerms boolean lowercaseExpandedTerms this lowercaseExpandedTerms lowercaseExpandedTerms public boolean getLowercaseExpandedTerms return lowercaseExpandedTerms public void setUseOldRangeQuery boolean useOldRangeQuery this useOldRangeQuery useOldRangeQuery public boolean getUseOldRangeQuery return useOldRangeQuery public void setLocale Locale locale this locale locale public Locale getLocale return locale public void setDateResolution DateTools Resolution dateResolution this dateResolution dateResolution public void setDateResolution String fieldName DateTools Resolution dateResolution if fieldName null throw new IllegalArgumentException if fieldToDateResolution null fieldToDateResolution new HashMap fieldToDateResolution put fieldName dateResolution public DateTools Resolution getDateResolution String fieldName if fieldName null throw new IllegalArgumentException if fieldToDateResolution null return this dateResolution DateTools Resolution resolution DateTools Resolution fieldToDateResolution get fieldName if resolution null resolution this dateResolution return resolution public void setRangeCollator Collator rc rangeCollator rc public Collator getRangeCollator return rangeCollator protected void addClause Vector clauses int conj int mods Query addClause List clauses conj mods protected void addClause List clauses int conj int mods Query boolean required prohibited if clauses size conj CONJ_AND BooleanClause BooleanClause clauses get clauses size if isProhibited setOccur BooleanClause Occur MUST if clauses size operator AND_OPERATOR conj CONJ_OR BooleanClause BooleanClause clauses get clauses size if isProhibited setOccur BooleanClause Occur SHOULD if null return if operator OR_OPERATOR prohibited mods MOD_NOT required mods MOD_REQ if conj CONJ_AND prohibited required true else prohibited mods MOD_NOT required prohibited conj CONJ_OR if required prohibited clauses add newBooleanClause BooleanClause Occur MUST else if required prohibited clauses add newBooleanClause BooleanClause Occur SHOULD else if required prohibited clauses add newBooleanClause BooleanClause Occur MUST_NOT else throw new RuntimeException protected Query getFieldQuery String field String queryText throws ParseException TokenStream source analyzer tokenStream field new StringReader queryText List list new ArrayList final org apache lucene analysis Token reusableToken new org apache lucene analysis Token org apache lucene analysis Token nextToken int positionCount boolean severalTokensAtSamePosition false while true try nextToken source next reusableToken catch IOException nextToken null if nextToken null break list add nextToken clone if nextToken getPositionIncrement positionCount nextToken getPositionIncrement else severalTokensAtSamePosition true try source close catch IOException if list size return null else if list size nextToken org apache lucene analysis Token list get return newTermQuery new Term field nextToken term else if severalTokensAtSamePosition if positionCount BooleanQuery newBooleanQuery true for int list size nextToken org apache lucene analysis Token list get Query currentQuery newTermQuery new Term field nextToken term add currentQuery BooleanClause Occur SHOULD return else MultiPhraseQuery mpq newMultiPhraseQuery mpq setSlop phraseSlop List multiTerms new ArrayList int position for int list size nextToken org apache lucene analysis Token list get if nextToken getPositionIncrement multiTerms size if enablePositionIncrements mpq add Term multiTerms toArray new Term position else mpq add Term multiTerms toArray new Term multiTerms clear position nextToken getPositionIncrement multiTerms add new Term field nextToken term if enablePositionIncrements mpq add Term multiTerms toArray new Term position else mpq add Term multiTerms toArray new Term return mpq else PhraseQuery pq newPhraseQuery pq setSlop phraseSlop int position for int list size nextToken org apache lucene analysis Token list get if enablePositionIncrements position nextToken getPositionIncrement pq add new Term field nextToken term position else pq add new Term field nextToken term return pq protected Query getFieldQuery String field String queryText int slop throws ParseException Query query getFieldQuery field queryText if query instanceof PhraseQuery PhraseQuery query setSlop slop if query instanceof MultiPhraseQuery MultiPhraseQuery query setSlop slop return query protected Query getRangeQuery String field String part1 String part2 boolean inclusive throws ParseException if lowercaseExpandedTerms part1 part1 toLowerCase part2 part2 toLowerCase try DateFormat df DateFormat getDateInstance DateFormat SHORT locale df setLenient true Date d1 df parse part1 Date d2 df parse part2 if inclusive Calendar cal Calendar getInstance locale cal setTime d2 cal set Calendar HOUR_OF_DAY cal set Calendar MINUTE cal set Calendar SECOND cal set Calendar MILLISECOND d2 cal getTime DateTools Resolution resolution getDateResolution field if resolution null part1 DateField dateToString d1 part2 DateField dateToString d2 else part1 DateTools dateToString d1 resolution part2 DateTools dateToString d2 resolution catch Exception return newRangeQuery field part1 part2 inclusive protected BooleanQuery newBooleanQuery boolean disableCoord return new BooleanQuery disableCoord protected BooleanClause newBooleanClause Query BooleanClause Occur occur return new BooleanClause occur protected Query newTermQuery Term term return new TermQuery term protected PhraseQuery newPhraseQuery return new PhraseQuery protected MultiPhraseQuery newMultiPhraseQuery return new MultiPhraseQuery protected Query newPrefixQuery Term prefix return new PrefixQuery prefix protected Query newFuzzyQuery Term term float minimumSimilarity int prefixLength return new FuzzyQuery term minimumSimilarity prefixLength protected Query newRangeQuery String field String part1 String part2 boolean inclusive if useOldRangeQuery return new RangeQuery new Term field part1 new Term field part2 inclusive rangeCollator else return new ConstantScoreRangeQuery field part1 part2 inclusive inclusive rangeCollator protected Query newMatchAllDocsQuery return new MatchAllDocsQuery protected Query newWildcardQuery Term return new WildcardQuery protected Query getBooleanQuery Vector clauses throws ParseException return getBooleanQuery List clauses false protected Query getBooleanQuery List clauses throws ParseException return getBooleanQuery clauses false protected Query getBooleanQuery Vector clauses boolean disableCoord throws ParseException return getBooleanQuery List clauses disableCoord protected Query getBooleanQuery List clauses boolean disableCoord throws ParseException if clauses size BooleanQuery query newBooleanQuery disableCoord for int clauses size query add BooleanClause clauses get return query protected Query getWildcardQuery String field String termStr throws ParseException if equals field if equals termStr return newMatchAllDocsQuery if allowLeadingWildcard termStr startsWith termStr startsWith throw new ParseException if lowercaseExpandedTerms termStr termStr toLowerCase Term new Term field termStr return newWildcardQuery protected Query getPrefixQuery String field String termStr throws ParseException if allowLeadingWildcard termStr startsWith throw new ParseException if lowercaseExpandedTerms termStr termStr toLowerCase Term new Term field termStr return newPrefixQuery protected Query getFuzzyQuery String field String termStr float minSimilarity throws ParseException if lowercaseExpandedTerms termStr termStr toLowerCase Term new Term field termStr return newFuzzyQuery minSimilarity fuzzyPrefixLength private String discardEscapeChar String input throws ParseException char output new char input length int length boolean lastCharWasEscapeChar false int codePointMultiplier int codePoint for int input length char curChar input charAt if codePointMultiplier codePoint hexToInt curChar codePointMultiplier codePointMultiplier if codePointMultiplier output length char codePoint codePoint else if lastCharWasEscapeChar if curChar codePointMultiplier else output length curChar length lastCharWasEscapeChar false else if curChar lastCharWasEscapeChar true else output length curChar length if codePointMultiplier throw new ParseException if lastCharWasEscapeChar throw new ParseException return new String output length private static final int hexToInt char throws ParseException if return else if return else if return else throw new ParseException public static String escape String StringBuffer sb new StringBuffer for int length char charAt if sb append sb append return sb toString public static void main String args throws Exception if args length System out println System exit QueryParser qp new QueryParser new org apache lucene analysis SimpleAnalyzer Query qp parse args System out println toString final public int Conjunction throws ParseException int ret CONJ_NONE switch jj_ntk jj_ntk jj_ntk case AND case OR switch jj_ntk jj_ntk jj_ntk case AND jj_consume_token AND ret CONJ_AND break case OR jj_consume_token OR ret CONJ_OR break default jj_la1 jj_gen jj_consume_token throw new ParseException break default jj_la1 jj_gen if true return ret throw new Error final public int Modifiers throws ParseException int ret MOD_NONE switch jj_ntk jj_ntk jj_ntk case NOT case PLUS case MINUS switch jj_ntk jj_ntk jj_ntk case PLUS jj_consume_token PLUS ret MOD_REQ break case MINUS jj_consume_token MINUS ret MOD_NOT break case NOT jj_consume_token NOT ret MOD_NOT break default jj_la1 jj_gen jj_consume_token throw new ParseException break default jj_la1 jj_gen if true return ret throw new Error final public Query TopLevelQuery String field throws ParseException Query Query field jj_consume_token if true return throw new Error final public Query Query String field throws ParseException List clauses new ArrayList Query firstQuery null int conj mods mods Modifiers Clause field addClause clauses CONJ_NONE mods if mods MOD_NONE firstQuery label_1 while true switch jj_ntk jj_ntk jj_ntk case AND case OR case NOT case PLUS case MINUS case LPAREN case STAR case QUOTED case TERM case PREFIXTERM case WILDTERM case RANGEIN_START case RANGEEX_START case NUMBER break default jj_la1 jj_gen break label_1 conj Conjunction mods Modifiers Clause field addClause clauses conj mods if clauses size firstQuery null if true return firstQuery else if true return getBooleanQuery clauses throw new Error final public Query Clause String field throws ParseException Query Token fieldToken null boost null if jj_2_1 switch jj_ntk jj_ntk jj_ntk case TERM fieldToken jj_consume_token TERM jj_consume_token COLON field discardEscapeChar fieldToken image break case STAR jj_consume_token STAR jj_consume_token COLON field break default jj_la1 jj_gen jj_consume_token throw new ParseException else switch jj_ntk jj_ntk jj_ntk case STAR case QUOTED case TERM case PREFIXTERM case WILDTERM case RANGEIN_START case RANGEEX_START case NUMBER Term field break case LPAREN jj_consume_token LPAREN Query field jj_consume_token RPAREN switch jj_ntk jj_ntk jj_ntk case CARAT jj_consume_token CARAT boost jj_consume_token NUMBER break default jj_la1 jj_gen break default jj_la1 jj_gen jj_consume_token throw new ParseException if boost null float float try Float valueOf boost image floatValue setBoost catch Exception ignored if true return throw new Error final public Query Term String field throws ParseException Token term boost null fuzzySlop null goop1 goop2 boolean prefix false boolean wildcard false boolean fuzzy false boolean rangein false Query switch jj_ntk jj_ntk jj_ntk case STAR case TERM case PREFIXTERM case WILDTERM case NUMBER switch jj_ntk jj_ntk jj_ntk case TERM term jj_consume_token TERM break case STAR term jj_consume_token STAR wildcard true break case PREFIXTERM term jj_consume_token PREFIXTERM prefix true break case WILDTERM term jj_consume_token WILDTERM wildcard true break case NUMBER term jj_consume_token NUMBER break default jj_la1 jj_gen jj_consume_token throw new ParseException switch jj_ntk jj_ntk jj_ntk case FUZZY_SLOP fuzzySlop jj_consume_token FUZZY_SLOP fuzzy true break default jj_la1 jj_gen switch jj_ntk jj_ntk jj_ntk case CARAT jj_consume_token CARAT boost jj_consume_token NUMBER switch jj_ntk jj_ntk jj_ntk case FUZZY_SLOP fuzzySlop jj_consume_token FUZZY_SLOP fuzzy true break default jj_la1 jj_gen break default jj_la1 jj_gen String termImage discardEscapeChar term image if wildcard getWildcardQuery field termImage else if prefix getPrefixQuery field discardEscapeChar term image substring term image length else if fuzzy float fms fuzzyMinSim try fms Float valueOf fuzzySlop image substring floatValue catch Exception ignored if fms fms if true throw new ParseException getFuzzyQuery field termImage fms else getFieldQuery field termImage break case RANGEIN_START jj_consume_token RANGEIN_START switch jj_ntk jj_ntk jj_ntk case RANGEIN_GOOP goop1 jj_consume_token RANGEIN_GOOP break case RANGEIN_QUOTED goop1 jj_consume_token RANGEIN_QUOTED break default jj_la1 jj_gen jj_consume_token throw new ParseException switch jj_ntk jj_ntk jj_ntk case RANGEIN_TO jj_consume_token RANGEIN_TO break default jj_la1 jj_gen switch jj_ntk jj_ntk jj_ntk case RANGEIN_GOOP goop2 jj_consume_token RANGEIN_GOOP break case RANGEIN_QUOTED goop2 jj_consume_token RANGEIN_QUOTED break default jj_la1 jj_gen jj_consume_token throw new ParseException jj_consume_token RANGEIN_END switch jj_ntk jj_ntk jj_ntk case CARAT jj_consume_token CARAT boost jj_consume_token NUMBER break default jj_la1 jj_gen if goop1 kind RANGEIN_QUOTED goop1 image goop1 image substring goop1 image length if goop2 kind RANGEIN_QUOTED goop2 image goop2 image substring goop2 image length getRangeQuery field discardEscapeChar goop1 image discardEscapeChar goop2 image true break case RANGEEX_START jj_consume_token RANGEEX_START switch jj_ntk jj_ntk jj_ntk case RANGEEX_GOOP goop1 jj_consume_token RANGEEX_GOOP break case RANGEEX_QUOTED goop1 jj_consume_token RANGEEX_QUOTED break default jj_la1 jj_gen jj_consume_token throw new ParseException switch jj_ntk jj_ntk jj_ntk case RANGEEX_TO jj_consume_token RANGEEX_TO break default jj_la1 jj_gen switch jj_ntk jj_ntk jj_ntk case RANGEEX_GOOP goop2 jj_consume_token RANGEEX_GOOP break case RANGEEX_QUOTED goop2 jj_consume_token RANGEEX_QUOTED break default jj_la1 jj_gen jj_consume_token throw new ParseException jj_consume_token RANGEEX_END switch jj_ntk jj_ntk jj_ntk case CARAT jj_consume_token CARAT boost jj_consume_token NUMBER break default jj_la1 jj_gen if goop1 kind RANGEEX_QUOTED goop1 image goop1 image substring goop1 image length if goop2 kind RANGEEX_QUOTED goop2 image goop2 image substring goop2 image length getRangeQuery field discardEscapeChar goop1 image discardEscapeChar goop2 image false break case QUOTED term jj_consume_token QUOTED switch jj_ntk jj_ntk jj_ntk case FUZZY_SLOP fuzzySlop jj_consume_token FUZZY_SLOP break default jj_la1 jj_gen switch jj_ntk jj_ntk jj_ntk case CARAT jj_consume_token CARAT boost jj_consume_token NUMBER break default jj_la1 jj_gen int phraseSlop if fuzzySlop null try Float valueOf fuzzySlop image substring intValue catch Exception ignored getFieldQuery field discardEscapeChar term image substring term image length break default jj_la1 jj_gen jj_consume_token throw new ParseException if boost null float float try Float valueOf boost image floatValue catch Exception ignored if null setBoost if true return throw new Error private boolean jj_2_1 int xla jj_la xla jj_lastpos jj_scanpos token try return jj_3_1 catch LookaheadSuccess ls return true finally jj_save xla private boolean jj_3R_3 if jj_scan_token STAR return true if jj_scan_token COLON return true return false private boolean jj_3R_2 if jj_scan_token TERM return true if jj_scan_token COLON return true return false private boolean jj_3_1 Token xsp xsp jj_scanpos if jj_3R_2 jj_scanpos xsp if jj_3R_3 return true return false public QueryParserTokenManager token_source public Token token public Token jj_nt private int jj_ntk private Token jj_scanpos jj_lastpos private int jj_la private int jj_gen final private int jj_la1 new int static private int jj_la1_0 static private int jj_la1_1 static jj_la1_init_0 jj_la1_init_1 private static void jj_la1_init_0 jj_la1_0 new int private static void jj_la1_init_1 jj_la1_1 new int final private JJCalls jj_2_rtns new JJCalls private boolean jj_rescan false private int jj_gc public QueryParser CharStream stream token_source new QueryParserTokenManager stream token new Token jj_ntk jj_gen for int jj_la1 for int jj_2_rtns length jj_2_rtns new JJCalls public void ReInit CharStream stream token_source ReInit stream token new Token jj_ntk jj_gen for int jj_la1 for int jj_2_rtns length jj_2_rtns new JJCalls public QueryParser QueryParserTokenManager tm token_source tm token new Token jj_ntk jj_gen for int jj_la1 for int jj_2_rtns length jj_2_rtns new JJCalls public void ReInit QueryParserTokenManager tm token_source tm token new Token jj_ntk jj_gen for int jj_la1 for int jj_2_rtns length jj_2_rtns new JJCalls private Token jj_consume_token int kind throws ParseException Token oldToken if oldToken token next null token token next else token token next token_source getNextToken jj_ntk if token kind kind jj_gen if jj_gc jj_gc for int jj_2_rtns length JJCalls jj_2_rtns while null if gen jj_gen first null next return token token oldToken jj_kind kind throw generateParseException static private final class LookaheadSuccess extends java lang Error final private LookaheadSuccess jj_ls new LookaheadSuccess private boolean jj_scan_token int kind if jj_scanpos jj_lastpos jj_la if jj_scanpos next null jj_lastpos jj_scanpos jj_scanpos next token_source getNextToken else jj_lastpos jj_scanpos jj_scanpos next else jj_scanpos jj_scanpos next if jj_rescan int Token tok token while tok null tok jj_scanpos tok tok next if tok null jj_add_error_token kind if jj_scanpos kind kind return true if jj_la jj_scanpos jj_lastpos throw jj_ls return false final public Token getNextToken if token next null token token next else token token next token_source getNextToken jj_ntk jj_gen return token final public Token getToken int index Token token for int index if next null next else next token_source getNextToken return private int jj_ntk if jj_nt token next null return jj_ntk token next token_source getNextToken kind else return jj_ntk jj_nt kind private java util List jj_expentries new java util ArrayList private int jj_expentry private int jj_kind private int jj_lasttokens new int private int jj_endpos private void jj_add_error_token int kind int pos if pos return if pos jj_endpos jj_lasttokens jj_endpos kind else if jj_endpos jj_expentry new int jj_endpos for int jj_endpos jj_expentry jj_lasttokens jj_entries_loop for java util Iterator it jj_expentries iterator it hasNext int oldentry int it next if oldentry length jj_expentry length for int jj_expentry length if oldentry jj_expentry continue jj_entries_loop jj_expentries add jj_expentry break jj_entries_loop if pos jj_lasttokens jj_endpos pos kind public ParseException generateParseException jj_expentries clear boolean la1tokens new boolean if jj_kind la1tokens jj_kind true jj_kind for int if jj_la1 jj_gen for int if jj_la1_0 la1tokens true if jj_la1_1 la1tokens true for int if la1tokens jj_expentry new int jj_expentry jj_expentries add jj_expentry jj_endpos jj_rescan_token jj_add_error_token int exptokseq new int jj_expentries size for int jj_expentries size exptokseq int jj_expentries get return new ParseException token exptokseq tokenImage final public void enable_tracing final public void disable_tracing private void jj_rescan_token jj_rescan true for int try JJCalls jj_2_rtns do if gen jj_gen jj_la arg jj_lastpos jj_scanpos first switch case jj_3_1 break next while null catch LookaheadSuccess ls jj_rescan false private void jj_save int index int xla JJCalls jj_2_rtns index while gen jj_gen if next null next new JJCalls break next gen jj_gen xla jj_la first token arg xla static final class JJCalls int gen Token first int arg JJCalls next final class TermVectorsTermsWriterPerField extends TermsHashConsumerPerField final TermVectorsTermsWriterPerThread perThread final TermsHashPerField termsHashPerField final TermVectorsTermsWriter termsWriter final FieldInfo fieldInfo final DocumentsWriter DocState docState final DocInverter FieldInvertState fieldState boolean doVectors boolean doVectorPositions boolean doVectorOffsets int maxNumPostings public TermVectorsTermsWriterPerField TermsHashPerField termsHashPerField TermVectorsTermsWriterPerThread perThread FieldInfo fieldInfo this termsHashPerField termsHashPerField this perThread perThread this termsWriter perThread termsWriter this fieldInfo fieldInfo docState termsHashPerField docState fieldState termsHashPerField fieldState int getStreamCount return boolean start Fieldable fields int count doVectors false doVectorPositions false doVectorOffsets false for int count Fieldable field fields if field isIndexed field isTermVectorStored doVectors true doVectorPositions field isStorePositionWithTermVector doVectorOffsets field isStoreOffsetWithTermVector if doVectors if perThread doc null perThread doc termsWriter getPerDoc perThread doc docID docState docID assert perThread doc numVectorFields assert perThread doc tvf length assert perThread doc tvf getFilePointer else assert perThread doc docID docState docID if termsHashPerField numPostings termsHashPerField reset return doVectors public void abort void finish throws IOException assert docState testPoint final int numPostings termsHashPerField numPostings assert numPostings if doVectors numPostings return if numPostings maxNumPostings maxNumPostings numPostings final IndexOutput tvf perThread doc tvf assert fieldInfo storeTermVector assert perThread vectorFieldsInOrder fieldInfo perThread doc addField termsHashPerField fieldInfo number final RawPostingList postings termsHashPerField sortPostings tvf writeVInt numPostings byte bits if doVectorPositions bits TermVectorsReader STORE_POSITIONS_WITH_TERMVECTOR if doVectorOffsets bits TermVectorsReader STORE_OFFSET_WITH_TERMVECTOR tvf writeByte bits int encoderUpto int lastTermBytesCount final ByteSliceReader reader perThread vectorSliceReader final char charBuffers perThread termsHashPerThread charPool buffers for int numPostings final TermVectorsTermsWriter PostingList posting TermVectorsTermsWriter PostingList postings final int freq posting freq final char text2 charBuffers posting textStart DocumentsWriter CHAR_BLOCK_SHIFT final int start2 posting textStart DocumentsWriter CHAR_BLOCK_MASK final UnicodeUtil UTF8Result utf8Result perThread utf8Results encoderUpto UnicodeUtil UTF16toUTF8 text2 start2 utf8Result final int termBytesCount utf8Result length int prefix if final byte lastTermBytes perThread utf8Results encoderUpto result final byte termBytes perThread utf8Results encoderUpto result while prefix lastTermBytesCount prefix termBytesCount if lastTermBytes prefix termBytes prefix break prefix encoderUpto encoderUpto lastTermBytesCount termBytesCount final int suffix termBytesCount prefix tvf writeVInt prefix tvf writeVInt suffix tvf writeBytes utf8Result result prefix suffix tvf writeVInt freq if doVectorPositions termsHashPerField initReader reader posting reader writeTo tvf if doVectorOffsets termsHashPerField initReader reader posting reader writeTo tvf termsHashPerField reset perThread termsHashPerThread reset false void shrinkHash termsHashPerField shrinkHash maxNumPostings maxNumPostings void newTerm Token RawPostingList p0 assert docState testPoint TermVectorsTermsWriter PostingList TermVectorsTermsWriter PostingList p0 freq if doVectorOffsets final int startOffset fieldState offset startOffset final int endOffset fieldState offset endOffset termsHashPerField writeVInt startOffset termsHashPerField writeVInt endOffset startOffset lastOffset endOffset if doVectorPositions termsHashPerField writeVInt fieldState position lastPosition fieldState position void addTerm Token RawPostingList p0 assert docState testPoint TermVectorsTermsWriter PostingList TermVectorsTermsWriter PostingList p0 freq if doVectorOffsets final int startOffset fieldState offset startOffset final int endOffset fieldState offset endOffset termsHashPerField writeVInt startOffset lastOffset termsHashPerField writeVInt endOffset startOffset lastOffset endOffset if doVectorPositions termsHashPerField writeVInt fieldState position lastPosition lastPosition fieldState position void skippingLongTerm Token class SegmentReader extends DirectoryIndexReader private String segment private SegmentInfo si private int readBufferSize FieldInfos fieldInfos private FieldsReader fieldsReader TermInfosReader tis TermVectorsReader termVectorsReaderOrig null CloseableThreadLocal termVectorsLocal new CloseableThreadLocal BitVector deletedDocs null private boolean deletedDocsDirty false private boolean normsDirty false private boolean undeleteAll false private int pendingDeleteCount private boolean rollbackDeletedDocsDirty false private boolean rollbackNormsDirty false private boolean rollbackUndeleteAll false private int rollbackPendingDeleteCount private boolean readOnly IndexInput freqStream IndexInput proxStream private IndexInput singleNormStream CompoundFileReader cfsReader null CompoundFileReader storeCFSReader null private SegmentReader referencedSegmentReader null private class Norm volatile int refCount boolean useSingleNormStream public synchronized void incRef assert refCount refCount public synchronized void decRef throws IOException assert refCount if refCount close refCount public Norm IndexInput in boolean useSingleNormStream int number long normSeek refCount this in in this number number this normSeek normSeek this useSingleNormStream useSingleNormStream private IndexInput in private byte bytes private boolean dirty private int number private long normSeek private boolean rollbackDirty private void reWrite SegmentInfo si throws IOException si advanceNormGen this number IndexOutput out directory createOutput si getNormFileName this number try out writeBytes bytes maxDoc finally out close this dirty false private synchronized void close throws IOException if in null useSingleNormStream in close in null public synchronized void incRef super incRef Iterator it norms values iterator while it hasNext Norm norm Norm it next norm incRef private synchronized void incRefReaderNotNorms super incRef public synchronized void decRef throws IOException super decRef Iterator it norms values iterator while it hasNext Norm norm Norm it next norm decRef private synchronized void decRefReaderNotNorms throws IOException super decRef Map norms new HashMap private static Class IMPL static try String name System getProperty SegmentReader class getName IMPL Class forName name catch ClassNotFoundException throw new RuntimeException catch SecurityException se try IMPL Class forName SegmentReader class getName catch ClassNotFoundException throw new RuntimeException private static Class READONLY_IMPL static try String name System getProperty ReadOnlySegmentReader class getName READONLY_IMPL Class forName name catch ClassNotFoundException throw new RuntimeException catch SecurityException se try READONLY_IMPL Class forName ReadOnlySegmentReader class getName catch ClassNotFoundException throw new RuntimeException public static SegmentReader get SegmentInfo si throws CorruptIndexException IOException return get READ_ONLY_DEFAULT si dir si null false false BufferedIndexInput BUFFER_SIZE true public static SegmentReader get boolean readOnly SegmentInfo si throws CorruptIndexException IOException return get readOnly si dir si null false false BufferedIndexInput BUFFER_SIZE true static SegmentReader get SegmentInfo si boolean doOpenStores throws CorruptIndexException IOException return get READ_ONLY_DEFAULT si dir si null false false BufferedIndexInput BUFFER_SIZE doOpenStores public static SegmentReader get SegmentInfo si int readBufferSize throws CorruptIndexException IOException return get READ_ONLY_DEFAULT si dir si null false false readBufferSize true static SegmentReader get SegmentInfo si int readBufferSize boolean doOpenStores throws CorruptIndexException IOException return get READ_ONLY_DEFAULT si dir si null false false readBufferSize doOpenStores static SegmentReader get boolean readOnly SegmentInfo si int readBufferSize boolean doOpenStores throws CorruptIndexException IOException return get readOnly si dir si null false false readBufferSize doOpenStores public static SegmentReader get boolean readOnly SegmentInfos sis SegmentInfo si boolean closeDir throws CorruptIndexException IOException return get readOnly si dir si sis closeDir true BufferedIndexInput BUFFER_SIZE true public static SegmentReader get Directory dir SegmentInfo si SegmentInfos sis boolean closeDir boolean ownDir int readBufferSize throws CorruptIndexException IOException return get READ_ONLY_DEFAULT dir si sis closeDir ownDir readBufferSize true public static SegmentReader get boolean readOnly Directory dir SegmentInfo si SegmentInfos sis boolean closeDir boolean ownDir int readBufferSize boolean doOpenStores throws CorruptIndexException IOException SegmentReader instance try if readOnly instance SegmentReader READONLY_IMPL newInstance else instance SegmentReader IMPL newInstance catch Exception throw new RuntimeException instance init dir sis closeDir readOnly instance initialize si readBufferSize doOpenStores return instance private void initialize SegmentInfo si int readBufferSize boolean doOpenStores throws CorruptIndexException IOException segment si name this si si this readBufferSize readBufferSize boolean success false try Directory cfsDir directory if si getUseCompoundFile cfsReader new CompoundFileReader directory segment IndexFileNames COMPOUND_FILE_EXTENSION readBufferSize cfsDir cfsReader final Directory storeDir if doOpenStores if si getDocStoreOffset if si getDocStoreIsCompoundFile storeCFSReader new CompoundFileReader directory si getDocStoreSegment IndexFileNames COMPOUND_FILE_STORE_EXTENSION readBufferSize storeDir storeCFSReader else storeDir directory else storeDir cfsDir else storeDir null fieldInfos new FieldInfos cfsDir segment boolean anyProx false final int numFields fieldInfos size for int anyProx numFields if fieldInfos fieldInfo omitTf anyProx true final String fieldsSegment if si getDocStoreOffset fieldsSegment si getDocStoreSegment else fieldsSegment segment if doOpenStores fieldsReader new FieldsReader storeDir fieldsSegment fieldInfos readBufferSize si getDocStoreOffset si docCount if si getDocStoreOffset fieldsReader size si docCount throw new CorruptIndexException si name fieldsReader size si docCount tis new TermInfosReader cfsDir segment fieldInfos readBufferSize loadDeletedDocs freqStream cfsDir openInput segment readBufferSize if anyProx proxStream cfsDir openInput segment readBufferSize openNorms cfsDir readBufferSize final String vectorsSegment if si getDocStoreOffset vectorsSegment si getDocStoreSegment else vectorsSegment segment termVectorsReaderOrig new TermVectorsReader storeDir vectorsSegment fieldInfos readBufferSize si getDocStoreOffset si docCount success true finally if success doClose private void loadDeletedDocs throws IOException if hasDeletions si deletedDocs new BitVector directory si getDelFileName assert si getDelCount deletedDocs count si getDelCount deletedDocs count assert si getDelCount maxDoc deletedDocs count maxDoc si name else assert si getDelCount protected synchronized DirectoryIndexReader doReopen SegmentInfos infos throws CorruptIndexException IOException DirectoryIndexReader newReader if infos size SegmentInfo si infos info if segment equals si name si getUseCompoundFile SegmentReader this si getUseCompoundFile newReader reopenSegment si else newReader SegmentReader get readOnly infos infos info false else if readOnly return new ReadOnlyMultiSegmentReader directory infos closeDirectory new SegmentReader this null null else return new MultiSegmentReader directory infos closeDirectory new SegmentReader this null null false return newReader synchronized SegmentReader reopenSegment SegmentInfo si throws CorruptIndexException IOException boolean deletionsUpToDate this si hasDeletions si hasDeletions si hasDeletions this si getDelFileName equals si getDelFileName boolean normsUpToDate true boolean fieldNormsChanged new boolean fieldInfos size if normsUpToDate for int fieldInfos size if this si getNormFileName equals si getNormFileName normsUpToDate false fieldNormsChanged true if normsUpToDate deletionsUpToDate return this SegmentReader clone if readOnly clone new ReadOnlySegmentReader else clone new SegmentReader boolean success false try clone readOnly readOnly clone directory directory clone si si clone segment segment clone readBufferSize readBufferSize clone cfsReader cfsReader clone storeCFSReader storeCFSReader clone fieldInfos fieldInfos clone tis tis clone freqStream freqStream clone proxStream proxStream clone termVectorsReaderOrig termVectorsReaderOrig final String fieldsSegment Directory storeDir directory if si getDocStoreOffset fieldsSegment si getDocStoreSegment if storeCFSReader null storeDir storeCFSReader else fieldsSegment segment if cfsReader null storeDir cfsReader if fieldsReader null clone fieldsReader new FieldsReader storeDir fieldsSegment fieldInfos readBufferSize si getDocStoreOffset si docCount if deletionsUpToDate clone deletedDocs null clone loadDeletedDocs else clone deletedDocs this deletedDocs clone norms new HashMap if normsUpToDate for int fieldNormsChanged length if fieldNormsChanged String curField fieldInfos fieldInfo name Norm norm Norm this norms get curField norm incRef clone norms put curField norm clone openNorms si getUseCompoundFile cfsReader directory readBufferSize else Iterator it norms keySet iterator while it hasNext String field String it next Norm norm Norm norms get field norm incRef clone norms put field norm if clone singleNormStream null for int fieldInfos size FieldInfo fi fieldInfos fieldInfo if fi isIndexed fi omitNorms Directory si getUseCompoundFile cfsReader directory String fileName si getNormFileName fi number if si hasSeparateNorms fi number continue if fileName endsWith IndexFileNames NORMS_EXTENSION clone singleNormStream openInput fileName readBufferSize break success true finally if this referencedSegmentReader null clone referencedSegmentReader this referencedSegmentReader referencedSegmentReader incRefReaderNotNorms else clone referencedSegmentReader this incRefReaderNotNorms if success clone decRef return clone protected void commitChanges throws IOException si advanceDelGen deletedDocs write directory si getDelFileName si setDelCount si getDelCount pendingDeleteCount if undeleteAll si hasDeletions si clearDelGen si setDelCount si setNumFields fieldInfos size Iterator it norms values iterator while it hasNext Norm norm Norm it next if norm dirty norm reWrite si deletedDocsDirty false normsDirty false undeleteAll false FieldsReader getFieldsReader return fieldsReader protected void doClose throws IOException boolean hasReferencedReader referencedSegmentReader null termVectorsLocal close if hasReferencedReader referencedSegmentReader decRefReaderNotNorms referencedSegmentReader null deletedDocs null if singleNormStream null singleNormStream close singleNormStream null if fieldsReader null fieldsReader close if hasReferencedReader if tis null tis close if freqStream null freqStream close if proxStream null proxStream close if termVectorsReaderOrig null termVectorsReaderOrig close if cfsReader null cfsReader close if storeCFSReader null storeCFSReader close super doClose static boolean hasDeletions SegmentInfo si throws IOException return si hasDeletions public boolean hasDeletions return deletedDocs null static boolean usesCompoundFile SegmentInfo si throws IOException return si getUseCompoundFile static boolean hasSeparateNorms SegmentInfo si throws IOException return si hasSeparateNorms protected void doDelete int docNum if deletedDocs null deletedDocs new BitVector maxDoc deletedDocsDirty true undeleteAll false if deletedDocs getAndSet docNum pendingDeleteCount protected void doUndeleteAll deletedDocs null deletedDocsDirty false undeleteAll true List files throws IOException return new ArrayList si files public TermEnum terms ensureOpen return tis terms public TermEnum terms Term throws IOException ensureOpen return tis terms FieldInfos getFieldInfos return fieldInfos public synchronized Document document int FieldSelector fieldSelector throws CorruptIndexException IOException ensureOpen if isDeleted throw new IllegalArgumentException return fieldsReader doc fieldSelector public synchronized boolean isDeleted int return deletedDocs null deletedDocs get public TermDocs termDocs throws IOException ensureOpen return new SegmentTermDocs this public TermPositions termPositions throws IOException ensureOpen return new SegmentTermPositions this public int docFreq Term throws IOException ensureOpen TermInfo ti tis get if ti null return ti docFreq else return public int numDocs int maxDoc if deletedDocs null deletedDocs count return public int maxDoc return si docCount public void setTermInfosIndexDivisor int indexDivisor throws IllegalStateException tis setIndexDivisor indexDivisor public int getTermInfosIndexDivisor return tis getIndexDivisor public Collection getFieldNames IndexReader FieldOption fieldOption ensureOpen Set fieldSet new HashSet for int fieldInfos size FieldInfo fi fieldInfos fieldInfo if fieldOption IndexReader FieldOption ALL fieldSet add fi name else if fi isIndexed fieldOption IndexReader FieldOption UNINDEXED fieldSet add fi name else if fi omitTf fieldOption IndexReader FieldOption OMIT_TF fieldSet add fi name else if fi storePayloads fieldOption IndexReader FieldOption STORES_PAYLOADS fieldSet add fi name else if fi isIndexed fieldOption IndexReader FieldOption INDEXED fieldSet add fi name else if fi isIndexed fi storeTermVector false fieldOption IndexReader FieldOption INDEXED_NO_TERMVECTOR fieldSet add fi name else if fi storeTermVector true fi storePositionWithTermVector false fi storeOffsetWithTermVector false fieldOption IndexReader FieldOption TERMVECTOR fieldSet add fi name else if fi isIndexed fi storeTermVector fieldOption IndexReader FieldOption INDEXED_WITH_TERMVECTOR fieldSet add fi name else if fi storePositionWithTermVector fi storeOffsetWithTermVector false fieldOption IndexReader FieldOption TERMVECTOR_WITH_POSITION fieldSet add fi name else if fi storeOffsetWithTermVector fi storePositionWithTermVector false fieldOption IndexReader FieldOption TERMVECTOR_WITH_OFFSET fieldSet add fi name else if fi storeOffsetWithTermVector fi storePositionWithTermVector fieldOption IndexReader FieldOption TERMVECTOR_WITH_POSITION_OFFSET fieldSet add fi name return fieldSet public synchronized boolean hasNorms String field ensureOpen return norms containsKey field static byte createFakeNorms int size byte ones new byte size Arrays fill ones DefaultSimilarity encodeNorm return ones private byte ones private byte fakeNorms if ones null ones createFakeNorms maxDoc return ones protected synchronized byte getNorms String field throws IOException Norm norm Norm norms get field synchronized norm byte bytes new byte maxDoc norms field bytes norm close return norm bytes public synchronized byte norms String field throws IOException ensureOpen byte bytes getNorms field if bytes null bytes fakeNorms return bytes protected void doSetNorm int doc String field byte value throws IOException Norm norm Norm norms get field return normsDirty true public synchronized void norms String field byte bytes int offset throws IOException ensureOpen Norm norm Norm norms get field if norm null System arraycopy fakeNorms bytes offset maxDoc return synchronized norm System arraycopy norm bytes bytes offset maxDoc return IndexInput normStream if norm useSingleNormStream normStream singleNormStream else normStream norm in normStream seek norm normSeek normStream readBytes bytes offset maxDoc private void openNorms Directory cfsDir int readBufferSize throws IOException int maxDoc maxDoc for int fieldInfos size FieldInfo fi fieldInfos fieldInfo if norms containsKey fi name continue if fi isIndexed fi omitNorms Directory directory String fileName si getNormFileName fi number if si hasSeparateNorms fi number cfsDir boolean singleNormFile fileName endsWith IndexFileNames NORMS_EXTENSION IndexInput normInput null long normSeek if singleNormFile normSeek nextNormSeek if singleNormStream null singleNormStream openInput fileName readBufferSize normInput singleNormStream else normSeek normInput openInput fileName norms put fi name new Norm normInput singleNormFile fi number normSeek boolean normsClosed if singleNormStream null return false Iterator it norms values iterator while it hasNext Norm norm Norm it next if norm refCount return false return true boolean normsClosed String field Norm norm Norm norms get field return norm refCount private TermVectorsReader getTermVectorsReader assert termVectorsReaderOrig null TermVectorsReader tvReader TermVectorsReader termVectorsLocal get if tvReader null try tvReader TermVectorsReader termVectorsReaderOrig clone catch CloneNotSupportedException cnse return null termVectorsLocal set tvReader return tvReader public TermFreqVector getTermFreqVector int docNumber String field throws IOException ensureOpen FieldInfo fi fieldInfos fieldInfo field if fi null fi storeTermVector termVectorsReaderOrig null return null TermVectorsReader termVectorsReader getTermVectorsReader if termVectorsReader null return null return termVectorsReader get docNumber field public void getTermFreqVector int docNumber String field TermVectorMapper mapper throws IOException ensureOpen FieldInfo fi fieldInfos fieldInfo field if fi null fi storeTermVector termVectorsReaderOrig null return TermVectorsReader termVectorsReader getTermVectorsReader if termVectorsReader null return termVectorsReader get docNumber field mapper public void getTermFreqVector int docNumber TermVectorMapper mapper throws IOException ensureOpen if termVectorsReaderOrig null return TermVectorsReader termVectorsReader getTermVectorsReader if termVectorsReader null return termVectorsReader get docNumber mapper public TermFreqVector getTermFreqVectors int docNumber throws IOException ensureOpen if termVectorsReaderOrig null return null TermVectorsReader termVectorsReader getTermVectorsReader if termVectorsReader null return null return termVectorsReader get docNumber FieldInfos fieldInfos return fieldInfos String getSegmentName return segment SegmentInfo getSegmentInfo return si void setSegmentInfo SegmentInfo info si info void startCommit super startCommit rollbackDeletedDocsDirty deletedDocsDirty rollbackNormsDirty normsDirty rollbackUndeleteAll undeleteAll rollbackPendingDeleteCount pendingDeleteCount Iterator it norms values iterator while it hasNext Norm norm Norm it next norm rollbackDirty norm dirty void rollbackCommit super rollbackCommit deletedDocsDirty rollbackDeletedDocsDirty normsDirty rollbackNormsDirty undeleteAll rollbackUndeleteAll pendingDeleteCount rollbackPendingDeleteCount Iterator it norms values iterator while it hasNext Norm norm Norm it next norm dirty norm rollbackDirty public final class SimpleAnalyzer extends Analyzer public TokenStream tokenStream String fieldName Reader reader return new LowerCaseTokenizer reader public TokenStream reusableTokenStream String fieldName Reader reader throws IOException Tokenizer tokenizer Tokenizer getPreviousTokenStream if tokenizer null tokenizer new LowerCaseTokenizer reader setPreviousTokenStream tokenizer else tokenizer reset reader return tokenizer public class FieldSortedHitQueue extends PriorityQueue public FieldSortedHitQueue IndexReader reader SortField fields int size throws IOException final int fields length comparators new ScoreDocComparator this fields new SortField for int String fieldname fields getField comparators getCachedComparator reader fieldname fields getType fields getLocale fields getFactory if comparators sortType SortField STRING this fields new SortField fieldname fields getLocale fields getReverse else this fields new SortField fieldname comparators sortType fields getReverse initialize size protected ScoreDocComparator comparators protected SortField fields protected float maxscore Float NEGATIVE_INFINITY public float getMaxScore return maxscore private final void updateMaxScore FieldDoc fdoc maxscore Math max maxscore fdoc score public boolean insert FieldDoc fdoc updateMaxScore fdoc return super insert fdoc public boolean insert Object fdoc return insert FieldDoc fdoc public Object insertWithOverflow Object element updateMaxScore FieldDoc element return super insertWithOverflow element protected boolean lessThan final Object final Object final ScoreDoc docA ScoreDoc final ScoreDoc docB ScoreDoc final int comparators length int for int fields reverse comparators compare docB docA comparators compare docA docB if return docA doc docB doc return FieldDoc fillFields final FieldDoc doc final int comparators length final Comparable fields new Comparable for int fields comparators sortValue doc doc fields fields return doc SortField getFields return fields static ScoreDocComparator getCachedComparator IndexReader reader String field int type Locale locale SortComparatorSource factory throws IOException if type SortField DOC return ScoreDocComparator INDEXORDER if type SortField SCORE return ScoreDocComparator RELEVANCE FieldCacheImpl Entry entry factory null new FieldCacheImpl Entry field factory new FieldCacheImpl Entry field type locale return ScoreDocComparator Comparators get reader entry static final FieldCacheImpl Cache Comparators new FieldCacheImpl Cache protected Object createValue IndexReader reader Object entryKey throws IOException FieldCacheImpl Entry entry FieldCacheImpl Entry entryKey String fieldname entry field int type entry type Locale locale entry locale SortComparatorSource factory SortComparatorSource entry custom ScoreDocComparator comparator switch type case SortField AUTO comparator comparatorAuto reader fieldname break case SortField INT comparator comparatorInt reader fieldname break case SortField FLOAT comparator comparatorFloat reader fieldname break case SortField LONG comparator comparatorLong reader fieldname break case SortField DOUBLE comparator comparatorDouble reader fieldname break case SortField SHORT comparator comparatorShort reader fieldname break case SortField BYTE comparator comparatorByte reader fieldname break case SortField STRING if locale null comparator comparatorStringLocale reader fieldname locale else comparator comparatorString reader fieldname break case SortField CUSTOM comparator factory newComparator reader fieldname break default throw new RuntimeException type return comparator static ScoreDocComparator comparatorByte final IndexReader reader final String fieldname throws IOException final String field fieldname intern final byte fieldOrder FieldCache DEFAULT getBytes reader field return new ScoreDocComparator public final int compare final ScoreDoc final ScoreDoc final int fi fieldOrder doc final int fj fieldOrder doc if fi fj return if fi fj return return public Comparable sortValue final ScoreDoc return new Byte fieldOrder doc public int sortType return SortField INT static ScoreDocComparator comparatorShort final IndexReader reader final String fieldname throws IOException final String field fieldname intern final short fieldOrder FieldCache DEFAULT getShorts reader field return new ScoreDocComparator public final int compare final ScoreDoc final ScoreDoc final int fi fieldOrder doc final int fj fieldOrder doc if fi fj return if fi fj return return public Comparable sortValue final ScoreDoc return new Short fieldOrder doc public int sortType return SortField SHORT static ScoreDocComparator comparatorInt final IndexReader reader final String fieldname throws IOException final String field fieldname intern final int fieldOrder FieldCache DEFAULT getInts reader field return new ScoreDocComparator public final int compare final ScoreDoc final ScoreDoc final int fi fieldOrder doc final int fj fieldOrder doc if fi fj return if fi fj return return public Comparable sortValue final ScoreDoc return new Integer fieldOrder doc public int sortType return SortField INT static ScoreDocComparator comparatorLong final IndexReader reader final String fieldname throws IOException final String field fieldname intern final long fieldOrder ExtendedFieldCache EXT_DEFAULT getLongs reader field return new ScoreDocComparator public final int compare final ScoreDoc final ScoreDoc final long li fieldOrder doc final long lj fieldOrder doc if li lj return if li lj return return public Comparable sortValue final ScoreDoc return new Long fieldOrder doc public int sortType return SortField LONG static ScoreDocComparator comparatorFloat final IndexReader reader final String fieldname throws IOException final String field fieldname intern final float fieldOrder FieldCache DEFAULT getFloats reader field return new ScoreDocComparator public final int compare final ScoreDoc final ScoreDoc final float fi fieldOrder doc final float fj fieldOrder doc if fi fj return if fi fj return return public Comparable sortValue final ScoreDoc return new Float fieldOrder doc public int sortType return SortField FLOAT static ScoreDocComparator comparatorDouble final IndexReader reader final String fieldname throws IOException final String field fieldname intern final double fieldOrder ExtendedFieldCache EXT_DEFAULT getDoubles reader field return new ScoreDocComparator public final int compare final ScoreDoc final ScoreDoc final double di fieldOrder doc final double dj fieldOrder doc if di dj return if di dj return return public Comparable sortValue final ScoreDoc return new Double fieldOrder doc public int sortType return SortField DOUBLE static ScoreDocComparator comparatorString final IndexReader reader final String fieldname throws IOException final String field fieldname intern final FieldCache StringIndex index FieldCache DEFAULT getStringIndex reader field return new ScoreDocComparator public final int compare final ScoreDoc final ScoreDoc final int fi index order doc final int fj index order doc if fi fj return if fi fj return return public Comparable sortValue final ScoreDoc return index lookup index order doc public int sortType return SortField STRING static ScoreDocComparator comparatorStringLocale final IndexReader reader final String fieldname final Locale locale throws IOException final Collator collator Collator getInstance locale final String field fieldname intern final String index FieldCache DEFAULT getStrings reader field return new ScoreDocComparator public final int compare final ScoreDoc final ScoreDoc String is index doc String js index doc if is js return else if is null return else if js null return else return collator compare is js public Comparable sortValue final ScoreDoc return index doc public int sortType return SortField STRING static ScoreDocComparator comparatorAuto final IndexReader reader final String fieldname throws IOException final String field fieldname intern Object lookupArray ExtendedFieldCache EXT_DEFAULT getAuto reader field if lookupArray instanceof FieldCache StringIndex return comparatorString reader field else if lookupArray instanceof int return comparatorInt reader field else if lookupArray instanceof long return comparatorLong reader field else if lookupArray instanceof float return comparatorFloat reader field else if lookupArray instanceof String return comparatorString reader field else throw new RuntimeException field class FieldDocSortedHitQueue extends PriorityQueue volatile SortField fields volatile Collator collators FieldDocSortedHitQueue SortField fields int size this fields fields this collators hasCollators fields initialize size synchronized void setFields SortField fields if this fields null this fields fields this collators hasCollators fields SortField getFields return fields private Collator hasCollators final SortField fields if fields null return null Collator ret new Collator fields length for int fields length Locale locale fields getLocale if locale null ret Collator getInstance locale return ret protected final boolean lessThan final Object final Object final FieldDoc docA FieldDoc final FieldDoc docB FieldDoc final int fields length int for int final int type fields getType switch type case SortField SCORE float r1 Float docA fields floatValue float r2 Float docB fields floatValue if r1 r2 if r1 r2 break case SortField DOC case SortField INT int i1 Integer docA fields intValue int i2 Integer docB fields intValue if i1 i2 if i1 i2 break case SortField LONG long l1 Long docA fields longValue long l2 Long docB fields longValue if l1 l2 if l1 l2 break case SortField STRING String s1 String docA fields String s2 String docB fields if s1 null s2 null else if fields getLocale null s1 compareTo s2 else collators compare s1 s2 break case SortField FLOAT float f1 Float docA fields floatValue float f2 Float docB fields floatValue if f1 f2 if f1 f2 break case SortField DOUBLE double d1 Double docA fields doubleValue double d2 Double docB fields doubleValue if d1 d2 if d1 d2 break case SortField BYTE int i1 Byte docA fields byteValue int i2 Byte docB fields byteValue if i1 i2 if i1 i2 break case SortField SHORT int i1 Short docA fields shortValue int i2 Short docB fields shortValue if i1 i2 if i1 i2 break case SortField CUSTOM docA fields compareTo docB fields break case SortField AUTO throw new RuntimeException default throw new RuntimeException type if fields getReverse if return docA doc docB doc return public abstract class FieldCacheSource extends ValueSource private String field public FieldCacheSource String field this field field public final DocValues getValues IndexReader reader throws IOException return getCachedFieldValues FieldCache DEFAULT field reader public String description return field public abstract DocValues getCachedFieldValues FieldCache cache String field IndexReader reader throws IOException public final boolean equals Object if instanceof FieldCacheSource return false FieldCacheSource other FieldCacheSource return this field equals other field cachedFieldSourceEquals other public final int hashCode return field hashCode cachedFieldSourceHashCode public abstract boolean cachedFieldSourceEquals FieldCacheSource other public abstract int cachedFieldSourceHashCode public abstract class HitCollector public abstract void collect int doc float score final class FreqProxTermsWriterPerField extends TermsHashConsumerPerField implements Comparable final FreqProxTermsWriterPerThread perThread final TermsHashPerField termsHashPerField final FieldInfo fieldInfo final DocumentsWriter DocState docState final DocInverter FieldInvertState fieldState boolean omitTf public FreqProxTermsWriterPerField TermsHashPerField termsHashPerField FreqProxTermsWriterPerThread perThread FieldInfo fieldInfo this termsHashPerField termsHashPerField this perThread perThread this fieldInfo fieldInfo docState termsHashPerField docState fieldState termsHashPerField fieldState omitTf fieldInfo omitTf int getStreamCount if fieldInfo omitTf return else return void finish boolean hasPayloads void skippingLongTerm Token throws IOException public int compareTo Object other0 FreqProxTermsWriterPerField other FreqProxTermsWriterPerField other0 return fieldInfo name compareTo other fieldInfo name void reset omitTf fieldInfo omitTf boolean start Fieldable fields int count for int count if fields isIndexed return true return false final void writeProx Token FreqProxTermsWriter PostingList int proxCode final Payload payload getPayload if payload null payload length termsHashPerField writeVInt proxCode termsHashPerField writeVInt payload length termsHashPerField writeBytes payload data payload offset payload length hasPayloads true else termsHashPerField writeVInt proxCode lastPosition fieldState position final void newTerm Token RawPostingList p0 assert docState testPoint FreqProxTermsWriter PostingList FreqProxTermsWriter PostingList p0 lastDocID docState docID if omitTf lastDocCode docState docID else lastDocCode docState docID docFreq writeProx fieldState position final void addTerm Token RawPostingList p0 assert docState testPoint FreqProxTermsWriter PostingList FreqProxTermsWriter PostingList p0 assert omitTf docFreq if omitTf if docState docID lastDocID assert docState docID lastDocID termsHashPerField writeVInt lastDocCode lastDocCode docState docID lastDocID lastDocID docState docID else if docState docID lastDocID assert docState docID lastDocID if docFreq termsHashPerField writeVInt lastDocCode else termsHashPerField writeVInt lastDocCode termsHashPerField writeVInt docFreq docFreq lastDocCode docState docID lastDocID lastDocID docState docID writeProx fieldState position else docFreq writeProx fieldState position lastPosition public void abort public abstract class Cache static class SynchronizedCache extends Cache Object mutex Cache cache SynchronizedCache Cache cache this cache cache this mutex this SynchronizedCache Cache cache Object mutex this cache cache this mutex mutex public void put Object key Object value synchronized mutex cache put key value public Object get Object key synchronized mutex return cache get key public boolean containsKey Object key synchronized mutex return cache containsKey key public void close synchronized mutex cache close Cache getSynchronizedCache return this public static Cache synchronizedCache Cache cache return cache getSynchronizedCache Cache getSynchronizedCache return new SynchronizedCache this public abstract void put Object key Object value public abstract Object get Object key public abstract boolean containsKey Object key public abstract void close public class SpanNotQuery extends SpanQuery private SpanQuery include private SpanQuery exclude public SpanNotQuery SpanQuery include SpanQuery exclude this include include this exclude exclude if include getField equals exclude getField throw new IllegalArgumentException public SpanQuery getInclude return include public SpanQuery getExclude return exclude public String getField return include getField public Collection getTerms return include getTerms public void extractTerms Set terms include extractTerms terms public String toString String field StringBuffer buffer new StringBuffer buffer append buffer append include toString field buffer append buffer append exclude toString field buffer append buffer append ToStringUtils boost getBoost return buffer toString public Spans getSpans final IndexReader reader throws IOException return new PayloadSpans private PayloadSpans includeSpans include getPayloadSpans reader private boolean moreInclude true private Spans excludeSpans exclude getSpans reader private boolean moreExclude excludeSpans next public boolean next throws IOException moreInclude includeSpans next while moreInclude moreExclude moreExclude excludeSpans skipTo includeSpans doc includeSpans doc excludeSpans doc excludeSpans end includeSpans start includeSpans doc excludeSpans doc includeSpans end excludeSpans start return moreInclude public boolean skipTo int target throws IOException moreInclude includeSpans skipTo target if moreInclude return false includeSpans doc excludeSpans doc moreExclude excludeSpans skipTo includeSpans doc includeSpans doc excludeSpans doc excludeSpans end includeSpans start includeSpans doc excludeSpans doc includeSpans end excludeSpans start public int doc return includeSpans doc public int start return includeSpans start public int end return includeSpans end ArrayList result null if includeSpans isPayloadAvailable result new ArrayList includeSpans getPayload return result public boolean isPayloadAvailable return includeSpans isPayloadAvailable public String toString return SpanNotQuery this toString public PayloadSpans getPayloadSpans IndexReader reader throws IOException return PayloadSpans getSpans reader public Query rewrite IndexReader reader throws IOException SpanNotQuery clone null SpanQuery rewrittenInclude SpanQuery include rewrite reader if rewrittenInclude include clone SpanNotQuery this clone clone include rewrittenInclude SpanQuery rewrittenExclude SpanQuery exclude rewrite reader if rewrittenExclude exclude if clone null clone SpanNotQuery this clone clone exclude rewrittenExclude if clone null else public boolean equals Object if this return true if instanceof SpanNotQuery return false SpanNotQuery other SpanNotQuery return this include equals other include this exclude equals other exclude this getBoost other getBoost public int hashCode int include hashCode exclude hashCode Float floatToRawIntBits getBoost return public final class StandardFilter extends TokenFilter public StandardFilter TokenStream in super in private static final String APOSTROPHE_TYPE StandardTokenizerImpl TOKEN_TYPES StandardTokenizerImpl APOSTROPHE private static final String ACRONYM_TYPE StandardTokenizerImpl TOKEN_TYPES StandardTokenizerImpl ACRONYM public final Token next final Token reusableToken throws java io IOException assert reusableToken null Token nextToken input next reusableToken if nextToken null return null char buffer nextToken termBuffer final int bufferLength nextToken termLength final String type nextToken type bufferLength buffer bufferLength buffer bufferLength buffer bufferLength nextToken setTermLength bufferLength int upto for int bufferLength char buffer if buffer upto nextToken setTermLength upto return nextToken public class ConstantScoreQuery extends Query protected final Filter filter public ConstantScoreQuery Filter filter this filter filter public Filter getFilter return filter public Query rewrite IndexReader reader throws IOException return this public void extractTerms Set terms protected class ConstantWeight implements Weight private Similarity similarity private float queryNorm private float queryWeight public ConstantWeight Searcher searcher this similarity getSimilarity searcher public Query getQuery return ConstantScoreQuery this public float getValue return queryWeight public float sumOfSquaredWeights throws IOException queryWeight getBoost return queryWeight queryWeight public void normalize float norm this queryNorm norm queryWeight this queryNorm public Scorer scorer IndexReader reader throws IOException return new ConstantScorer similarity reader this public Explanation explain IndexReader reader int doc throws IOException ConstantScorer cs ConstantScorer scorer reader boolean exists cs docIdSetIterator skipTo doc cs docIdSetIterator doc doc ComplexExplanation result new ComplexExplanation if exists result setDescription filter result setValue queryWeight result setMatch Boolean TRUE result addDetail new Explanation getBoost result addDetail new Explanation queryNorm else result setDescription filter doc result setValue result setMatch Boolean FALSE return result protected class ConstantScorer extends Scorer final DocIdSetIterator docIdSetIterator final float theScore int doc public ConstantScorer Similarity similarity IndexReader reader Weight throws IOException super similarity theScore getValue docIdSetIterator filter getDocIdSet reader iterator public boolean next throws IOException return docIdSetIterator next public int doc return docIdSetIterator doc public float score throws IOException return theScore public boolean skipTo int target throws IOException return docIdSetIterator skipTo target public Explanation explain int doc throws IOException throw new UnsupportedOperationException protected Weight createWeight Searcher searcher return new ConstantScoreQuery ConstantWeight searcher public String toString String field return filter toString getBoost getBoost public boolean equals Object if this return true if instanceof ConstantScoreQuery return false ConstantScoreQuery other ConstantScoreQuery return this getBoost other getBoost filter equals other filter public int hashCode return filter hashCode Float floatToIntBits getBoost public class RemoteSearchable extends UnicastRemoteObject implements Searchable private Searchable local public RemoteSearchable Searchable local throws RemoteException super this local local public void search Weight weight Filter filter HitCollector results throws IOException local search weight filter results public void close throws IOException local close public int docFreq Term term throws IOException return local docFreq term public int docFreqs Term terms throws IOException return local docFreqs terms public int maxDoc throws IOException return local maxDoc public TopDocs search Weight weight Filter filter int throws IOException return local search weight filter public TopFieldDocs search Weight weight Filter filter int Sort sort throws IOException return local search weight filter sort public Document doc int throws CorruptIndexException IOException return local doc public Document doc int FieldSelector fieldSelector throws CorruptIndexException IOException return local doc fieldSelector public Query rewrite Query original throws IOException return local rewrite original public Explanation explain Weight weight int doc throws IOException return local explain weight doc public static void main String args throws Exception String indexName null if args null args length indexName args if indexName null System out println return if System getSecurityManager null System setSecurityManager new RMISecurityManager Searchable local new IndexSearcher indexName RemoteSearchable impl new RemoteSearchable local public class FilterIndexReader extends IndexReader public static class FilterTermDocs implements TermDocs protected TermDocs in public FilterTermDocs TermDocs in this in in public void seek Term term throws IOException in seek term public void seek TermEnum termEnum throws IOException in seek termEnum public int doc return in doc public int freq return in freq public boolean next throws IOException return in next public int read int docs int freqs throws IOException return in read docs freqs public boolean skipTo int throws IOException return in skipTo public void close throws IOException in close public static class FilterTermPositions extends FilterTermDocs implements TermPositions public FilterTermPositions TermPositions in super in public int nextPosition throws IOException return TermPositions this in nextPosition public int getPayloadLength return TermPositions this in getPayloadLength public byte getPayload byte data int offset throws IOException return TermPositions this in getPayload data offset public boolean isPayloadAvailable return TermPositions this in isPayloadAvailable public static class FilterTermEnum extends TermEnum protected TermEnum in public FilterTermEnum TermEnum in this in in public boolean next throws IOException return in next public Term term return in term public int docFreq return in docFreq public void close throws IOException in close protected IndexReader in public FilterIndexReader IndexReader in super this in in public Directory directory return in directory public TermFreqVector getTermFreqVectors int docNumber throws IOException ensureOpen return in getTermFreqVectors docNumber public TermFreqVector getTermFreqVector int docNumber String field throws IOException ensureOpen return in getTermFreqVector docNumber field public void getTermFreqVector int docNumber String field TermVectorMapper mapper throws IOException ensureOpen in getTermFreqVector docNumber field mapper public void getTermFreqVector int docNumber TermVectorMapper mapper throws IOException ensureOpen in getTermFreqVector docNumber mapper public int numDocs return in numDocs public int maxDoc return in maxDoc public Document document int FieldSelector fieldSelector throws CorruptIndexException IOException ensureOpen return in document fieldSelector public boolean isDeleted int return in isDeleted public boolean hasDeletions return in hasDeletions protected void doUndeleteAll throws CorruptIndexException IOException in undeleteAll public boolean hasNorms String field throws IOException ensureOpen return in hasNorms field public byte norms String throws IOException ensureOpen return in norms public void norms String byte bytes int offset throws IOException ensureOpen in norms bytes offset protected void doSetNorm int String byte throws CorruptIndexException IOException in setNorm public TermEnum terms throws IOException ensureOpen return in terms public TermEnum terms Term throws IOException ensureOpen return in terms public int docFreq Term throws IOException ensureOpen return in docFreq public TermDocs termDocs throws IOException ensureOpen return in termDocs public TermPositions termPositions throws IOException ensureOpen return in termPositions protected void doDelete int throws CorruptIndexException IOException in deleteDocument protected void doCommit throws IOException in commit protected void doClose throws IOException in close public Collection getFieldNames IndexReader FieldOption fieldNames ensureOpen return in getFieldNames fieldNames public long getVersion ensureOpen return in getVersion public boolean isCurrent throws CorruptIndexException IOException ensureOpen return in isCurrent public boolean isOptimized ensureOpen return in isOptimized public class DateTools private final static TimeZone GMT TimeZone getTimeZone private static final SimpleDateFormat YEAR_FORMAT new SimpleDateFormat private static final SimpleDateFormat MONTH_FORMAT new SimpleDateFormat private static final SimpleDateFormat DAY_FORMAT new SimpleDateFormat private static final SimpleDateFormat HOUR_FORMAT new SimpleDateFormat private static final SimpleDateFormat MINUTE_FORMAT new SimpleDateFormat private static final SimpleDateFormat SECOND_FORMAT new SimpleDateFormat private static final SimpleDateFormat MILLISECOND_FORMAT new SimpleDateFormat static YEAR_FORMAT setTimeZone GMT MONTH_FORMAT setTimeZone GMT DAY_FORMAT setTimeZone GMT HOUR_FORMAT setTimeZone GMT MINUTE_FORMAT setTimeZone GMT SECOND_FORMAT setTimeZone GMT MILLISECOND_FORMAT setTimeZone GMT private DateTools public static String dateToString Date date Resolution resolution return timeToString date getTime resolution public static String timeToString long time Resolution resolution Calendar cal Calendar getInstance GMT cal setTime new Date round time resolution String result if resolution Resolution YEAR synchronized YEAR_FORMAT result YEAR_FORMAT format cal getTime else if resolution Resolution MONTH synchronized MONTH_FORMAT result MONTH_FORMAT format cal getTime else if resolution Resolution DAY synchronized DAY_FORMAT result DAY_FORMAT format cal getTime else if resolution Resolution HOUR synchronized HOUR_FORMAT result HOUR_FORMAT format cal getTime else if resolution Resolution MINUTE synchronized MINUTE_FORMAT result MINUTE_FORMAT format cal getTime else if resolution Resolution SECOND synchronized SECOND_FORMAT result SECOND_FORMAT format cal getTime else if resolution Resolution MILLISECOND synchronized MILLISECOND_FORMAT result MILLISECOND_FORMAT format cal getTime else throw new IllegalArgumentException resolution return result public static long stringToTime String dateString throws ParseException return stringToDate dateString getTime public static Date stringToDate String dateString throws ParseException Date date if dateString length synchronized YEAR_FORMAT date YEAR_FORMAT parse dateString else if dateString length synchronized MONTH_FORMAT date MONTH_FORMAT parse dateString else if dateString length synchronized DAY_FORMAT date DAY_FORMAT parse dateString else if dateString length synchronized HOUR_FORMAT date HOUR_FORMAT parse dateString else if dateString length synchronized MINUTE_FORMAT date MINUTE_FORMAT parse dateString else if dateString length synchronized SECOND_FORMAT date SECOND_FORMAT parse dateString else if dateString length synchronized MILLISECOND_FORMAT date MILLISECOND_FORMAT parse dateString else throw new ParseException dateString return date public static Date round Date date Resolution resolution return new Date round date getTime resolution public static long round long time Resolution resolution Calendar cal Calendar getInstance GMT cal setTime new Date time if resolution Resolution YEAR cal set Calendar MONTH cal set Calendar DAY_OF_MONTH cal set Calendar HOUR_OF_DAY cal set Calendar MINUTE cal set Calendar SECOND cal set Calendar MILLISECOND else if resolution Resolution MONTH cal set Calendar DAY_OF_MONTH cal set Calendar HOUR_OF_DAY cal set Calendar MINUTE cal set Calendar SECOND cal set Calendar MILLISECOND else if resolution Resolution DAY cal set Calendar HOUR_OF_DAY cal set Calendar MINUTE cal set Calendar SECOND cal set Calendar MILLISECOND else if resolution Resolution HOUR cal set Calendar MINUTE cal set Calendar SECOND cal set Calendar MILLISECOND else if resolution Resolution MINUTE cal set Calendar SECOND cal set Calendar MILLISECOND else if resolution Resolution SECOND cal set Calendar MILLISECOND else if resolution Resolution MILLISECOND else throw new IllegalArgumentException resolution return cal getTime getTime public static class Resolution public static final Resolution YEAR new Resolution public static final Resolution MONTH new Resolution public static final Resolution DAY new Resolution public static final Resolution HOUR new Resolution public static final Resolution MINUTE new Resolution public static final Resolution SECOND new Resolution public static final Resolution MILLISECOND new Resolution private String resolution private Resolution private Resolution String resolution this resolution resolution public String toString return resolution public class NIOFSDirectory extends FSDirectory public IndexInput openInput String name int bufferSize throws IOException ensureOpen return new NIOFSIndexInput new File getFile name bufferSize private static class NIOFSIndexInput extends FSDirectory FSIndexInput private byte otherBuffer private ByteBuffer otherByteBuf final FileChannel channel public NIOFSIndexInput File path int bufferSize throws IOException super path bufferSize channel file getChannel protected void newBuffer byte newBuffer super newBuffer newBuffer byteBuf ByteBuffer wrap newBuffer public void close throws IOException if isClone file isOpen try channel close finally file close protected void readInternal byte int offset int len throws IOException final ByteBuffer bb if buffer offset assert byteBuf null byteBuf clear byteBuf limit len bb byteBuf else if offset if otherBuffer otherBuffer otherByteBuf ByteBuffer wrap else otherByteBuf clear otherByteBuf limit len bb otherByteBuf else bb ByteBuffer wrap offset len long pos getFilePointer while bb hasRemaining int channel read bb pos if throw new IOException pos final class SegmentMergeQueue extends PriorityQueue SegmentMergeQueue int size initialize size protected final boolean lessThan Object Object SegmentMergeInfo stiA SegmentMergeInfo SegmentMergeInfo stiB SegmentMergeInfo int comparison stiA term compareTo stiB term if comparison return stiA base stiB base else return comparison final void close throws IOException while top null SegmentMergeInfo pop close final class DocInverterPerField extends DocFieldConsumerPerField final private DocInverterPerThread perThread final private FieldInfo fieldInfo final InvertedDocConsumerPerField consumer final InvertedDocEndConsumerPerField endConsumer final DocumentsWriter DocState docState final DocInverter FieldInvertState fieldState public DocInverterPerField DocInverterPerThread perThread FieldInfo fieldInfo this perThread perThread this fieldInfo fieldInfo docState perThread docState fieldState perThread fieldState this consumer perThread consumer addField this fieldInfo this endConsumer perThread endConsumer addField this fieldInfo void abort consumer abort endConsumer abort public void processFields final Fieldable fields final int count throws IOException fieldState reset docState doc getBoost final int maxFieldLength docState maxFieldLength final boolean doInvert consumer start fields count for int count final Fieldable field fields if field isIndexed doInvert if fieldState length fieldState position docState analyzer getPositionIncrementGap fieldInfo name String stringValue field stringValue final int valueLength stringValue length Token token perThread localToken reinit stringValue fieldState offset fieldState offset valueLength boolean success false try consumer add token success true finally if success docState docWriter setAborting fieldState offset valueLength fieldState length fieldState position final TokenStream stream final TokenStream streamValue field tokenStreamValue if streamValue null stream streamValue else final Reader readerValue field readerValue if readerValue null reader readerValue else String stringValue field stringValue if stringValue null throw new IllegalArgumentException perThread stringReader init stringValue reader perThread stringReader stream docState analyzer reusableTokenStream fieldInfo name reader stream reset try int offsetEnd fieldState offset final Token localToken perThread localToken for Token token stream next localToken if token null break fieldState position token getPositionIncrement boolean success false try consumer add token success true finally if success docState docWriter setAborting fieldState position offsetEnd fieldState offset token endOffset if fieldState length maxFieldLength if docState infoStream null docState infoStream println maxFieldLength fieldInfo name break fieldState offset offsetEnd finally stream close fieldState boost field getBoost consumer finish endConsumer finish public class Payload implements Serializable Cloneable protected byte data protected int offset protected int length public Payload public Payload byte data this data data length public Payload byte data int offset int length if offset offset length data length throw new IllegalArgumentException this data data this offset offset this length length public void setData byte data setData data data length public void setData byte data int offset int length this data data this offset offset this length length public byte getData return this data public int getOffset return this offset public int length return this length public byte byteAt int index if index index this length return this data this offset index throw new ArrayIndexOutOfBoundsException index public byte toByteArray byte retArray new byte this length System arraycopy this data this offset retArray this length return retArray public void copyTo byte target int targetOffset if this length target length targetOffset throw new ArrayIndexOutOfBoundsException System arraycopy this data this offset target targetOffset this length public Object clone try Payload clone Payload super clone if offset length data length clone data byte data clone else clone data this toByteArray clone offset return clone catch CloneNotSupportedException public boolean equals Object obj if obj this return true if obj instanceof Payload Payload other Payload obj if length other length for int length if data offset other data other offset return false return true else return false else return false public int hashCode return ArrayUtil hashCode data offset offset length public class VerifyingLockFactory extends LockFactory LockFactory lf byte id String host int port private class CheckedLock extends Lock private Lock lock public CheckedLock Lock lock this lock lock private void verify byte message try Socket new Socket host port OutputStream out getOutputStream out write id out write message InputStream in getInputStream int result in read in close out close close if result throw new RuntimeException catch Exception throw new RuntimeException public synchronized boolean obtain long lockWaitTimeout throws LockObtainFailedException IOException boolean obtained lock obtain lockWaitTimeout if obtained verify byte return obtained public synchronized boolean obtain throws LockObtainFailedException IOException return lock obtain public synchronized boolean isLocked return lock isLocked public synchronized void release throws IOException if isLocked verify byte lock release public VerifyingLockFactory byte id LockFactory lf String host int port throws IOException this id id this lf lf this host host this port port public synchronized Lock makeLock String lockName return new CheckedLock lf makeLock lockName public synchronized void clearLock String lockName throws IOException lf clearLock lockName final class FreqProxTermsWriterPerThread extends TermsHashConsumerPerThread final TermsHashPerThread termsHashPerThread final DocumentsWriter DocState docState public FreqProxTermsWriterPerThread TermsHashPerThread perThread docState perThread docState termsHashPerThread perThread public TermsHashConsumerPerField addField TermsHashPerField termsHashPerField FieldInfo fieldInfo return new FreqProxTermsWriterPerField termsHashPerField this fieldInfo void startDocument DocumentsWriter DocWriter finishDocument return null public void abort public class TermSpans implements PayloadSpans protected TermPositions positions protected Term term protected int doc protected int freq protected int count protected int position public TermSpans TermPositions positions Term term throws IOException this positions positions this term term doc public boolean next throws IOException if count freq if positions next doc Integer MAX_VALUE return false doc positions doc freq positions freq count position positions nextPosition count return true public boolean skipTo int target throws IOException if doc target return true if positions skipTo target doc Integer MAX_VALUE return false doc positions doc freq positions freq count position positions nextPosition count return true public int doc return doc public int start return position public int end return position byte bytes new byte positions getPayloadLength bytes positions getPayload bytes return Collections singletonList bytes public boolean isPayloadAvailable return positions isPayloadAvailable public String toString return term toString doc doc Integer MAX_VALUE doc position public TermPositions getPositions return positions public interface ExtendedFieldCache extends FieldCache public interface LongParser public long parseLong String string public interface DoubleParser public double parseDouble String string public static ExtendedFieldCache EXT_DEFAULT new ExtendedFieldCacheImpl public long getLongs IndexReader reader String field throws IOException public long getLongs IndexReader reader String field LongParser parser throws IOException public double getDoubles IndexReader reader String field throws IOException public double getDoubles IndexReader reader String field DoubleParser parser throws IOException final class TermsHashPerField extends InvertedDocConsumerPerField final TermsHashConsumerPerField consumer final TermsHashPerField nextPerField final TermsHashPerThread perThread final DocumentsWriter DocState docState final DocInverter FieldInvertState fieldState final CharBlockPool charPool final IntBlockPool intPool final ByteBlockPool bytePool final int streamCount final int numPostingInt final FieldInfo fieldInfo boolean postingsCompacted int numPostings private int postingsHashSize private int postingsHashHalfSize postingsHashSize private int postingsHashMask postingsHashSize private RawPostingList postingsHash new RawPostingList postingsHashSize private RawPostingList public TermsHashPerField DocInverterPerField docInverterPerField final TermsHashPerThread perThread final TermsHashPerThread nextPerThread final FieldInfo fieldInfo this perThread perThread intPool perThread intPool charPool perThread charPool bytePool perThread bytePool docState perThread docState fieldState docInverterPerField fieldState this consumer perThread consumer addField this fieldInfo streamCount consumer getStreamCount numPostingInt streamCount this fieldInfo fieldInfo if nextPerThread null nextPerField TermsHashPerField nextPerThread addField docInverterPerField fieldInfo else nextPerField null void shrinkHash int targetSize assert postingsCompacted numPostings int newSize postingsHash length while newSize newSize targetSize newSize if newSize postingsHash length postingsHash new RawPostingList newSize postingsHashSize newSize postingsHashHalfSize newSize postingsHashMask newSize public void reset if postingsCompacted compactPostings assert numPostings postingsHash length if numPostings perThread termsHash recyclePostings postingsHash numPostings Arrays fill postingsHash numPostings null numPostings postingsCompacted false if nextPerField null nextPerField reset synchronized public void abort reset if nextPerField null nextPerField abort public void initReader ByteSliceReader reader RawPostingList int stream assert stream streamCount final int ints intPool buffers intStart DocumentsWriter INT_BLOCK_SHIFT final int upto intStart DocumentsWriter INT_BLOCK_MASK reader init bytePool byteStart stream ByteBlockPool FIRST_LEVEL_SIZE ints upto stream private synchronized void compactPostings int upto for int postingsHashSize if postingsHash null if upto postingsHash upto postingsHash postingsHash null upto assert upto numPostings postingsCompacted true public RawPostingList sortPostings compactPostings quickSort postingsHash numPostings return postingsHash void quickSort RawPostingList postings int lo int hi if lo hi return else if hi lo if comparePostings postings lo postings hi final RawPostingList tmp postings lo postings lo postings hi postings hi tmp return int mid lo hi if comparePostings postings lo postings mid RawPostingList tmp postings lo postings lo postings mid postings mid tmp if comparePostings postings mid postings hi RawPostingList tmp postings mid postings mid postings hi postings hi tmp if comparePostings postings lo postings mid RawPostingList tmp2 postings lo postings lo postings mid postings mid tmp2 int left lo int right hi if left right return RawPostingList partition postings mid for while comparePostings postings right partition right while left right comparePostings postings left partition left if left right RawPostingList tmp postings left postings left postings right postings right tmp right else break quickSort postings lo left quickSort postings left hi int comparePostings RawPostingList p1 RawPostingList p2 if p1 p2 return final char text1 charPool buffers p1 textStart DocumentsWriter CHAR_BLOCK_SHIFT int pos1 p1 textStart DocumentsWriter CHAR_BLOCK_MASK final char text2 charPool buffers p2 textStart DocumentsWriter CHAR_BLOCK_SHIFT int pos2 p2 textStart DocumentsWriter CHAR_BLOCK_MASK assert text1 text2 pos1 pos2 while true final char c1 text1 pos1 final char c2 text2 pos2 if c1 c2 if c2 return else if c1 return else return c1 c2 else assert c1 private boolean postingEquals final char tokenText final int tokenTextLen final char text perThread charPool buffers textStart DocumentsWriter CHAR_BLOCK_SHIFT assert text null int pos textStart DocumentsWriter CHAR_BLOCK_MASK int tokenPos for tokenPos tokenTextLen pos tokenPos if tokenText tokenPos text pos return false return text pos private boolean doCall private boolean doNextCall boolean start Fieldable fields int count throws IOException doCall consumer start fields count if nextPerField null doNextCall nextPerField start fields count return doCall doNextCall public void add Token token int textStart throws IOException int code textStart int hashPos code postingsHashMask assert postingsCompacted postingsHash hashPos if null textStart textStart final int inc code code do code inc hashPos code postingsHashMask postingsHash hashPos while null textStart textStart if null if perThread freePostingsCount perThread morePostings perThread freePostings perThread freePostingsCount assert null textStart textStart assert postingsHash hashPos null postingsHash hashPos numPostings if numPostings postingsHashHalfSize rehashPostings postingsHashSize if numPostingInt intPool intUpto DocumentsWriter INT_BLOCK_SIZE intPool nextBuffer if DocumentsWriter BYTE_BLOCK_SIZE bytePool byteUpto numPostingInt ByteBlockPool FIRST_LEVEL_SIZE bytePool nextBuffer intUptos intPool buffer intUptoStart intPool intUpto intPool intUpto streamCount intStart intUptoStart intPool intOffset for int streamCount final int upto bytePool newSlice ByteBlockPool FIRST_LEVEL_SIZE intUptos intUptoStart upto bytePool byteOffset byteStart intUptos intUptoStart consumer newTerm token else intUptos intPool buffers intStart DocumentsWriter INT_BLOCK_SHIFT intUptoStart intStart DocumentsWriter INT_BLOCK_MASK consumer addTerm token void add Token token throws IOException assert postingsCompacted final char tokenText token termBuffer final int tokenTextLen token termLength int downto tokenTextLen int code while downto char ch tokenText downto if ch UnicodeUtil UNI_SUR_LOW_START ch UnicodeUtil UNI_SUR_LOW_END if downto ch tokenText downto UnicodeUtil UNI_REPLACEMENT_CHAR else final char ch2 tokenText downto if ch2 UnicodeUtil UNI_SUR_HIGH_START ch2 UnicodeUtil UNI_SUR_HIGH_END code code ch ch2 downto continue else ch tokenText downto UnicodeUtil UNI_REPLACEMENT_CHAR else if ch UnicodeUtil UNI_SUR_HIGH_START ch UnicodeUtil UNI_SUR_HIGH_END ch tokenText downto UnicodeUtil UNI_REPLACEMENT_CHAR code code ch int hashPos code postingsHashMask postingsHash hashPos if null postingEquals tokenText tokenTextLen final int inc code code do code inc hashPos code postingsHashMask postingsHash hashPos while null postingEquals tokenText tokenTextLen if null final int textLen1 tokenTextLen if textLen1 charPool charUpto DocumentsWriter CHAR_BLOCK_SIZE if textLen1 DocumentsWriter CHAR_BLOCK_SIZE if docState maxTermPrefix null docState maxTermPrefix new String tokenText consumer skippingLongTerm token return charPool nextBuffer if perThread freePostingsCount perThread morePostings perThread freePostings perThread freePostingsCount assert null final char text charPool buffer final int textUpto charPool charUpto textStart textUpto charPool charOffset charPool charUpto textLen1 System arraycopy tokenText text textUpto tokenTextLen text textUpto tokenTextLen assert postingsHash hashPos null postingsHash hashPos numPostings if numPostings postingsHashHalfSize rehashPostings postingsHashSize if numPostingInt intPool intUpto DocumentsWriter INT_BLOCK_SIZE intPool nextBuffer if DocumentsWriter BYTE_BLOCK_SIZE bytePool byteUpto numPostingInt ByteBlockPool FIRST_LEVEL_SIZE bytePool nextBuffer intUptos intPool buffer intUptoStart intPool intUpto intPool intUpto streamCount intStart intUptoStart intPool intOffset for int streamCount final int upto bytePool newSlice ByteBlockPool FIRST_LEVEL_SIZE intUptos intUptoStart upto bytePool byteOffset byteStart intUptos intUptoStart consumer newTerm token else intUptos intPool buffers intStart DocumentsWriter INT_BLOCK_SHIFT intUptoStart intStart DocumentsWriter INT_BLOCK_MASK consumer addTerm token if doNextCall nextPerField add token textStart int intUptos int intUptoStart void writeByte int stream byte int upto intUptos intUptoStart stream byte bytes bytePool buffers upto DocumentsWriter BYTE_BLOCK_SHIFT assert bytes null int offset upto DocumentsWriter BYTE_BLOCK_MASK if bytes offset offset bytePool allocSlice bytes offset bytes bytePool buffer intUptos intUptoStart stream offset bytePool byteOffset bytes offset intUptos intUptoStart stream public void writeBytes int stream byte int offset int len final int end offset len for int offset end writeByte stream void writeVInt int stream int assert stream streamCount while writeByte stream byte writeByte stream byte void finish throws IOException consumer finish if nextPerField null nextPerField finish void rehashPostings final int newSize final int newMask newSize RawPostingList newHash new RawPostingList newSize for int postingsHashSize RawPostingList p0 postingsHash if p0 null int code if perThread primary final int start p0 textStart DocumentsWriter CHAR_BLOCK_MASK final char text charPool buffers p0 textStart DocumentsWriter CHAR_BLOCK_SHIFT int pos start while text pos pos code while pos start code code text pos else code p0 textStart int hashPos code newMask assert hashPos if newHash hashPos null final int inc code code do code inc hashPos code newMask while newHash hashPos null newHash hashPos p0 postingsHashMask newMask postingsHash newHash postingsHashSize newSize postingsHashHalfSize newSize public class MultiReader extends IndexReader protected IndexReader subReaders private Map normsCache new HashMap private int maxDoc private int numDocs private boolean hasDeletions false public MultiReader IndexReader subReaders initialize subReaders true public MultiReader IndexReader subReaders boolean closeSubReaders initialize subReaders closeSubReaders private void initialize IndexReader subReaders boolean closeSubReaders this subReaders IndexReader subReaders clone decrefOnClose new boolean subReaders length for int subReaders length starts maxDoc if closeSubReaders subReaders incRef decrefOnClose true else decrefOnClose false if subReaders hasDeletions hasDeletions true starts subReaders length maxDoc public IndexReader reopen throws CorruptIndexException IOException ensureOpen boolean reopened false IndexReader newSubReaders new IndexReader subReaders length boolean newDecrefOnClose new boolean subReaders length boolean success false try for int subReaders length newSubReaders subReaders reopen if newSubReaders subReaders reopened true newDecrefOnClose false if reopened for int subReaders length if newSubReaders subReaders newSubReaders incRef newDecrefOnClose true MultiReader mr new MultiReader newSubReaders mr decrefOnClose newDecrefOnClose success true return mr else success true return this finally if success reopened for int newSubReaders length if newSubReaders null try if newDecrefOnClose newSubReaders decRef else newSubReaders close catch IOException ignore public TermFreqVector getTermFreqVectors int throws IOException ensureOpen public TermFreqVector getTermFreqVector int String field throws IOException ensureOpen return subReaders getTermFreqVector starts field public void getTermFreqVector int docNumber String field TermVectorMapper mapper throws IOException ensureOpen subReaders getTermFreqVector docNumber starts field mapper public void getTermFreqVector int docNumber TermVectorMapper mapper throws IOException ensureOpen subReaders getTermFreqVector docNumber starts mapper public boolean isOptimized return false public synchronized int numDocs for int subReaders length numDocs return numDocs public int maxDoc return maxDoc public Document document int FieldSelector fieldSelector throws CorruptIndexException IOException ensureOpen public boolean isDeleted int public boolean hasDeletions return hasDeletions protected void doDelete int throws CorruptIndexException IOException hasDeletions true protected void doUndeleteAll throws CorruptIndexException IOException for int subReaders length subReaders undeleteAll hasDeletions false return MultiSegmentReader readerIndex this starts this subReaders length public boolean hasNorms String field throws IOException ensureOpen for int subReaders length if subReaders hasNorms field return true return false private byte ones private byte fakeNorms if ones null ones SegmentReader createFakeNorms maxDoc return ones public synchronized byte norms String field throws IOException ensureOpen byte bytes byte normsCache get field if bytes null if hasNorms field return fakeNorms bytes new byte maxDoc for int subReaders length subReaders norms field bytes starts return bytes public synchronized void norms String field byte result int offset throws IOException ensureOpen byte bytes byte normsCache get field if bytes null hasNorms field bytes fakeNorms System arraycopy bytes result offset maxDoc subReaders norms field result offset starts protected void doSetNorm int String field byte value throws CorruptIndexException IOException synchronized normsCache public TermEnum terms throws IOException ensureOpen return new MultiTermEnum subReaders starts null public TermEnum terms Term term throws IOException ensureOpen return new MultiTermEnum subReaders starts term public int docFreq Term throws IOException ensureOpen for int subReaders length total subReaders docFreq return total public TermDocs termDocs throws IOException ensureOpen return new MultiTermDocs subReaders starts public TermPositions termPositions throws IOException ensureOpen return new MultiTermPositions subReaders starts protected void doCommit throws IOException for int subReaders length subReaders commit protected synchronized void doClose throws IOException for int subReaders length if decrefOnClose subReaders decRef else subReaders close public Collection getFieldNames IndexReader FieldOption fieldNames ensureOpen return MultiSegmentReader getFieldNames fieldNames this subReaders public boolean isCurrent throws CorruptIndexException IOException for int subReaders length if subReaders isCurrent return false return true public long getVersion throw new UnsupportedOperationException IndexReader getSubReaders return subReaders public class StaleReaderException extends IOException public StaleReaderException String message super message public class SpanScorer extends Scorer protected Spans spans protected Weight weight protected byte norms protected float value protected boolean firstTime true protected boolean more true protected int doc protected float freq protected SpanScorer Spans spans Weight weight Similarity similarity byte norms throws IOException super similarity this spans spans this norms norms this weight weight this value weight getValue doc public boolean next throws IOException if firstTime more spans next firstTime false return setFreqCurrentDoc public boolean skipTo int target throws IOException if firstTime more spans skipTo target firstTime false if more return false more spans skipTo target return setFreqCurrentDoc protected boolean setFreqCurrentDoc throws IOException if more return false doc spans doc freq do int matchLength spans end spans start freq getSimilarity sloppyFreq matchLength more spans next while more doc spans doc return true public int doc return doc public float score throws IOException public Explanation explain final int doc throws IOException Explanation tfExplanation new Explanation skipTo doc float phraseFreq doc doc freq tfExplanation setValue getSimilarity tf phraseFreq tfExplanation setDescription phraseFreq return tfExplanation public class SpanNearQuery extends SpanQuery private List clauses private int slop private boolean inOrder private String field public SpanNearQuery SpanQuery clauses int slop boolean inOrder this clauses new ArrayList clauses length for int clauses length SpanQuery clause clauses field clause getField else if clause getField equals field throw new IllegalArgumentException this clauses add clause this slop slop this inOrder inOrder public SpanQuery getClauses return SpanQuery clauses toArray new SpanQuery clauses size public int getSlop return slop public boolean isInOrder return inOrder public String getField return field public Collection getTerms Collection terms new ArrayList Iterator clauses iterator while hasNext SpanQuery clause SpanQuery next terms addAll clause getTerms return terms public void extractTerms Set terms Iterator clauses iterator while hasNext SpanQuery clause SpanQuery next clause extractTerms terms public String toString String field StringBuffer buffer new StringBuffer buffer append Iterator clauses iterator while hasNext SpanQuery clause SpanQuery next buffer append clause toString field if hasNext buffer append buffer append buffer append slop buffer append buffer append inOrder buffer append buffer append ToStringUtils boost getBoost return buffer toString public Spans getSpans final IndexReader reader throws IOException return new SpanOrQuery getClauses getPayloadSpans reader return SpanQuery clauses get getPayloadSpans reader return inOrder PayloadSpans new NearSpansOrdered this reader PayloadSpans new NearSpansUnordered this reader public PayloadSpans getPayloadSpans IndexReader reader throws IOException return PayloadSpans getSpans reader public Query rewrite IndexReader reader throws IOException SpanNearQuery clone null for int clauses size SpanQuery SpanQuery clauses get SpanQuery query SpanQuery rewrite reader if clone null clone SpanNearQuery this clone clone clauses set query if clone null else public boolean equals Object if this return true if instanceof SpanNearQuery return false final SpanNearQuery spanNearQuery SpanNearQuery if inOrder spanNearQuery inOrder return false if slop spanNearQuery slop return false if clauses equals spanNearQuery clauses return false return getBoost spanNearQuery getBoost public int hashCode int result result clauses hashCode result Float floatToRawIntBits getBoost result slop result inOrder return result final class NormsWriter extends InvertedDocEndConsumer private static final byte defaultNorm Similarity encodeNorm private FieldInfos fieldInfos public InvertedDocEndConsumerPerThread addThread DocInverterPerThread docInverterPerThread return new NormsWriterPerThread docInverterPerThread this public void abort void files Collection files void setFieldInfos FieldInfos fieldInfos this fieldInfos fieldInfos public void flush Map threadsAndFields DocumentsWriter FlushState state throws IOException final Map byField new HashMap final Iterator it threadsAndFields entrySet iterator while it hasNext Map Entry entry Map Entry it next Collection fields Collection entry getValue Iterator fieldsIt fields iterator while fieldsIt hasNext NormsWriterPerField perField NormsWriterPerField fieldsIt next if perField upto List List byField get perField fieldInfo if null new ArrayList byField put perField fieldInfo add perField else fieldsIt remove final String normsFileName state segmentName IndexFileNames NORMS_EXTENSION state flushedFiles add normsFileName IndexOutput normsOut state directory createOutput normsFileName try normsOut writeBytes SegmentMerger NORMS_HEADER SegmentMerger NORMS_HEADER length final int numField fieldInfos size int normCount for int fieldNumber fieldNumber numField fieldNumber final FieldInfo fieldInfo fieldInfos fieldInfo fieldNumber List toMerge List byField get fieldInfo int upto if toMerge null final int numFields toMerge size normCount final NormsWriterPerField fields new NormsWriterPerField numFields int uptos new int numFields for int numFields fields NormsWriterPerField toMerge get int numLeft numFields while numLeft assert uptos fields docIDs length uptos fields docIDs length int minLoc int minDocID fields docIDs uptos for int numLeft final int docID fields docIDs uptos if docID minDocID minDocID docID minLoc assert minDocID state numDocsInRAM for upto minDocID upto normsOut writeByte defaultNorm normsOut writeByte fields minLoc norms uptos minLoc uptos minLoc upto if uptos minLoc fields minLoc upto fields minLoc reset if minLoc numLeft fields minLoc fields numLeft uptos minLoc uptos numLeft numLeft for upto state numDocsInRAM upto normsOut writeByte defaultNorm else if fieldInfo isIndexed fieldInfo omitNorms normCount for upto state numDocsInRAM upto normsOut writeByte defaultNorm assert normCount state numDocsInRAM normsOut getFilePointer normCount state numDocsInRAM normsOut getFilePointer finally normsOut close void closeDocStore DocumentsWriter FlushState state class DefaultSkipListWriter extends MultiLevelSkipListWriter private int lastSkipDoc private int lastSkipPayloadLength private long lastSkipFreqPointer private long lastSkipProxPointer private IndexOutput freqOutput private IndexOutput proxOutput private int curDoc private boolean curStorePayloads private int curPayloadLength private long curFreqPointer private long curProxPointer DefaultSkipListWriter int skipInterval int numberOfSkipLevels int docCount IndexOutput freqOutput IndexOutput proxOutput super skipInterval numberOfSkipLevels docCount this freqOutput freqOutput this proxOutput proxOutput lastSkipDoc new int numberOfSkipLevels lastSkipPayloadLength new int numberOfSkipLevels lastSkipFreqPointer new long numberOfSkipLevels lastSkipProxPointer new long numberOfSkipLevels void setSkipData int doc boolean storePayloads int payloadLength this curDoc doc this curStorePayloads storePayloads this curPayloadLength payloadLength this curFreqPointer freqOutput getFilePointer if proxOutput null this curProxPointer proxOutput getFilePointer protected void resetSkip super resetSkip Arrays fill lastSkipDoc Arrays fill lastSkipFreqPointer freqOutput getFilePointer if proxOutput null Arrays fill lastSkipProxPointer proxOutput getFilePointer protected void writeSkipData int level IndexOutput skipBuffer throws IOException if curStorePayloads int delta curDoc lastSkipDoc level if curPayloadLength lastSkipPayloadLength level skipBuffer writeVInt delta else skipBuffer writeVInt delta skipBuffer writeVInt curPayloadLength lastSkipPayloadLength level curPayloadLength else skipBuffer writeVInt curDoc lastSkipDoc level skipBuffer writeVInt int curFreqPointer lastSkipFreqPointer level skipBuffer writeVInt int curProxPointer lastSkipProxPointer level lastSkipDoc level curDoc lastSkipFreqPointer level curFreqPointer lastSkipProxPointer level curProxPointer class BufferedDeletes int numTerms HashMap terms new HashMap HashMap queries new HashMap List docIDs new ArrayList final static class Num private int num Num int num this num num int getNum return num void setNum int num if num this num this num num void update BufferedDeletes in numTerms in numTerms terms putAll in terms queries putAll in queries docIDs addAll in docIDs in terms clear in numTerms in queries clear in docIDs clear void clear terms clear queries clear docIDs clear numTerms boolean any return terms size docIDs size queries size synchronized void remap MergeDocIDRemapper mapper SegmentInfos infos int docMaps int delCounts MergePolicy OneMerge merge int mergeDocCount final HashMap newDeleteTerms if terms size newDeleteTerms new HashMap Iterator iter terms entrySet iterator while iter hasNext Entry entry Entry iter next Num num Num entry getValue newDeleteTerms put entry getKey new Num mapper remap num getNum else newDeleteTerms null final List newDeleteDocIDs if docIDs size newDeleteDocIDs new ArrayList docIDs size Iterator iter docIDs iterator while iter hasNext Integer num Integer iter next newDeleteDocIDs add new Integer mapper remap num intValue else newDeleteDocIDs null final HashMap newDeleteQueries if queries size newDeleteQueries new HashMap queries size Iterator iter queries entrySet iterator while iter hasNext Entry entry Entry iter next Integer num Integer entry getValue newDeleteQueries put entry getKey new Integer mapper remap num intValue else newDeleteQueries null if newDeleteTerms null terms newDeleteTerms if newDeleteDocIDs null docIDs newDeleteDocIDs if newDeleteQueries null queries newDeleteQueries public class QueryParserTokenManager implements QueryParserConstants public java io PrintStream debugStream System out public void setDebugStream java io PrintStream ds debugStream ds private final int jjStopStringLiteralDfa_3 int pos long active0 switch pos default return private final int jjStartNfa_3 int pos long active0 return jjMoveNfa_3 jjStopStringLiteralDfa_3 pos active0 pos private int jjStopAtPos int pos int kind jjmatchedKind kind jjmatchedPos pos return pos private int jjMoveStringLiteralDfa0_3 switch curChar case return jjStopAtPos case return jjStopAtPos case return jjStartNfaWithStates_3 case return jjStopAtPos case return jjStopAtPos case return jjStopAtPos case return jjStopAtPos case return jjStopAtPos case return jjStopAtPos default return jjMoveNfa_3 private int jjStartNfaWithStates_3 int pos int kind int state jjmatchedKind kind jjmatchedPos pos try curChar input_stream readChar catch java io IOException return pos return jjMoveNfa_3 state pos static final long jjbitVec0 static final long jjbitVec2 private int jjMoveNfa_3 int startState int curPos int startsAt jjnewStateCnt int jjstateSet startState int kind for if jjround ReInitRounds if curChar long curChar do switch jjstateSet case case if break if kind kind jjCheckNAddTwoStates break case if if kind kind jjCheckNAddTwoStates else if if kind kind else if curChar jjCheckNAddStates else if curChar if kind kind if if kind kind jjCheckNAddStates else if curChar if kind kind if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjCheckNAddStates break case if jjCheckNAddStates break case jjCheckNAddStates break case if curChar kind kind break case if break if kind kind jjAddStates break case if curChar jjCheckNAdd break case if break if kind kind jjCheckNAdd break case if curChar kind kind break case if break if kind kind jjCheckNAddTwoStates break case if kind kind jjCheckNAddTwoStates break case if break if kind kind jjCheckNAddStates break case if break if kind kind jjCheckNAddTwoStates break case if kind kind jjCheckNAddTwoStates break case if jjCheckNAddStates break case jjCheckNAddStates break default break while startsAt else if curChar long curChar do switch jjstateSet case if if kind kind jjCheckNAddTwoStates else if curChar jjCheckNAddTwoStates break case if if kind kind jjCheckNAddStates else if curChar jjCheckNAddStates else if curChar if kind kind jjstateSet jjnewStateCnt if if kind kind jjCheckNAddTwoStates if curChar jjstateSet jjnewStateCnt else if curChar jjstateSet jjnewStateCnt else if curChar jjstateSet jjnewStateCnt else if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if jjCheckNAddStates break case if curChar jjstateSet jjnewStateCnt break case jjCheckNAddStates break case if curChar break if kind kind jjstateSet jjnewStateCnt break case if break if kind kind jjCheckNAddTwoStates break case if break if kind kind jjCheckNAddTwoStates break case if curChar jjCheckNAddTwoStates break case if kind kind jjCheckNAddTwoStates break case if break if kind kind jjCheckNAddStates break case if break if kind kind jjCheckNAddTwoStates break case if curChar jjCheckNAddTwoStates break case if kind kind jjCheckNAddTwoStates break case if jjCheckNAddStates break case if curChar jjCheckNAddTwoStates break case jjCheckNAddStates break case if curChar jjCheckNAddStates break default break while startsAt else int hiByte int curChar int i1 hiByte long l1 hiByte int i2 curChar long l2 curChar do switch jjstateSet case case case if jjCanMove_0 hiByte i1 i2 l1 l2 break if kind kind jjCheckNAddTwoStates break case if jjCanMove_0 hiByte i1 i2 l1 l2 if kind kind jjCheckNAddTwoStates if jjCanMove_0 hiByte i1 i2 l1 l2 if kind kind jjCheckNAddStates break case case if jjCanMove_0 hiByte i1 i2 l1 l2 jjCheckNAddStates break case if jjCanMove_0 hiByte i1 i2 l1 l2 break if kind kind jjCheckNAddTwoStates break case if jjCanMove_0 hiByte i1 i2 l1 l2 break if kind kind jjCheckNAddStates break case case if jjCanMove_0 hiByte i1 i2 l1 l2 break if kind kind jjCheckNAddTwoStates break case case if jjCanMove_0 hiByte i1 i2 l1 l2 jjCheckNAddStates break default break while startsAt if kind jjmatchedKind kind jjmatchedPos curPos kind curPos if jjnewStateCnt startsAt jjnewStateCnt startsAt return curPos try curChar input_stream readChar catch java io IOException return curPos private final int jjStopStringLiteralDfa_1 int pos long active0 switch pos case if active0 jjmatchedKind return return default return private final int jjStartNfa_1 int pos long active0 return jjMoveNfa_1 jjStopStringLiteralDfa_1 pos active0 pos private int jjMoveStringLiteralDfa0_1 switch curChar case return jjMoveStringLiteralDfa1_1 case return jjStopAtPos default return jjMoveNfa_1 private int jjMoveStringLiteralDfa1_1 long active0 try curChar input_stream readChar catch java io IOException jjStopStringLiteralDfa_1 active0 return switch curChar case if active0 return jjStartNfaWithStates_1 break default break return jjStartNfa_1 active0 private int jjStartNfaWithStates_1 int pos int kind int state jjmatchedKind kind jjmatchedPos pos try curChar input_stream readChar catch java io IOException return pos return jjMoveNfa_1 state pos private int jjMoveNfa_1 int startState int curPos int startsAt jjnewStateCnt int jjstateSet startState int kind for if jjround ReInitRounds if curChar long curChar do switch jjstateSet case if if kind kind jjCheckNAdd if if kind kind else if curChar jjCheckNAddTwoStates break case if curChar jjCheckNAddTwoStates break case if jjCheckNAddStates break case if curChar jjCheckNAddStates break case if curChar kind kind break case if break if kind kind jjCheckNAdd break default break while startsAt else if curChar long curChar do switch jjstateSet case case if break if kind kind jjCheckNAdd break case jjAddStates break case if curChar jjstateSet jjnewStateCnt break default break while startsAt else int hiByte int curChar int i1 hiByte long l1 hiByte int i2 curChar long l2 curChar do switch jjstateSet case case if jjCanMove_0 hiByte i1 i2 l1 l2 break if kind kind jjCheckNAdd break case if jjCanMove_0 hiByte i1 i2 l1 l2 jjAddStates break default break while startsAt if kind jjmatchedKind kind jjmatchedPos curPos kind curPos if jjnewStateCnt startsAt jjnewStateCnt startsAt return curPos try curChar input_stream readChar catch java io IOException return curPos private int jjMoveStringLiteralDfa0_0 return jjMoveNfa_0 private int jjMoveNfa_0 int startState int curPos int startsAt jjnewStateCnt int jjstateSet startState int kind for if jjround ReInitRounds if curChar long curChar do switch jjstateSet case if break if kind kind jjAddStates break case if curChar jjCheckNAdd break case if break if kind kind jjCheckNAdd break default break while startsAt else if curChar long curChar do switch jjstateSet default break while startsAt else int hiByte int curChar int i1 hiByte long l1 hiByte int i2 curChar long l2 curChar do switch jjstateSet default break while startsAt if kind jjmatchedKind kind jjmatchedPos curPos kind curPos if jjnewStateCnt startsAt jjnewStateCnt startsAt return curPos try curChar input_stream readChar catch java io IOException return curPos private final int jjStopStringLiteralDfa_2 int pos long active0 switch pos case if active0 jjmatchedKind return return default return private final int jjStartNfa_2 int pos long active0 return jjMoveNfa_2 jjStopStringLiteralDfa_2 pos active0 pos private int jjMoveStringLiteralDfa0_2 switch curChar case return jjMoveStringLiteralDfa1_2 case return jjStopAtPos default return jjMoveNfa_2 private int jjMoveStringLiteralDfa1_2 long active0 try curChar input_stream readChar catch java io IOException jjStopStringLiteralDfa_2 active0 return switch curChar case if active0 return jjStartNfaWithStates_2 break default break return jjStartNfa_2 active0 private int jjStartNfaWithStates_2 int pos int kind int state jjmatchedKind kind jjmatchedPos pos try curChar input_stream readChar catch java io IOException return pos return jjMoveNfa_2 state pos private int jjMoveNfa_2 int startState int curPos int startsAt jjnewStateCnt int jjstateSet startState int kind for if jjround ReInitRounds if curChar long curChar do switch jjstateSet case if if kind kind jjCheckNAdd if if kind kind else if curChar jjCheckNAddTwoStates break case if curChar jjCheckNAddTwoStates break case if jjCheckNAddStates break case if curChar jjCheckNAddStates break case if curChar kind kind break case if break if kind kind jjCheckNAdd break default break while startsAt else if curChar long curChar do switch jjstateSet case case if break if kind kind jjCheckNAdd break case jjAddStates break case if curChar jjstateSet jjnewStateCnt break default break while startsAt else int hiByte int curChar int i1 hiByte long l1 hiByte int i2 curChar long l2 curChar do switch jjstateSet case case if jjCanMove_0 hiByte i1 i2 l1 l2 break if kind kind jjCheckNAdd break case if jjCanMove_0 hiByte i1 i2 l1 l2 jjAddStates break default break while startsAt if kind jjmatchedKind kind jjmatchedPos curPos kind curPos if jjnewStateCnt startsAt jjnewStateCnt startsAt return curPos try curChar input_stream readChar catch java io IOException return curPos static final int jjnextStates private static final boolean jjCanMove_0 int hiByte int i1 int i2 long l1 long l2 switch hiByte case return jjbitVec2 i2 l2 default if jjbitVec0 i1 l1 return true return false public static final String jjstrLiteralImages null null null null null null null null null null null null null null null null null null null null public static final String lexStateNames public static final int jjnewLexState static final long jjtoToken static final long jjtoSkip protected CharStream input_stream private final int jjrounds new int private final int jjstateSet new int protected char curChar public QueryParserTokenManager CharStream stream input_stream stream public QueryParserTokenManager CharStream stream int lexState this stream SwitchTo lexState public void ReInit CharStream stream jjmatchedPos jjnewStateCnt curLexState defaultLexState input_stream stream ReInitRounds private void ReInitRounds int jjround for jjrounds public void ReInit CharStream stream int lexState ReInit stream SwitchTo lexState public void SwitchTo int lexState if lexState lexState throw new TokenMgrError lexState TokenMgrError INVALID_LEXICAL_STATE else curLexState lexState protected Token jjFillToken final Token final String curTokenImage final int beginLine final int endLine final int beginColumn final int endColumn String im jjstrLiteralImages jjmatchedKind curTokenImage im null input_stream GetImage im beginLine input_stream getBeginLine beginColumn input_stream getBeginColumn endLine input_stream getEndLine endColumn input_stream getEndColumn Token newToken jjmatchedKind curTokenImage beginLine beginLine endLine endLine beginColumn beginColumn endColumn endColumn return int curLexState int defaultLexState int jjnewStateCnt int jjround int jjmatchedPos int jjmatchedKind public Token getNextToken Token matchedToken int curPos EOFLoop for try curChar input_stream BeginToken catch java io IOException jjmatchedKind matchedToken jjFillToken return matchedToken switch curLexState case jjmatchedKind jjmatchedPos curPos jjMoveStringLiteralDfa0_0 break case jjmatchedKind jjmatchedPos curPos jjMoveStringLiteralDfa0_1 break case jjmatchedKind jjmatchedPos curPos jjMoveStringLiteralDfa0_2 break case jjmatchedKind jjmatchedPos curPos jjMoveStringLiteralDfa0_3 break if jjmatchedKind if jjmatchedPos curPos input_stream backup curPos jjmatchedPos if jjtoToken jjmatchedKind jjmatchedKind matchedToken jjFillToken if jjnewLexState jjmatchedKind curLexState jjnewLexState jjmatchedKind return matchedToken else if jjnewLexState jjmatchedKind curLexState jjnewLexState jjmatchedKind continue EOFLoop int error_line input_stream getEndLine int error_column input_stream getEndColumn String error_after null boolean EOFSeen false try input_stream readChar input_stream backup catch java io IOException e1 EOFSeen true error_after curPos input_stream GetImage if curChar curChar error_line error_column else error_column if EOFSeen input_stream backup error_after curPos input_stream GetImage throw new TokenMgrError EOFSeen curLexState error_line error_column error_after curChar TokenMgrError LEXICAL_ERROR private void jjCheckNAdd int state if jjrounds state jjround jjstateSet jjnewStateCnt state jjrounds state jjround private void jjAddStates int start int end do jjstateSet jjnewStateCnt jjnextStates start while start end private void jjCheckNAddTwoStates int state1 int state2 jjCheckNAdd state1 jjCheckNAdd state2 private void jjCheckNAddStates int start int end do jjCheckNAdd jjnextStates start while start end public abstract class SortComparator implements SortComparatorSource public ScoreDocComparator newComparator final IndexReader reader final String fieldname throws IOException final String field fieldname intern final Comparable cachedValues FieldCache DEFAULT getCustom reader field SortComparator this return new ScoreDocComparator public int compare ScoreDoc ScoreDoc return cachedValues doc compareTo cachedValues doc public Comparable sortValue ScoreDoc return cachedValues doc public int sortType return SortField CUSTOM protected abstract Comparable getComparable String termtext public class ValueSourceQuery extends Query ValueSource valSrc public ValueSourceQuery ValueSource valSrc this valSrc valSrc public Query rewrite IndexReader reader throws IOException return this public void extractTerms Set terms private class ValueSourceWeight implements Weight Similarity similarity float queryNorm float queryWeight public ValueSourceWeight Searcher searcher this similarity getSimilarity searcher public Query getQuery return ValueSourceQuery this public float getValue return queryWeight public float sumOfSquaredWeights throws IOException queryWeight getBoost return queryWeight queryWeight public void normalize float norm this queryNorm norm queryWeight this queryNorm public Scorer scorer IndexReader reader throws IOException return new ValueSourceScorer similarity reader this public Explanation explain IndexReader reader int doc throws IOException return scorer reader explain doc private class ValueSourceScorer extends Scorer private final IndexReader reader private final ValueSourceWeight weight private final int maxDoc private final float qWeight private int doc private final DocValues vals private ValueSourceScorer Similarity similarity IndexReader reader ValueSourceWeight throws IOException super similarity this weight this qWeight getValue this reader reader this maxDoc reader maxDoc vals valSrc getValues reader public boolean next throws IOException for doc if doc maxDoc return false if reader isDeleted doc continue return true public int doc return doc public float score throws IOException return qWeight vals floatVal doc public boolean skipTo int target throws IOException doc target return next public Explanation explain int doc throws IOException float sc qWeight vals floatVal doc Explanation result new ComplexExplanation true sc ValueSourceQuery this toString result addDetail vals explain doc result addDetail new Explanation getBoost result addDetail new Explanation weight queryNorm return result protected Weight createWeight Searcher searcher return new ValueSourceQuery ValueSourceWeight searcher public String toString String field return valSrc toString ToStringUtils boost getBoost public boolean equals Object if getClass getClass return false ValueSourceQuery other ValueSourceQuery return this getBoost other getBoost this valSrc equals other valSrc public int hashCode return getClass hashCode valSrc hashCode Float floatToIntBits getBoost public abstract class TermEnum public abstract boolean next throws IOException public abstract Term term public abstract int docFreq public abstract void close throws IOException public boolean skipTo Term target throws IOException do if next return false while target compareTo term return true public class SimpleMapCache extends Cache Map map public SimpleMapCache this new HashMap public SimpleMapCache Map map this map map public Object get Object key return map get key public void put Object key Object value map put key value public void close public boolean containsKey Object key return map containsKey key public Set keySet return map keySet Cache getSynchronizedCache return new SynchronizedSimpleMapCache this private static class SynchronizedSimpleMapCache extends SimpleMapCache Object mutex SimpleMapCache cache SynchronizedSimpleMapCache SimpleMapCache cache this cache cache this mutex this public void put Object key Object value synchronized mutex cache put key value public Object get Object key synchronized mutex return cache get key public boolean containsKey Object key synchronized mutex return cache containsKey key public void close synchronized mutex cache close public Set keySet synchronized mutex return cache keySet Cache getSynchronizedCache return this public class PrefixFilter extends Filter protected final Term prefix public PrefixFilter Term prefix this prefix prefix public Term getPrefix return prefix public BitSet bits IndexReader reader throws IOException final BitSet bitSet new BitSet reader maxDoc new PrefixGenerator prefix public void handleDoc int doc bitSet set doc generate reader return bitSet public DocIdSet getDocIdSet IndexReader reader throws IOException final OpenBitSet bitSet new OpenBitSet reader maxDoc new PrefixGenerator prefix public void handleDoc int doc bitSet set doc generate reader return bitSet public String toString StringBuffer buffer new StringBuffer buffer append buffer append prefix toString buffer append return buffer toString interface IdGenerator public void generate IndexReader reader throws IOException public void handleDoc int doc abstract class PrefixGenerator implements IdGenerator protected final Term prefix PrefixGenerator Term prefix this prefix prefix public void generate IndexReader reader throws IOException TermEnum enumerator reader terms prefix TermDocs termDocs reader termDocs try String prefixText prefix text String prefixField prefix field do Term term enumerator term if term null term text startsWith prefixText termDocs seek term while termDocs next handleDoc termDocs doc else break while enumerator next finally termDocs close enumerator close final class TermVectorsWriter private IndexOutput tvx null tvd null tvf null private FieldInfos fieldInfos final UnicodeUtil UTF8Result utf8Results new UnicodeUtil UTF8Result new UnicodeUtil UTF8Result new UnicodeUtil UTF8Result public TermVectorsWriter Directory directory String segment FieldInfos fieldInfos throws IOException tvx directory createOutput segment IndexFileNames VECTORS_INDEX_EXTENSION tvx writeInt TermVectorsReader FORMAT_CURRENT tvd directory createOutput segment IndexFileNames VECTORS_DOCUMENTS_EXTENSION tvd writeInt TermVectorsReader FORMAT_CURRENT tvf directory createOutput segment IndexFileNames VECTORS_FIELDS_EXTENSION tvf writeInt TermVectorsReader FORMAT_CURRENT this fieldInfos fieldInfos public final void addAllDocVectors TermFreqVector vectors throws IOException tvx writeLong tvd getFilePointer tvx writeLong tvf getFilePointer if vectors null final int numFields vectors length tvd writeVInt numFields long fieldPointers new long numFields for int numFields fieldPointers tvf getFilePointer final int fieldNumber fieldInfos fieldNumber vectors getField tvd writeVInt fieldNumber final int numTerms vectors size tvf writeVInt numTerms final TermPositionVector tpVector final byte bits final boolean storePositions final boolean storeOffsets if vectors instanceof TermPositionVector tpVector TermPositionVector vectors storePositions tpVector size tpVector getTermPositions null storeOffsets tpVector size tpVector getOffsets null bits byte storePositions TermVectorsReader STORE_POSITIONS_WITH_TERMVECTOR storeOffsets TermVectorsReader STORE_OFFSET_WITH_TERMVECTOR else tpVector null bits storePositions false storeOffsets false tvf writeVInt bits final String terms vectors getTerms final int freqs vectors getTermFrequencies int utf8Upto utf8Results length for int numTerms UnicodeUtil UTF16toUTF8 terms terms length utf8Results utf8Upto int start StringHelper bytesDifference utf8Results utf8Upto result utf8Results utf8Upto length utf8Results utf8Upto result utf8Results utf8Upto length int length utf8Results utf8Upto length start utf8Upto utf8Upto final int termFreq freqs tvf writeVInt termFreq if storePositions final int positions tpVector getTermPositions if positions null throw new IllegalStateException assert positions length termFreq int lastPosition for int positions length final int position positions tvf writeVInt position lastPosition lastPosition position if storeOffsets final TermVectorOffsetInfo offsets tpVector getOffsets if offsets null throw new IllegalStateException assert offsets length termFreq int lastEndOffset for int offsets length final int startOffset offsets getStartOffset final int endOffset offsets getEndOffset tvf writeVInt startOffset lastEndOffset tvf writeVInt endOffset startOffset lastEndOffset endOffset long lastFieldPointer fieldPointers for int numFields final long fieldPointer fieldPointers tvd writeVLong fieldPointer lastFieldPointer lastFieldPointer fieldPointer else tvd writeVInt final void addRawDocuments TermVectorsReader reader int tvdLengths int tvfLengths int numDocs throws IOException long tvdPosition tvd getFilePointer long tvfPosition tvf getFilePointer long tvdStart tvdPosition long tvfStart tvfPosition for int numDocs tvx writeLong tvdPosition tvdPosition tvdLengths tvx writeLong tvfPosition tvfPosition tvfLengths tvd copyBytes reader getTvdStream tvdPosition tvdStart tvf copyBytes reader getTvfStream tvfPosition tvfStart assert tvd getFilePointer tvdPosition assert tvf getFilePointer tvfPosition final void close throws IOException IOException keep null if tvx null try tvx close catch IOException if keep null keep if tvd null try tvd close catch IOException if keep null keep if tvf null try tvf close catch IOException if keep null keep if keep null throw IOException keep fillInStackTrace final class TermScorer extends Scorer private Weight weight private TermDocs termDocs private byte norms private float weightValue private int doc private int pointer private int pointerMax private static final int SCORE_CACHE_SIZE private float scoreCache new float SCORE_CACHE_SIZE TermScorer Weight weight TermDocs td Similarity similarity byte norms super similarity this weight weight this termDocs td this norms norms this weightValue weight getValue for int SCORE_CACHE_SIZE scoreCache getSimilarity tf weightValue public void score HitCollector hc throws IOException next score hc Integer MAX_VALUE protected boolean score HitCollector int end throws IOException float normDecoder Similarity getNormDecoder int freqs pointer if pointer pointerMax if pointerMax pointer else return false doc docs pointer return true public int doc return doc public boolean next throws IOException pointer if pointer pointerMax if pointerMax pointer else return false doc docs pointer return true public float score int freqs pointer public boolean skipTo int target throws IOException for pointer pointer pointerMax pointer if docs pointer target doc docs pointer return true boolean result termDocs skipTo target if result pointerMax pointer docs pointer doc termDocs doc freqs pointer termDocs freq else doc Integer MAX_VALUE return result public Explanation explain int doc throws IOException TermQuery query TermQuery weight getQuery Explanation tfExplanation new Explanation int tf while pointer pointerMax if docs pointer doc tf freqs pointer pointer if tf if termDocs skipTo doc if termDocs doc doc tf termDocs freq termDocs close tfExplanation setValue getSimilarity tf tf tfExplanation setDescription query getTerm tf return tfExplanation public String toString return weight public class FieldScoreQuery extends ValueSourceQuery public static class Type public static final Type BYTE new Type public static final Type SHORT new Type public static final Type INT new Type public static final Type FLOAT new Type private String typeName private Type String name this typeName name public String toString return getClass getName typeName public FieldScoreQuery String field Type type super getValueSource field type private static ValueSource getValueSource String field Type type if type Type BYTE return new ByteFieldSource field if type Type SHORT return new ShortFieldSource field if type Type INT return new IntFieldSource field if type Type FLOAT return new FloatFieldSource field throw new IllegalArgumentException type public class ShortFieldSource extends FieldCacheSource private FieldCache ShortParser parser public ShortFieldSource String field this field null public ShortFieldSource String field FieldCache ShortParser parser super field this parser parser public String description return super description public DocValues getCachedFieldValues FieldCache cache String field IndexReader reader throws IOException final short arr parser null cache getShorts reader field cache getShorts reader field parser return new DocValues public float floatVal int doc return float arr doc public int intVal int doc return arr doc public String toString int doc return description intVal doc Object getInnerArray return arr public boolean cachedFieldSourceEquals FieldCacheSource if getClass ShortFieldSource class return false ShortFieldSource other ShortFieldSource return this parser null other parser null this parser getClass other parser getClass public int cachedFieldSourceHashCode return parser null Short class hashCode parser getClass hashCode final class FieldsReader private final FieldInfos fieldInfos private final IndexInput cloneableFieldsStream private final IndexInput fieldsStream private final IndexInput indexStream private int numTotalDocs private int size private boolean closed private final int format private final int formatSize private int docStoreOffset private CloseableThreadLocal fieldsStreamTL new CloseableThreadLocal FieldsReader Directory String segment FieldInfos fn throws IOException this segment fn BufferedIndexInput BUFFER_SIZE FieldsReader Directory String segment FieldInfos fn int readBufferSize throws IOException this segment fn readBufferSize FieldsReader Directory String segment FieldInfos fn int readBufferSize int docStoreOffset int size throws IOException boolean success false try fieldInfos fn cloneableFieldsStream openInput segment IndexFileNames FIELDS_EXTENSION readBufferSize indexStream openInput segment IndexFileNames FIELDS_INDEX_EXTENSION readBufferSize int firstInt indexStream readInt if firstInt format else format firstInt if format FieldsWriter FORMAT_CURRENT throw new CorruptIndexException format FieldsWriter FORMAT_CURRENT if format FieldsWriter FORMAT formatSize else formatSize if format FieldsWriter FORMAT_VERSION_UTF8_LENGTH_IN_BYTES cloneableFieldsStream setModifiedUTF8StringsMode fieldsStream IndexInput cloneableFieldsStream clone final long indexSize indexStream length formatSize if docStoreOffset this docStoreOffset docStoreOffset this size size assert int indexSize size this docStoreOffset indexSize size docStoreOffset else this docStoreOffset this size int indexSize numTotalDocs int indexSize success true finally if success close protected final void ensureOpen throws AlreadyClosedException if closed throw new AlreadyClosedException final void close throws IOException if closed if fieldsStream null fieldsStream close if cloneableFieldsStream null cloneableFieldsStream close if indexStream null indexStream close fieldsStreamTL close closed true final int size return size private final void seekIndex int docID throws IOException indexStream seek formatSize docID docStoreOffset boolean canReadRawDocs return format FieldsWriter FORMAT_VERSION_UTF8_LENGTH_IN_BYTES final Document doc int FieldSelector fieldSelector throws CorruptIndexException IOException seekIndex long position indexStream readLong fieldsStream seek position Document doc new Document int numFields fieldsStream readVInt for int numFields int fieldNumber fieldsStream readVInt FieldInfo fi fieldInfos fieldInfo fieldNumber FieldSelectorResult acceptField fieldSelector null FieldSelectorResult LOAD fieldSelector accept fi name byte bits fieldsStream readByte assert bits FieldsWriter FIELD_IS_COMPRESSED FieldsWriter FIELD_IS_TOKENIZED FieldsWriter FIELD_IS_BINARY boolean compressed bits FieldsWriter FIELD_IS_COMPRESSED boolean tokenize bits FieldsWriter FIELD_IS_TOKENIZED boolean binary bits FieldsWriter FIELD_IS_BINARY if acceptField equals FieldSelectorResult LOAD addField doc fi binary compressed tokenize else if acceptField equals FieldSelectorResult LOAD_FOR_MERGE addFieldForMerge doc fi binary compressed tokenize else if acceptField equals FieldSelectorResult LOAD_AND_BREAK addField doc fi binary compressed tokenize else if acceptField equals FieldSelectorResult LAZY_LOAD addFieldLazy doc fi binary compressed tokenize else if acceptField equals FieldSelectorResult SIZE skipField binary compressed addFieldSize doc fi binary compressed else if acceptField equals FieldSelectorResult SIZE_AND_BREAK addFieldSize doc fi binary compressed break else skipField binary compressed return doc final IndexInput rawDocs int lengths int startDocID int numDocs throws IOException seekIndex startDocID long startOffset indexStream readLong long lastOffset startOffset int count while count numDocs final long offset final int docID docStoreOffset startDocID count assert docID numTotalDocs if docID numTotalDocs offset indexStream readLong else offset fieldsStream length lengths count int offset lastOffset lastOffset offset fieldsStream seek startOffset return fieldsStream private void skipField boolean binary boolean compressed throws IOException skipField binary compressed fieldsStream readVInt private void skipField boolean binary boolean compressed int toRead throws IOException if format FieldsWriter FORMAT_VERSION_UTF8_LENGTH_IN_BYTES binary compressed fieldsStream seek fieldsStream getFilePointer toRead else fieldsStream skipChars toRead private void addFieldLazy Document doc FieldInfo fi boolean binary boolean compressed boolean tokenize throws IOException if binary int toRead fieldsStream readVInt long pointer fieldsStream getFilePointer if compressed doc add new LazyField fi name Field Store COMPRESS toRead pointer binary else doc add new LazyField fi name Field Store YES toRead pointer binary fieldsStream seek pointer toRead else Field Store store Field Store YES Field Index index getIndexType fi tokenize Field TermVector termVector getTermVectorType fi Fieldable if compressed store Field Store COMPRESS int toRead fieldsStream readVInt long pointer fieldsStream getFilePointer new LazyField fi name store toRead pointer binary fieldsStream seek pointer toRead setOmitNorms fi omitNorms else int length fieldsStream readVInt long pointer fieldsStream getFilePointer if format FieldsWriter FORMAT_VERSION_UTF8_LENGTH_IN_BYTES fieldsStream seek pointer length else fieldsStream skipChars length new LazyField fi name store index termVector length pointer binary setOmitNorms fi omitNorms doc add private void addFieldForMerge Document doc FieldInfo fi boolean binary boolean compressed boolean tokenize throws IOException Object data if binary compressed int toRead fieldsStream readVInt final byte new byte toRead fieldsStream readBytes length data else data fieldsStream readString doc add new FieldForMerge data fi binary compressed tokenize private void addField Document doc FieldInfo fi boolean binary boolean compressed boolean tokenize throws CorruptIndexException IOException if binary int toRead fieldsStream readVInt final byte new byte toRead fieldsStream readBytes length if compressed doc add new Field fi name uncompress Field Store COMPRESS else doc add new Field fi name Field Store YES else Field Store store Field Store YES Field Index index getIndexType fi tokenize Field TermVector termVector getTermVectorType fi Fieldable if compressed store Field Store COMPRESS int toRead fieldsStream readVInt final byte new byte toRead fieldsStream readBytes length store index termVector setOmitNorms fi omitNorms else store index termVector setOmitNorms fi omitNorms doc add private int addFieldSize Document doc FieldInfo fi boolean binary boolean compressed throws IOException int size fieldsStream readVInt bytesize binary compressed size size byte sizebytes new byte sizebytes byte bytesize sizebytes byte bytesize sizebytes byte bytesize sizebytes byte bytesize doc add new Field fi name sizebytes Field Store YES return size private Field TermVector getTermVectorType FieldInfo fi Field TermVector termVector null if fi storeTermVector if fi storeOffsetWithTermVector if fi storePositionWithTermVector termVector Field TermVector WITH_POSITIONS_OFFSETS else termVector Field TermVector WITH_OFFSETS else if fi storePositionWithTermVector termVector Field TermVector WITH_POSITIONS else termVector Field TermVector YES else termVector Field TermVector NO return termVector private Field Index getIndexType FieldInfo fi boolean tokenize Field Index index if fi isIndexed tokenize index Field Index ANALYZED else if fi isIndexed tokenize index Field Index NOT_ANALYZED else index Field Index NO return index private class LazyField extends AbstractField implements Fieldable private int toRead private long pointer public LazyField String name Field Store store int toRead long pointer boolean isBinary super name store Field Index NO Field TermVector NO this toRead toRead this pointer pointer this isBinary isBinary lazy true public LazyField String name Field Store store Field Index index Field TermVector termVector int toRead long pointer boolean isBinary super name store index termVector this toRead toRead this pointer pointer this isBinary isBinary lazy true private IndexInput getFieldStream IndexInput localFieldsStream IndexInput fieldsStreamTL get if localFieldsStream null localFieldsStream IndexInput cloneableFieldsStream clone fieldsStreamTL set localFieldsStream return localFieldsStream public byte binaryValue return getBinaryValue null public Reader readerValue ensureOpen return null public TokenStream tokenStreamValue ensureOpen return null public String stringValue ensureOpen if isBinary return null else if fieldsData null IndexInput localFieldsStream getFieldStream try localFieldsStream seek pointer if isCompressed final byte new byte toRead localFieldsStream readBytes length fieldsData new String uncompress else if format FieldsWriter FORMAT_VERSION_UTF8_LENGTH_IN_BYTES byte bytes new byte toRead localFieldsStream readBytes bytes toRead fieldsData new String bytes else char chars new char toRead localFieldsStream readChars chars toRead fieldsData new String chars catch IOException throw new FieldReaderException return String fieldsData public long getPointer ensureOpen return pointer public void setPointer long pointer ensureOpen this pointer pointer public int getToRead ensureOpen return toRead public void setToRead int toRead ensureOpen this toRead toRead public byte getBinaryValue byte result ensureOpen if isBinary if fieldsData null final byte if result null result length toRead new byte toRead else result IndexInput localFieldsStream getFieldStream try localFieldsStream seek pointer localFieldsStream readBytes toRead if isCompressed true fieldsData uncompress else fieldsData catch IOException throw new FieldReaderException binaryOffset binaryLength toRead return byte fieldsData else return null private final byte uncompress final byte input throws CorruptIndexException IOException ByteArrayOutputStream bos new ByteArrayOutputStream input length Inflater decompressor new Inflater try decompressor setInput input byte buf new byte while decompressor finished try int count decompressor inflate buf bos write buf count catch DataFormatException CorruptIndexException newException new CorruptIndexException toString newException initCause throw newException finally decompressor end return bos toByteArray final static class FieldForMerge extends AbstractField public String stringValue return String this fieldsData public Reader readerValue return null public byte binaryValue return byte this fieldsData public TokenStream tokenStreamValue return null public FieldForMerge Object value FieldInfo fi boolean binary boolean compressed boolean tokenize this isStored true this fieldsData value this isCompressed compressed this isBinary binary this isTokenized tokenize this name fi name intern this isIndexed fi isIndexed this omitNorms fi omitNorms this storeOffsetWithTermVector fi storeOffsetWithTermVector this storePositionWithTermVector fi storePositionWithTermVector this storeTermVector fi storeTermVector public abstract class PriorityQueue private int size private int maxSize protected Object heap protected abstract boolean lessThan Object Object protected final void initialize int maxSize size int heapSize if maxSize heapSize else heapSize maxSize heap new Object heapSize this maxSize maxSize public final void put Object element size heap size element upHeap public boolean insert Object element return insertWithOverflow element element public Object insertWithOverflow Object element if size maxSize put element return null else if size lessThan element heap Object ret heap heap element adjustTop return ret else return element public final Object top return heap public final Object pop if size size return result else return null public final void adjustTop downHeap public final int size return size public final void clear for int size heap null size private final void upHeap int size int while lessThan node heap private final void downHeap int int if size lessThan heap heap while size lessThan heap node if size lessThan heap heap public abstract class Query implements java io Serializable Cloneable public void setBoost float boost public float getBoost return boost public abstract String toString String field public String toString return toString protected Weight createWeight Searcher searcher throws IOException throw new UnsupportedOperationException public Weight weight Searcher searcher throws IOException Query query searcher rewrite this Weight weight query createWeight searcher float sum weight sumOfSquaredWeights float norm getSimilarity searcher queryNorm sum weight normalize norm return weight public Query rewrite IndexReader reader throws IOException return this public Query combine Query queries HashSet uniques new HashSet for int queries length Query query queries BooleanClause clauses null boolean splittable query instanceof BooleanQuery if splittable BooleanQuery bq BooleanQuery query splittable bq isCoordDisabled clauses bq getClauses for int splittable clauses length splittable clauses getOccur BooleanClause Occur SHOULD if splittable for int clauses length uniques add clauses getQuery else uniques add query if uniques size return Query uniques iterator next Iterator it uniques iterator BooleanQuery result new BooleanQuery true while it hasNext result add Query it next BooleanClause Occur SHOULD return result public void extractTerms Set terms throw new UnsupportedOperationException public static Query mergeBooleanQueries Query queries HashSet allClauses new HashSet for int queries length BooleanClause clauses BooleanQuery queries getClauses for int clauses length allClauses add clauses boolean coordDisabled queries length false BooleanQuery queries isCoordDisabled BooleanQuery result new BooleanQuery coordDisabled Iterator allClauses iterator while hasNext result add BooleanClause next return result public Similarity getSimilarity Searcher searcher return searcher getSimilarity public Object clone try return Query super clone catch CloneNotSupportedException throw new RuntimeException getMessage public class FilterManager protected static FilterManager manager protected static final int DEFAULT_CACHE_CLEAN_SIZE protected static final long DEFAULT_CACHE_SLEEP_TIME protected Map cache protected int cacheCleanSize protected long cleanSleepTime protected FilterCleaner filterCleaner public synchronized static FilterManager getInstance if manager null manager new FilterManager return manager protected FilterManager cache new HashMap filterCleaner new FilterCleaner Thread fcThread new Thread filterCleaner fcThread setDaemon true fcThread start public void setCacheSize int cacheCleanSize this cacheCleanSize cacheCleanSize public void setCleanThreadSleepTime long cleanSleepTime this cleanSleepTime cleanSleepTime public Filter getFilter Filter filter synchronized cache FilterItem fi null fi FilterItem cache get new Integer filter hashCode if fi null fi timestamp new Date getTime return fi filter cache put new Integer filter hashCode new FilterItem filter return filter protected class FilterItem public Filter filter public long timestamp public FilterItem Filter filter this filter filter this timestamp new Date getTime protected class FilterCleaner implements Runnable private boolean running true private TreeSet sortedFilterItems public FilterCleaner sortedFilterItems new TreeSet new Comparator public int compare Object Object if instanceof Map Entry instanceof Map Entry FilterItem fia FilterItem Map Entry getValue FilterItem fib FilterItem Map Entry getValue if fia timestamp fib timestamp return if fia timestamp fib timestamp return return else throw new ClassCastException public void run while running if cache size cacheCleanSize sortedFilterItems clear synchronized cache sortedFilterItems addAll cache entrySet Iterator it sortedFilterItems iterator int numToDelete int cache size cacheCleanSize int counter while it hasNext counter numToDelete Map Entry entry Map Entry it next cache remove entry getKey sortedFilterItems clear try Thread sleep cleanSleepTime catch InterruptedException public abstract class Similarity implements Serializable private static Similarity defaultImpl new DefaultSimilarity public static void setDefault Similarity similarity Similarity defaultImpl similarity public static Similarity getDefault return Similarity defaultImpl private static final float NORM_TABLE new float static for int NORM_TABLE SmallFloat byte315ToFloat byte public static float decodeNorm byte public static float getNormDecoder return NORM_TABLE public abstract float lengthNorm String fieldName int numTokens public abstract float queryNorm float sumOfSquaredWeights public static byte encodeNorm float return SmallFloat floatToByte315 public float tf int freq return tf float freq public abstract float sloppyFreq int distance public abstract float tf float freq public float idf Term term Searcher searcher throws IOException return idf searcher docFreq term searcher maxDoc public float idf Collection terms Searcher searcher throws IOException float idf Iterator terms iterator while hasNext idf idf Term next searcher return idf public abstract float idf int docFreq int numDocs public abstract float coord int overlap int maxOverlap public float scorePayload String fieldName byte payload int offset int length return public class PrefixQuery extends Query private Term prefix public PrefixQuery Term prefix this prefix prefix public Term getPrefix return prefix public Query rewrite IndexReader reader throws IOException BooleanQuery query new BooleanQuery true TermEnum enumerator reader terms prefix try String prefixText prefix text String prefixField prefix field do Term term enumerator term if term null term text startsWith prefixText else break while enumerator next finally enumerator close return query public String toString String field StringBuffer buffer new StringBuffer if prefix field equals field buffer append prefix field buffer append buffer append prefix text buffer append buffer append ToStringUtils boost getBoost return buffer toString public boolean equals Object if instanceof PrefixQuery return false PrefixQuery other PrefixQuery return this getBoost other getBoost this prefix equals other prefix public int hashCode return Float floatToIntBits getBoost prefix hashCode public class StandardTokenizer extends Tokenizer private final StandardTokenizerImpl scanner public static final int ALPHANUM public static final int APOSTROPHE public static final int ACRONYM public static final int COMPANY public static final int EMAIL public static final int HOST public static final int NUM public static final int CJ public static final int ACRONYM_DEP public static final String TOKEN_TYPES new String public static final String tokenImage TOKEN_TYPES private boolean replaceInvalidAcronym false void setInput Reader reader this input reader private int maxTokenLength StandardAnalyzer DEFAULT_MAX_TOKEN_LENGTH public void setMaxTokenLength int length this maxTokenLength length public int getMaxTokenLength return maxTokenLength public StandardTokenizer Reader input this input input this scanner new StandardTokenizerImpl input public StandardTokenizer Reader input boolean replaceInvalidAcronym this replaceInvalidAcronym replaceInvalidAcronym this input input this scanner new StandardTokenizerImpl input public Token next final Token reusableToken throws IOException assert reusableToken null int posIncr while true int tokenType scanner getNextToken if tokenType StandardTokenizerImpl YYEOF return null if scanner yylength maxTokenLength reusableToken clear reusableToken setPositionIncrement posIncr scanner getText reusableToken final int start scanner yychar reusableToken setStartOffset start reusableToken setEndOffset start reusableToken termLength if tokenType StandardTokenizerImpl ACRONYM_DEP if replaceInvalidAcronym reusableToken setType StandardTokenizerImpl TOKEN_TYPES StandardTokenizerImpl HOST else reusableToken setType StandardTokenizerImpl TOKEN_TYPES StandardTokenizerImpl ACRONYM else reusableToken setType StandardTokenizerImpl TOKEN_TYPES tokenType return reusableToken else posIncr public void reset throws IOException super reset scanner yyreset input public void reset Reader reader throws IOException input reader reset public boolean isReplaceInvalidAcronym return replaceInvalidAcronym public void setReplaceInvalidAcronym boolean replaceInvalidAcronym this replaceInvalidAcronym replaceInvalidAcronym public class SortedTermVectorMapper extends TermVectorMapper private SortedSet currentSet private Map termToTVE new HashMap private boolean storeOffsets private boolean storePositions public static final String ALL public SortedTermVectorMapper Comparator comparator this false false comparator public SortedTermVectorMapper boolean ignoringPositions boolean ignoringOffsets Comparator comparator super ignoringPositions ignoringOffsets currentSet new TreeSet comparator public void map String term int frequency TermVectorOffsetInfo offsets int positions TermVectorEntry entry TermVectorEntry termToTVE get term if entry null entry new TermVectorEntry ALL term frequency storeOffsets true offsets null storePositions true positions null termToTVE put term entry currentSet add entry else entry setFrequency entry getFrequency frequency if storeOffsets TermVectorOffsetInfo existingOffsets entry getOffsets if existingOffsets null offsets null offsets length TermVectorOffsetInfo newOffsets new TermVectorOffsetInfo existingOffsets length offsets length System arraycopy existingOffsets newOffsets existingOffsets length System arraycopy offsets newOffsets existingOffsets length offsets length entry setOffsets newOffsets else if existingOffsets null offsets null offsets length entry setOffsets offsets if storePositions int existingPositions entry getPositions if existingPositions null positions null positions length int newPositions new int existingPositions length positions length System arraycopy existingPositions newPositions existingPositions length System arraycopy positions newPositions existingPositions length positions length entry setPositions newPositions else if existingPositions null positions null positions length entry setPositions positions public void setExpectations String field int numTerms boolean storeOffsets boolean storePositions this storeOffsets storeOffsets this storePositions storePositions public SortedSet getTermVectorEntrySet return currentSet public class ByteFieldSource extends FieldCacheSource private FieldCache ByteParser parser public ByteFieldSource String field this field null public ByteFieldSource String field FieldCache ByteParser parser super field this parser parser public String description return super description public DocValues getCachedFieldValues FieldCache cache String field IndexReader reader throws IOException final byte arr parser null cache getBytes reader field cache getBytes reader field parser return new DocValues public float floatVal int doc return float arr doc public int intVal int doc return arr doc public String toString int doc return description intVal doc Object getInnerArray return arr public boolean cachedFieldSourceEquals FieldCacheSource if getClass ByteFieldSource class return false ByteFieldSource other ByteFieldSource return this parser null other parser null this parser getClass other parser getClass public int cachedFieldSourceHashCode return parser null Byte class hashCode parser getClass hashCode public class OrdFieldSource extends ValueSource protected String field public OrdFieldSource String field this field field public String description return field public DocValues getValues IndexReader reader throws IOException final int arr FieldCache DEFAULT getStringIndex reader field order return new DocValues public float floatVal int doc return float arr doc public String strVal int doc return Integer toString arr doc public String toString int doc return description intVal doc Object getInnerArray return arr public boolean equals Object if getClass OrdFieldSource class return false OrdFieldSource other OrdFieldSource return this field equals other field private static final int hcode OrdFieldSource class hashCode public int hashCode return hcode field hashCode public class MapFieldSelector implements FieldSelector Map fieldSelections public MapFieldSelector Map fieldSelections this fieldSelections fieldSelections public MapFieldSelector List fields fieldSelections new HashMap fields size for int fields size fieldSelections put fields get FieldSelectorResult LOAD public MapFieldSelector String fields fieldSelections new HashMap fields length for int fields length fieldSelections put fields FieldSelectorResult LOAD public FieldSelectorResult accept String field FieldSelectorResult selection FieldSelectorResult fieldSelections get field return selection null selection FieldSelectorResult NO_LOAD class PorterStemmer private char k0 private boolean dirty false private static final int EXTRA public PorterStemmer new char INC public void reset dirty false public void add char ch if length EXTRA char new_b new char length INC System arraycopy new_b length new_b ch public String toString return new String public int getResultLength return public char getResultBuffer return private final boolean cons int switch case case case case case return false case return k0 true cons default return true private final int int int k0 while true if return if cons break while true while true if return if cons break while true if return if cons break private final boolean vowelinstem int for k0 if cons return true return false private final boolean doublec int if k0 return false if return false return cons private final boolean cvc int if k0 cons cons cons return false else int ch if ch ch ch return false return true private final boolean ends String int length int if k0 return false for int if charAt return false return true void setto String int length int for int charAt dirty true void String if setto private final void step1 if if ends else if ends setto else if if ends if else if ends ends vowelinstem if ends setto else if ends setto else if ends setto else if doublec int ch if ch ch ch else if cvc setto private final void step2 if ends vowelinstem dirty true private final void step3 switch case if ends break if ends break break case if ends break if ends break break case if ends break break case if ends break if ends break if ends break if ends break if ends break break case if ends break if ends break if ends break break case if ends break if ends break if ends break if ends break break case if ends break if ends break if ends break break case if ends break private final void step4 switch case if ends break if ends break if ends break break case if ends break break case if ends break if ends break break case if ends break break private final void step5 switch case if ends break return case if ends break if ends break return case if ends break return case if ends break return case if ends break if ends break return case if ends break if ends break if ends break if ends break return case if ends break if ends break return case if ends break return case if ends break if ends break return case if ends break return case if ends break return case if ends break return default return if private final void step6 if int if cvc if doublec public String stem String if stem toCharArray length return toString else return public boolean stem char word return stem word word length public boolean stem char wordBuffer int offset int wordLen reset if length wordLen char new_b new char wordLen EXTRA new_b System arraycopy wordBuffer offset wordLen wordLen return stem public boolean stem char word int wordLen return stem word wordLen public boolean stem return stem public boolean stem int i0 k0 i0 if k0 step1 step2 step3 step4 step5 step6 if dirty true return dirty public static void main String args PorterStemmer new PorterStemmer for int args length try InputStream in new FileInputStream args byte buffer new byte int bufferLen offset ch bufferLen in read buffer offset reset while true if offset bufferLen ch buffer offset else bufferLen in read buffer offset if bufferLen ch else ch buffer offset if Character isLetter char ch add Character toLowerCase char ch else stem System out print toString reset if ch break else System out print char ch in close catch IOException System out println args public interface TermPositions extends TermDocs int nextPosition throws IOException int getPayloadLength byte getPayload byte data int offset throws IOException public boolean isPayloadAvailable public class DocIdBitSet extends DocIdSet private BitSet bitSet public DocIdBitSet BitSet bitSet this bitSet bitSet public DocIdSetIterator iterator return new DocIdBitSetIterator bitSet public BitSet getBitSet return this bitSet private static class DocIdBitSetIterator extends DocIdSetIterator private int docId private BitSet bitSet DocIdBitSetIterator BitSet bitSet this bitSet bitSet this docId public int doc assert docId return docId public boolean next return checkNextDocId bitSet nextSetBit docId public boolean skipTo int skipDocNr return checkNextDocId bitSet nextSetBit skipDocNr private boolean checkNextDocId int docId Integer MAX_VALUE return false else docId return true public abstract class TokenStream public Token next throws IOException final Token reusableToken new Token Token nextToken next reusableToken if nextToken null Payload nextToken getPayload if null nextToken setPayload Payload clone return nextToken public Token next final Token reusableToken throws IOException assert reusableToken null return next public void reset throws IOException public void close throws IOException public class SpanQueryFilter extends SpanFilter protected SpanQuery query protected SpanQueryFilter public SpanQueryFilter SpanQuery query this query query public DocIdSet getDocIdSet IndexReader reader throws IOException SpanFilterResult result bitSpans reader return result getDocIdSet public SpanFilterResult bitSpans IndexReader reader throws IOException final OpenBitSet bits new OpenBitSet reader maxDoc Spans spans query getSpans reader List tmp new ArrayList int currentDoc SpanFilterResult PositionInfo currentInfo null while spans next int doc spans doc bits set doc if currentDoc doc currentInfo new SpanFilterResult PositionInfo doc tmp add currentInfo currentDoc doc currentInfo addPosition spans start spans end return new SpanFilterResult bits tmp public SpanQuery getQuery return query public String toString return query public boolean equals Object return instanceof SpanQueryFilter this query equals SpanQueryFilter query public int hashCode return query hashCode public class RangeFilter extends Filter private String fieldName private String lowerTerm private String upperTerm private boolean includeLower private boolean includeUpper private Collator collator public RangeFilter String fieldName String lowerTerm String upperTerm boolean includeLower boolean includeUpper this fieldName fieldName this lowerTerm lowerTerm this upperTerm upperTerm this includeLower includeLower this includeUpper includeUpper if null lowerTerm null upperTerm throw new IllegalArgumentException if includeLower null lowerTerm throw new IllegalArgumentException if includeUpper null upperTerm throw new IllegalArgumentException public RangeFilter String fieldName String lowerTerm String upperTerm boolean includeLower boolean includeUpper Collator collator this fieldName lowerTerm upperTerm includeLower includeUpper this collator collator public static RangeFilter Less String fieldName String upperTerm return new RangeFilter fieldName null upperTerm false true public static RangeFilter More String fieldName String lowerTerm return new RangeFilter fieldName lowerTerm null true false public BitSet bits IndexReader reader throws IOException BitSet bits new BitSet reader maxDoc TermEnum enumerator null lowerTerm collator null reader terms new Term fieldName lowerTerm reader terms new Term fieldName try if enumerator term null return bits TermDocs termDocs reader termDocs try if collator null do Term term enumerator term if term null term field equals fieldName if lowerTerm null includeLower collator compare term text lowerTerm collator compare term text lowerTerm upperTerm null includeUpper collator compare term text upperTerm collator compare term text upperTerm termDocs seek enumerator term while termDocs next bits set termDocs doc while enumerator next boolean checkLower false checkLower true do Term term enumerator term if term null term field equals fieldName if checkLower null lowerTerm term text compareTo lowerTerm checkLower false if upperTerm null int compare upperTerm compareTo term text if compare includeUpper compare break termDocs seek enumerator term while termDocs next bits set termDocs doc else break while enumerator next finally termDocs close finally enumerator close return bits public DocIdSet getDocIdSet IndexReader reader throws IOException OpenBitSet bits new OpenBitSet reader maxDoc TermEnum enumerator null lowerTerm collator null reader terms new Term fieldName lowerTerm reader terms new Term fieldName try if enumerator term null return bits TermDocs termDocs reader termDocs try if collator null do Term term enumerator term if term null term field equals fieldName if lowerTerm null includeLower collator compare term text lowerTerm collator compare term text lowerTerm upperTerm null includeUpper collator compare term text upperTerm collator compare term text upperTerm termDocs seek enumerator term while termDocs next bits set termDocs doc while enumerator next boolean checkLower false checkLower true do Term term enumerator term if term null term field equals fieldName if checkLower null lowerTerm term text compareTo lowerTerm checkLower false if upperTerm null int compare upperTerm compareTo term text if compare includeUpper compare break termDocs seek enumerator term while termDocs next bits set termDocs doc else break while enumerator next finally termDocs close finally enumerator close return bits public String toString StringBuffer buffer new StringBuffer buffer append fieldName buffer append buffer append includeLower if null lowerTerm buffer append lowerTerm buffer append if null upperTerm buffer append upperTerm buffer append includeUpper return buffer toString public boolean equals Object if this return true if instanceof RangeFilter return false RangeFilter other RangeFilter if this fieldName equals other fieldName this includeLower other includeLower this includeUpper other includeUpper this collator null this collator equals other collator return false if this lowerTerm null this lowerTerm equals other lowerTerm other lowerTerm null return false if this upperTerm null this upperTerm equals other upperTerm other upperTerm null return false return true public int hashCode int fieldName hashCode lowerTerm null lowerTerm hashCode upperTerm null upperTerm hashCode includeLower includeUpper collator null collator hashCode return public class ReverseOrdFieldSource extends ValueSource public String field public ReverseOrdFieldSource String field this field field public String description return field public DocValues getValues IndexReader reader throws IOException final FieldCache StringIndex sindex FieldCache DEFAULT getStringIndex reader field final int arr sindex order final int end sindex lookup length return new DocValues public float floatVal int doc return float end arr doc public int intVal int doc return end arr doc public String strVal int doc return Integer toString intVal doc public String toString int doc return description strVal doc Object getInnerArray return arr public boolean equals Object if getClass ReverseOrdFieldSource class return false ReverseOrdFieldSource other ReverseOrdFieldSource return this field equals other field private static final int hcode ReverseOrdFieldSource class hashCode public int hashCode return hcode field hashCode public class ReqExclScorer extends Scorer private Scorer reqScorer exclScorer public ReqExclScorer Scorer reqScorer Scorer exclScorer this reqScorer reqScorer this exclScorer exclScorer private boolean firstTime true public boolean next throws IOException if firstTime if exclScorer next firstTime false if reqScorer null return false if reqScorer next return false if exclScorer null return toNonExcluded private boolean toNonExcluded throws IOException int exclDoc exclScorer doc do if reqDoc exclDoc else if reqDoc exclDoc if exclScorer skipTo reqDoc return true exclDoc exclScorer doc if exclDoc reqDoc while reqScorer next return false public int doc public float score throws IOException public boolean skipTo int target throws IOException if firstTime firstTime false if exclScorer skipTo target if reqScorer null return false if exclScorer null return reqScorer skipTo target if reqScorer skipTo target reqScorer null return false return toNonExcluded public Explanation explain int doc throws IOException Explanation res new Explanation if exclScorer skipTo doc exclScorer doc doc res setDescription else res setDescription res addDetail reqScorer explain doc return res public final class PorterStemFilter extends TokenFilter private PorterStemmer stemmer public PorterStemFilter TokenStream in super in stemmer new PorterStemmer public final Token next final Token reusableToken throws IOException assert reusableToken null Token nextToken input next reusableToken if nextToken null return null if stemmer stem nextToken termBuffer nextToken termLength nextToken setTermBuffer stemmer getResultBuffer stemmer getResultLength return nextToken final class TermInfosWriter public static final int FORMAT public static final int FORMAT_VERSION_UTF8_LENGTH_IN_BYTES public static final int FORMAT_CURRENT FORMAT_VERSION_UTF8_LENGTH_IN_BYTES private FieldInfos fieldInfos private IndexOutput output private TermInfo lastTi new TermInfo private long size int indexInterval int skipInterval int maxSkipLevels private long lastIndexPointer private boolean isIndex private byte lastTermBytes new byte private int lastTermBytesLength private int lastFieldNumber private TermInfosWriter other private UnicodeUtil UTF8Result utf8Result new UnicodeUtil UTF8Result TermInfosWriter Directory directory String segment FieldInfos fis int interval throws IOException initialize directory segment fis interval false other new TermInfosWriter directory segment fis interval true other other this private TermInfosWriter Directory directory String segment FieldInfos fis int interval boolean isIndex throws IOException initialize directory segment fis interval isIndex private void initialize Directory directory String segment FieldInfos fis int interval boolean isi throws IOException indexInterval interval fieldInfos fis isIndex isi output directory createOutput segment isIndex assert initUTF16Results void add Term term TermInfo ti throws IOException UnicodeUtil UTF16toUTF8 term text term text length utf8Result add fieldInfos fieldNumber term field utf8Result result utf8Result length ti UnicodeUtil UTF16Result utf16Result1 UnicodeUtil UTF16Result utf16Result2 private boolean initUTF16Results utf16Result1 new UnicodeUtil UTF16Result utf16Result2 new UnicodeUtil UTF16Result return true private int compareToLastTerm int fieldNumber byte termBytes int termBytesLength if lastFieldNumber fieldNumber final int cmp fieldInfos fieldName lastFieldNumber compareTo fieldInfos fieldName fieldNumber if cmp lastFieldNumber return cmp UnicodeUtil UTF8toUTF16 lastTermBytes lastTermBytesLength utf16Result1 UnicodeUtil UTF8toUTF16 termBytes termBytesLength utf16Result2 final int len if utf16Result1 length utf16Result2 length len utf16Result1 length else len utf16Result2 length for int len final char ch1 utf16Result1 result final char ch2 utf16Result2 result if ch1 ch2 return ch1 ch2 return utf16Result1 length utf16Result2 length void add int fieldNumber byte termBytes int termBytesLength TermInfo ti throws IOException assert compareToLastTerm fieldNumber termBytes termBytesLength isIndex termBytesLength lastTermBytesLength fieldInfos fieldName fieldNumber fieldNumber fieldInfos fieldName lastFieldNumber lastFieldNumber new String termBytes termBytesLength new String lastTermBytes lastTermBytesLength assert ti freqPointer lastTi freqPointer ti freqPointer lastTi freqPointer assert ti proxPointer lastTi proxPointer ti proxPointer lastTi proxPointer if isIndex size indexInterval output writeVLong ti proxPointer lastTi proxPointer if ti docFreq skipInterval output writeVInt ti skipOffset if isIndex output writeVLong other output getFilePointer lastIndexPointer lastFieldNumber fieldNumber lastTi set ti size private void writeTerm int fieldNumber byte termBytes int termBytesLength throws IOException int start final int limit termBytesLength lastTermBytesLength termBytesLength lastTermBytesLength while start limit if termBytes start lastTermBytes start break start final int length termBytesLength start if lastTermBytes length termBytesLength byte newArray new byte int termBytesLength System arraycopy lastTermBytes newArray start lastTermBytes newArray System arraycopy termBytes start lastTermBytes start length lastTermBytesLength termBytesLength void close throws IOException output writeLong size output close if isIndex other close class DefaultSkipListReader extends MultiLevelSkipListReader private boolean currentFieldStoresPayloads private long freqPointer private long proxPointer private int payloadLength private long lastFreqPointer private long lastProxPointer private int lastPayloadLength DefaultSkipListReader IndexInput skipStream int maxSkipLevels int skipInterval super skipStream maxSkipLevels skipInterval freqPointer new long maxSkipLevels proxPointer new long maxSkipLevels payloadLength new int maxSkipLevels void init long skipPointer long freqBasePointer long proxBasePointer int df boolean storesPayloads super init skipPointer df this currentFieldStoresPayloads storesPayloads lastFreqPointer freqBasePointer lastProxPointer proxBasePointer Arrays fill freqPointer freqBasePointer Arrays fill proxPointer proxBasePointer Arrays fill payloadLength long getFreqPointer return lastFreqPointer long getProxPointer return lastProxPointer int getPayloadLength return lastPayloadLength protected void seekChild int level throws IOException super seekChild level freqPointer level lastFreqPointer proxPointer level lastProxPointer payloadLength level lastPayloadLength protected void setLastSkipData int level super setLastSkipData level lastFreqPointer freqPointer level lastProxPointer proxPointer level lastPayloadLength payloadLength level protected int readSkipData int level IndexInput skipStream throws IOException int delta if currentFieldStoresPayloads delta skipStream readVInt if delta payloadLength level skipStream readVInt delta else delta skipStream readVInt freqPointer level skipStream readVInt proxPointer level skipStream readVInt return delta public class MultiSearcher extends Searcher private static class CachedDfSource extends Searcher public CachedDfSource Map dfMap int maxDoc Similarity similarity this dfMap dfMap this maxDoc maxDoc setSimilarity similarity public int docFreq Term term int df try df Integer dfMap get term intValue catch NullPointerException throw new IllegalArgumentException term text return df public int docFreqs Term terms int result new int terms length for int terms length result docFreq terms return result public int maxDoc return maxDoc public Query rewrite Query query return query public void close throw new UnsupportedOperationException public Document doc int throw new UnsupportedOperationException public Document doc int FieldSelector fieldSelector throw new UnsupportedOperationException public Explanation explain Weight weight int doc throw new UnsupportedOperationException public void search Weight weight Filter filter HitCollector results throw new UnsupportedOperationException public TopDocs search Weight weight Filter filter int throw new UnsupportedOperationException public TopFieldDocs search Weight weight Filter filter int Sort sort throw new UnsupportedOperationException private Searchable searchables private int starts private int maxDoc public MultiSearcher Searchable searchables throws IOException this searchables searchables for int searchables length starts maxDoc starts searchables length maxDoc public Searchable getSearchables return searchables protected int getStarts return starts public void close throws IOException for int searchables length searchables close public int docFreq Term term throws IOException int docFreq for int searchables length docFreq searchables docFreq term return docFreq public Document doc int throws CorruptIndexException IOException public Document doc int FieldSelector fieldSelector throws CorruptIndexException IOException while hi lo int mid lo hi int midValue starts mid if midValue hi mid else if midValue lo mid while mid searchables length starts mid midValue return mid return hi public int subDoc int return starts subSearcher public int maxDoc throws IOException return maxDoc public TopDocs search Weight weight Filter filter int nDocs throws IOException HitQueue hq new HitQueue nDocs int totalHits TopDocs docs searchables search weight filter nDocs ScoreDoc scoreDocs docs scoreDocs ScoreDoc scoreDoc scoreDocs if hq insert scoreDoc ScoreDoc scoreDocs new ScoreDoc hq size scoreDocs ScoreDoc hq pop float maxScore totalHits Float NEGATIVE_INFINITY scoreDocs score return new TopDocs totalHits scoreDocs maxScore public TopFieldDocs search Weight weight Filter filter int Sort sort throws IOException FieldDocSortedHitQueue hq null int totalHits float maxScore Float NEGATIVE_INFINITY TopFieldDocs docs searchables search weight filter sort if hq null hq new FieldDocSortedHitQueue docs fields maxScore Math max maxScore docs getMaxScore ScoreDoc scoreDocs docs scoreDocs ScoreDoc scoreDoc scoreDocs if hq insert scoreDoc ScoreDoc scoreDocs new ScoreDoc hq size scoreDocs ScoreDoc hq pop return new TopFieldDocs totalHits scoreDocs hq getFields maxScore public void search Weight weight Filter filter final HitCollector results throws IOException for int searchables length final int start starts searchables search weight filter new HitCollector public void collect int doc float score results collect doc start score public Query rewrite Query original throws IOException Query queries new Query searchables length for int searchables length queries searchables rewrite original return queries combine queries public Explanation explain Weight weight int doc throws IOException protected Weight createWeight Query original throws IOException Query rewrittenQuery rewrite original Set terms new HashSet rewrittenQuery extractTerms terms Term allTermsArray new Term terms size terms toArray allTermsArray int aggregatedDfs new int terms size for int searchables length int dfs searchables docFreqs allTermsArray for int aggregatedDfs length aggregatedDfs dfs HashMap dfMap new HashMap for int allTermsArray length dfMap put allTermsArray new Integer aggregatedDfs int numDocs maxDoc CachedDfSource cacheSim new CachedDfSource dfMap numDocs getSimilarity return rewrittenQuery weight cacheSim final class SegmentTermEnum extends TermEnum implements Cloneable private IndexInput input FieldInfos fieldInfos long size long position private TermBuffer termBuffer new TermBuffer private TermBuffer prevBuffer new TermBuffer private TermInfo termInfo new TermInfo private int format private boolean isIndex false long indexPointer int indexInterval int skipInterval int maxSkipLevels private int formatM1SkipInterval SegmentTermEnum IndexInput FieldInfos fis boolean isi throws CorruptIndexException IOException input fieldInfos fis isIndex isi int firstInt input readInt if firstInt format size firstInt indexInterval else format firstInt if format TermInfosWriter FORMAT_CURRENT throw new CorruptIndexException format TermInfosWriter FORMAT_CURRENT if format if isIndex indexInterval input readInt formatM1SkipInterval input readInt skipInterval Integer MAX_VALUE else indexInterval input readInt skipInterval input readInt if format TermInfosWriter FORMAT maxSkipLevels input readInt if format TermInfosWriter FORMAT_VERSION_UTF8_LENGTH_IN_BYTES termBuffer setPreUTF8Strings scanBuffer setPreUTF8Strings prevBuffer setPreUTF8Strings protected Object clone SegmentTermEnum clone null try clone SegmentTermEnum super clone catch CloneNotSupportedException clone input IndexInput input clone clone termInfo new TermInfo termInfo clone termBuffer TermBuffer termBuffer clone clone prevBuffer TermBuffer prevBuffer clone clone scanBuffer new TermBuffer return clone final void seek long pointer int Term TermInfo ti throws IOException input seek pointer position termBuffer set prevBuffer reset termInfo set ti public final boolean next throws IOException if position size prevBuffer set termBuffer termBuffer reset return false prevBuffer set termBuffer termBuffer read input fieldInfos if format if isIndex if termInfo docFreq formatM1SkipInterval termInfo skipOffset input readVInt else if termInfo docFreq skipInterval termInfo skipOffset input readVInt if isIndex return true final int scanTo Term term throws IOException scanBuffer set term int count while scanBuffer compareTo termBuffer next count return count public final Term term return termBuffer toTerm final Term prev return prevBuffer toTerm final TermInfo termInfo return new TermInfo termInfo final void termInfo TermInfo ti ti set termInfo public final int docFreq return termInfo docFreq final long freqPointer return termInfo freqPointer final long proxPointer return termInfo proxPointer public final void close throws IOException input close public class MultiPhraseQuery extends Query private String field private ArrayList termArrays new ArrayList private ArrayList positions new ArrayList private int slop public void setSlop int slop public int getSlop return slop public void add Term term add new Term term public void add Term terms int position if positions size position Integer positions get positions size intValue add terms position public void add Term terms int position if termArrays size field terms field for int terms length if terms field field throw new IllegalArgumentException field terms termArrays add terms positions add new Integer position public List getTermArrays return Collections unmodifiableList termArrays public int getPositions int result new int positions size for int positions size result Integer positions get intValue return result public void extractTerms Set terms for Iterator iter termArrays iterator iter hasNext Term arr Term iter next for int arr length terms add arr private class MultiPhraseWeight implements Weight private Similarity similarity private float value private float idf private float queryNorm private float queryWeight public MultiPhraseWeight Searcher searcher throws IOException this similarity getSimilarity searcher Iterator termArrays iterator while hasNext Term terms Term next for int terms length idf getSimilarity searcher idf terms searcher public Query getQuery return MultiPhraseQuery this public float getValue return value public float sumOfSquaredWeights public void normalize float queryNorm this queryNorm queryNorm public Scorer scorer IndexReader reader throws IOException return null TermPositions tps new TermPositions termArrays size for int tps length Term terms Term termArrays get TermPositions if terms length new MultipleTermPositions reader terms else reader termPositions terms if null return null tps if slop return new ExactPhraseScorer this tps getPositions similarity reader norms field else return new SloppyPhraseScorer this tps getPositions similarity slop reader norms field public Explanation explain IndexReader reader int doc throws IOException ComplexExplanation result new ComplexExplanation result setDescription getQuery doc Explanation idfExpl new Explanation idf getQuery Explanation queryExpl new Explanation queryExpl setDescription getQuery Explanation boostExpl new Explanation getBoost if getBoost queryExpl addDetail boostExpl queryExpl addDetail idfExpl Explanation queryNormExpl new Explanation queryNorm queryExpl addDetail queryNormExpl queryExpl setValue boostExpl getValue idfExpl getValue queryNormExpl getValue result addDetail queryExpl ComplexExplanation fieldExpl new ComplexExplanation fieldExpl setDescription getQuery doc Explanation tfExpl scorer reader explain doc fieldExpl addDetail tfExpl fieldExpl addDetail idfExpl Explanation fieldNormExpl new Explanation byte fieldNorms reader norms field float fieldNorm fieldNorms null Similarity decodeNorm fieldNorms doc fieldNormExpl setValue fieldNorm fieldNormExpl setDescription field doc fieldExpl addDetail fieldNormExpl fieldExpl setMatch Boolean valueOf tfExpl isMatch fieldExpl setValue tfExpl getValue idfExpl getValue fieldNormExpl getValue result addDetail fieldExpl result setMatch fieldExpl getMatch result setValue queryExpl getValue fieldExpl getValue if queryExpl getValue return fieldExpl return result public Query rewrite IndexReader reader Term terms Term termArrays get BooleanQuery boq new BooleanQuery true for int terms length boq add new TermQuery terms BooleanClause Occur SHOULD boq setBoost getBoost return boq else return this protected Weight createWeight Searcher searcher throws IOException return new MultiPhraseWeight searcher public final String toString String StringBuffer buffer new StringBuffer if field equals buffer append field buffer append buffer append Iterator termArrays iterator while hasNext Term terms Term next if terms length buffer append for int terms length buffer append terms text if terms length buffer append buffer append else buffer append terms text if hasNext buffer append buffer append if slop buffer append buffer append slop buffer append ToStringUtils boost getBoost return buffer toString public boolean equals Object if instanceof MultiPhraseQuery return false MultiPhraseQuery other MultiPhraseQuery return this getBoost other getBoost this slop other slop this termArrays equals other termArrays this positions equals other positions public int hashCode return Float floatToIntBits getBoost slop termArrays hashCode positions hashCode public class CloseableThreadLocal private ThreadLocal new ThreadLocal private Map hardRefs new HashMap protected Object initialValue return null public Object get WeakReference weakRef WeakReference get if weakRef null Object iv initialValue if iv null set iv return iv else return null else Object weakRef get assert null return public void set Object object set new WeakReference object synchronized hardRefs hardRefs put Thread currentThread object Iterator it hardRefs keySet iterator while it hasNext Thread Thread it next if isAlive it remove public void close hardRefs null null public class SortedVIntList extends DocIdSet final static int BITS2VINTLIST_SIZE private int size private byte bytes private int lastBytePos public SortedVIntList int sortedInts this sortedInts sortedInts length public SortedVIntList int sortedInts int inputSize SortedVIntListBuilder builder new SortedVIntListBuilder for int inputSize builder addInt sortedInts builder done public SortedVIntList BitSet bits SortedVIntListBuilder builder new SortedVIntListBuilder int nextInt bits nextSetBit while nextInt builder addInt nextInt nextInt bits nextSetBit nextInt builder done public SortedVIntList OpenBitSet bits SortedVIntListBuilder builder new SortedVIntListBuilder int nextInt bits nextSetBit while nextInt builder addInt nextInt nextInt bits nextSetBit nextInt builder done public SortedVIntList DocIdSetIterator docIdSetIterator throws IOException SortedVIntListBuilder builder new SortedVIntListBuilder while docIdSetIterator next builder addInt docIdSetIterator doc builder done private class SortedVIntListBuilder private int lastInt SortedVIntListBuilder initBytes lastInt void addInt int nextInt int diff nextInt lastInt if diff throw new IllegalArgumentException if lastBytePos MAX_BYTES_PER_INT bytes length resizeBytes bytes length MAX_BYTES_PER_INT bytes lastBytePos byte diff VB1 VB1 diff BIT_SHIFT size lastInt nextInt void done resizeBytes lastBytePos private void initBytes size lastBytePos private void resizeBytes int newSize if newSize bytes length byte newBytes new byte newSize System arraycopy bytes newBytes lastBytePos bytes newBytes private static final int VB1 private static final int BIT_SHIFT private final int MAX_BYTES_PER_INT BIT_SHIFT public int size return size public int getByteSize return bytes length public DocIdSetIterator iterator return new DocIdSetIterator int bytePos int lastInt private void advance byte bytes bytePos lastInt VB1 for int BIT_SHIFT VB1 BIT_SHIFT bytes bytePos lastInt VB1 public int doc return lastInt public boolean next if bytePos lastBytePos return false else advance return true public boolean skipTo int docNr while bytePos lastBytePos advance return true return false abstract class InvertedDocEndConsumer abstract InvertedDocEndConsumerPerThread addThread DocInverterPerThread docInverterPerThread abstract void flush Map threadsAndFields DocumentsWriter FlushState state throws IOException abstract void closeDocStore DocumentsWriter FlushState state throws IOException abstract void abort abstract void setFieldInfos FieldInfos fieldInfos class DisjunctionSumScorer extends Scorer private final int nrScorers protected final List subScorers private final int minimumNrMatchers private ScorerDocQueue scorerDocQueue null private int currentDoc protected int nrMatchers private float currentScore Float NaN public DisjunctionSumScorer List subScorers int minimumNrMatchers super null nrScorers subScorers size if minimumNrMatchers throw new IllegalArgumentException if nrScorers throw new IllegalArgumentException this minimumNrMatchers minimumNrMatchers this subScorers subScorers public DisjunctionSumScorer List subScorers this subScorers private void initScorerDocQueue throws IOException Iterator si subScorers iterator scorerDocQueue new ScorerDocQueue nrScorers queueSize while si hasNext Scorer se Scorer si next if scorerDocQueue insert se queueSize public void score HitCollector hc throws IOException while next hc collect currentDoc currentScore protected boolean score HitCollector hc int max throws IOException while currentDoc max hc collect currentDoc currentScore if next return false return true public boolean next throws IOException if scorerDocQueue null initScorerDocQueue return scorerDocQueue size minimumNrMatchers advanceAfterCurrent protected boolean advanceAfterCurrent throws IOException currentDoc scorerDocQueue topDoc currentScore scorerDocQueue topScore nrMatchers if scorerDocQueue topNextAndAdjustElsePop if queueSize if scorerDocQueue topDoc currentDoc currentScore scorerDocQueue topScore nrMatchers while true if nrMatchers minimumNrMatchers return true else if queueSize minimumNrMatchers return false while true public float score throws IOException return currentScore public int doc return currentDoc public int nrMatchers return nrMatchers public boolean skipTo int target throws IOException if scorerDocQueue null initScorerDocQueue if queueSize minimumNrMatchers return false if target currentDoc return true do if scorerDocQueue topDoc target return advanceAfterCurrent else if scorerDocQueue topSkipToAndAdjustElsePop target if queueSize minimumNrMatchers return false while true public Explanation explain int doc throws IOException Explanation res new Explanation Iterator ssi subScorers iterator float sumScore int nrMatches while ssi hasNext Explanation es Scorer ssi next explain doc sumScore es getValue nrMatches res addDetail es if nrMatchers minimumNrMatchers res setValue sumScore res setDescription minimumNrMatchers subScorers size else res setValue res setDescription nrMatches minimumNrMatchers subScorers size return res public interface QueryParserConstants int EOF int int int int int int int AND int OR int NOT int PLUS int MINUS int LPAREN int RPAREN int COLON int STAR int CARAT int QUOTED int TERM int FUZZY_SLOP int PREFIXTERM int WILDTERM int RANGEIN_START int RANGEEX_START int NUMBER int RANGEIN_TO int RANGEIN_END int RANGEIN_QUOTED int RANGEIN_GOOP int RANGEEX_TO int RANGEEX_END int RANGEEX_QUOTED int RANGEEX_GOOP int Boost int RangeEx int RangeIn int DEFAULT String tokenImage abstract class InvertedDocConsumer abstract InvertedDocConsumerPerThread addThread DocInverterPerThread docInverterPerThread abstract void abort abstract void flush Map threadsAndFields DocumentsWriter FlushState state throws IOException abstract void closeDocStore DocumentsWriter FlushState state throws IOException abstract boolean freeRAM FieldInfos fieldInfos void setFieldInfos FieldInfos fieldInfos this fieldInfos fieldInfos final class FreqProxTermsWriter extends TermsHashConsumer public TermsHashConsumerPerThread addThread TermsHashPerThread perThread return new FreqProxTermsWriterPerThread perThread void createPostings RawPostingList postings int start int count final int end start count for int start end postings new PostingList private static int compareText final char text1 int pos1 final char text2 int pos2 while true final char c1 text1 pos1 final char c2 text2 pos2 if c1 c2 if c2 return else if c1 return else return c1 c2 else if c1 return void closeDocStore DocumentsWriter FlushState state void abort public void flush Map threadsAndFields final DocumentsWriter FlushState state throws IOException List allFields new ArrayList Iterator it threadsAndFields entrySet iterator while it hasNext Map Entry entry Map Entry it next Collection fields Collection entry getValue Iterator fieldsIt fields iterator while fieldsIt hasNext FreqProxTermsWriterPerField perField FreqProxTermsWriterPerField fieldsIt next if perField termsHashPerField numPostings allFields add perField Collections sort allFields final int numAllFields allFields size final TermInfosWriter termsOut new TermInfosWriter state directory state segmentName fieldInfos state docWriter writer getTermIndexInterval final IndexOutput freqOut state directory createOutput state segmentFileName IndexFileNames FREQ_EXTENSION final IndexOutput proxOut if fieldInfos hasProx proxOut state directory createOutput state segmentFileName IndexFileNames PROX_EXTENSION else proxOut null final DefaultSkipListWriter skipListWriter new DefaultSkipListWriter termsOut skipInterval termsOut maxSkipLevels state numDocsInRAM freqOut proxOut int start while start numAllFields final FieldInfo fieldInfo FreqProxTermsWriterPerField allFields get start fieldInfo final String fieldName fieldInfo name int end start while end numAllFields FreqProxTermsWriterPerField allFields get end fieldInfo name equals fieldName end FreqProxTermsWriterPerField fields new FreqProxTermsWriterPerField end start for int start end fields start FreqProxTermsWriterPerField allFields get fieldInfo storePayloads fields start hasPayloads appendPostings state fields termsOut freqOut proxOut skipListWriter for int fields length TermsHashPerField perField fields termsHashPerField int numPostings perField numPostings perField reset perField shrinkHash numPostings fields reset start end it threadsAndFields entrySet iterator while it hasNext Map Entry entry Map Entry it next FreqProxTermsWriterPerThread perThread FreqProxTermsWriterPerThread entry getKey perThread termsHashPerThread reset true freqOut close if proxOut null state flushedFiles add state segmentFileName IndexFileNames PROX_EXTENSION proxOut close termsOut close state flushedFiles add state segmentFileName IndexFileNames FIELD_INFOS_EXTENSION state flushedFiles add state segmentFileName IndexFileNames FREQ_EXTENSION state flushedFiles add state segmentFileName IndexFileNames TERMS_EXTENSION state flushedFiles add state segmentFileName IndexFileNames TERMS_INDEX_EXTENSION final byte copyByteBuffer new byte void copyBytes IndexInput srcIn IndexOutput destIn long numBytes throws IOException while numBytes final int chunk if numBytes chunk else chunk int numBytes srcIn readBytes copyByteBuffer chunk destIn writeBytes copyByteBuffer chunk numBytes chunk void appendPostings final DocumentsWriter FlushState flushState FreqProxTermsWriterPerField fields TermInfosWriter termsOut IndexOutput freqOut IndexOutput proxOut DefaultSkipListWriter skipListWriter throws CorruptIndexException IOException final int fieldNumber fields fieldInfo number int numFields fields length final FreqProxFieldMergeState mergeStates new FreqProxFieldMergeState numFields for int numFields FreqProxFieldMergeState fms mergeStates new FreqProxFieldMergeState fields assert fms field fieldInfo fields fieldInfo boolean result fms nextTerm assert result final int skipInterval termsOut skipInterval final boolean currentFieldOmitTf fields fieldInfo omitTf final boolean currentFieldStorePayloads currentFieldOmitTf false fields fieldInfo storePayloads FreqProxFieldMergeState termStates new FreqProxFieldMergeState numFields while numFields termStates mergeStates int numToMerge for int numFields final char text mergeStates text final int textOffset mergeStates textOffset final int cmp compareText text textOffset termStates text termStates textOffset if cmp termStates mergeStates numToMerge else if cmp termStates numToMerge mergeStates int df int lastPayloadLength int lastDoc final char text termStates text final int start termStates textOffset final long freqPointer freqOut getFilePointer final long proxPointer if proxOut null proxPointer proxOut getFilePointer else proxPointer skipListWriter resetSkip while numToMerge if df skipInterval skipListWriter setSkipData lastDoc currentFieldStorePayloads lastPayloadLength skipListWriter bufferSkip df FreqProxFieldMergeState minState termStates for int numToMerge if termStates docID minState docID minState termStates final int doc minState docID final int termDocFreq minState termFreq assert doc flushState numDocsInRAM assert doc lastDoc df final ByteSliceReader prox minState prox if currentFieldOmitTf assert proxOut null for int termDocFreq final int code prox readVInt if currentFieldStorePayloads final int payloadLength if code payloadLength prox readVInt else payloadLength if payloadLength lastPayloadLength proxOut writeVInt code proxOut writeVInt payloadLength lastPayloadLength payloadLength else proxOut writeVInt code if payloadLength copyBytes prox proxOut payloadLength else assert code proxOut writeVInt code final int newDocCode doc lastDoc if termDocFreq freqOut writeVInt newDocCode else freqOut writeVInt newDocCode freqOut writeVInt termDocFreq else freqOut writeVInt doc lastDoc lastDoc doc if minState nextDoc int upto for int numToMerge if termStates minState termStates upto termStates numToMerge assert upto numToMerge if minState nextTerm upto for int numFields if mergeStates minState mergeStates upto mergeStates numFields assert upto numFields assert df long skipPointer skipListWriter writeSkip freqOut termInfo set df freqPointer proxPointer int skipPointer freqPointer UnicodeUtil UTF16toUTF8 text start termsUTF8 termsOut add fieldNumber termsUTF8 result termsUTF8 length termInfo final UnicodeUtil UTF8Result termsUTF8 new UnicodeUtil UTF8Result void files Collection files static final class PostingList extends RawPostingList int bytesPerPosting return RawPostingList BYTES_SIZE DocumentsWriter INT_NUM_BYTE final class StoredFieldsWriter extends DocFieldConsumer FieldsWriter fieldsWriter final DocumentsWriter docWriter int lastDocID PerDoc docFreeList new PerDoc int freeCount public StoredFieldsWriter DocumentsWriter docWriter this docWriter docWriter public DocFieldConsumerPerThread addThread DocFieldProcessorPerThread docFieldProcessorPerThread throws IOException return new StoredFieldsWriterPerThread docFieldProcessorPerThread this synchronized public void flush Map threadsAndFields DocumentsWriter FlushState state throws IOException if state numDocsInStore initFieldsWriter fill state numDocsInStore docWriter getDocStoreOffset if fieldsWriter null fieldsWriter flush private void initFieldsWriter throws IOException if fieldsWriter null final String docStoreSegment docWriter getDocStoreSegment if docStoreSegment null assert docStoreSegment null fieldsWriter new FieldsWriter docWriter directory docStoreSegment fieldInfos docWriter addOpenFile docStoreSegment IndexFileNames FIELDS_EXTENSION docWriter addOpenFile docStoreSegment IndexFileNames FIELDS_INDEX_EXTENSION lastDocID synchronized public void closeDocStore DocumentsWriter FlushState state throws IOException final int inc state numDocsInStore lastDocID if inc initFieldsWriter fill state numDocsInStore docWriter getDocStoreOffset if fieldsWriter null fieldsWriter close fieldsWriter null lastDocID assert state docStoreSegmentName null state flushedFiles add state docStoreSegmentName IndexFileNames FIELDS_EXTENSION state flushedFiles add state docStoreSegmentName IndexFileNames FIELDS_INDEX_EXTENSION state docWriter removeOpenFile state docStoreSegmentName IndexFileNames FIELDS_EXTENSION state docWriter removeOpenFile state docStoreSegmentName IndexFileNames FIELDS_INDEX_EXTENSION if state numDocsInStore state directory fileLength state docStoreSegmentName IndexFileNames FIELDS_INDEX_EXTENSION throw new RuntimeException state numDocsInStore state directory fileLength state docStoreSegmentName IndexFileNames FIELDS_INDEX_EXTENSION state docStoreSegmentName IndexFileNames FIELDS_INDEX_EXTENSION int allocCount synchronized PerDoc getPerDoc if freeCount allocCount if allocCount docFreeList length assert allocCount docFreeList length docFreeList new PerDoc ArrayUtil getNextSize allocCount return new PerDoc else return docFreeList freeCount synchronized void abort if fieldsWriter null try fieldsWriter close catch Throwable fieldsWriter null lastDocID void fill int docID throws IOException final int docStoreOffset docWriter getDocStoreOffset final int end docID docStoreOffset while lastDocID end fieldsWriter skipDocument lastDocID synchronized void finishDocument PerDoc perDoc throws IOException assert docWriter writer testPoint initFieldsWriter fill perDoc docID fieldsWriter flushDocument perDoc numStoredFields perDoc fdt lastDocID perDoc reset free perDoc assert docWriter writer testPoint public boolean freeRAM return false synchronized void free PerDoc perDoc assert freeCount docFreeList length assert perDoc numStoredFields assert perDoc fdt length assert perDoc fdt getFilePointer docFreeList freeCount perDoc class PerDoc extends DocumentsWriter DocWriter RAMOutputStream fdt new RAMOutputStream int numStoredFields void reset fdt reset numStoredFields void abort reset free this public long sizeInBytes return fdt sizeInBytes public void finish throws IOException finishDocument this public class LogDocMergePolicy extends LogMergePolicy public static final int DEFAULT_MIN_MERGE_DOCS public LogDocMergePolicy super minMergeSize DEFAULT_MIN_MERGE_DOCS maxMergeSize Long MAX_VALUE protected long size SegmentInfo info return info docCount public void setMinMergeDocs int minMergeDocs minMergeSize minMergeDocs public int getMinMergeDocs return int minMergeSize public class TermVectorOffsetInfo public static final TermVectorOffsetInfo EMPTY_OFFSET_INFO new TermVectorOffsetInfo private int startOffset private int endOffset public TermVectorOffsetInfo public TermVectorOffsetInfo int startOffset int endOffset this endOffset endOffset this startOffset startOffset public int getEndOffset return endOffset public void setEndOffset int endOffset this endOffset endOffset public int getStartOffset return startOffset public void setStartOffset int startOffset this startOffset startOffset public boolean equals Object if this return true if instanceof TermVectorOffsetInfo return false final TermVectorOffsetInfo termVectorOffsetInfo TermVectorOffsetInfo if endOffset termVectorOffsetInfo endOffset return false if startOffset termVectorOffsetInfo startOffset return false return true public int hashCode int result result startOffset result result endOffset return result public class IntFieldSource extends FieldCacheSource private FieldCache IntParser parser public IntFieldSource String field this field null public IntFieldSource String field FieldCache IntParser parser super field this parser parser public String description return super description public DocValues getCachedFieldValues FieldCache cache String field IndexReader reader throws IOException final int arr parser null cache getInts reader field cache getInts reader field parser return new DocValues public float floatVal int doc return float arr doc public int intVal int doc return arr doc public String toString int doc return description intVal doc Object getInnerArray return arr public boolean cachedFieldSourceEquals FieldCacheSource if getClass IntFieldSource class return false IntFieldSource other IntFieldSource return this parser null other parser null this parser getClass other parser getClass public int cachedFieldSourceHashCode return parser null Integer class hashCode parser getClass hashCode public abstract class SpanFilter extends Filter public abstract SpanFilterResult bitSpans IndexReader reader throws IOException public class TopDocCollector extends HitCollector private ScoreDoc reusableSD protected int totalHits protected PriorityQueue hq public TopDocCollector int numHits this new HitQueue numHits TopDocCollector int numHits PriorityQueue hq this hq hq protected TopDocCollector PriorityQueue hq this hq hq public void collect int doc float score if score totalHits if reusableSD null reusableSD new ScoreDoc doc score else if score reusableSD score reusableSD doc doc reusableSD score score else return reusableSD ScoreDoc hq insertWithOverflow reusableSD public int getTotalHits return totalHits public TopDocs topDocs ScoreDoc scoreDocs new ScoreDoc hq size scoreDocs ScoreDoc hq pop float maxScore totalHits Float NEGATIVE_INFINITY scoreDocs score return new TopDocs totalHits scoreDocs maxScore final class CharBlockPool public char buffers new char int numBuffer final private DocumentsWriter docWriter public CharBlockPool DocumentsWriter docWriter this docWriter docWriter public void reset docWriter recycleCharBlocks buffers bufferUpto bufferUpto charUpto DocumentsWriter CHAR_BLOCK_SIZE charOffset DocumentsWriter CHAR_BLOCK_SIZE public void nextBuffer if bufferUpto buffers length char newBuffers new char int buffers length System arraycopy buffers newBuffers buffers length buffers newBuffers buffer buffers bufferUpto docWriter getCharBlock bufferUpto charUpto charOffset DocumentsWriter CHAR_BLOCK_SIZE public class KeywordAnalyzer extends Analyzer public TokenStream tokenStream String fieldName final Reader reader return new KeywordTokenizer reader public TokenStream reusableTokenStream String fieldName final Reader reader throws IOException Tokenizer tokenizer Tokenizer getPreviousTokenStream if tokenizer null tokenizer new KeywordTokenizer reader setPreviousTokenStream tokenizer else tokenizer reset reader return tokenizer public class FSDirectory extends Directory private static final Map DIRECTORIES new HashMap private static boolean disableLocks false public static void setDisableLocks boolean doDisableLocks FSDirectory disableLocks doDisableLocks public static boolean getDisableLocks return FSDirectory disableLocks public static final String LOCK_DIR System getProperty System getProperty private static Class IMPL static try String name System getProperty FSDirectory class getName IMPL Class forName name catch ClassNotFoundException throw new RuntimeException toString catch SecurityException se try IMPL Class forName FSDirectory class getName catch ClassNotFoundException throw new RuntimeException toString private static MessageDigest DIGESTER static try DIGESTER MessageDigest getInstance catch NoSuchAlgorithmException throw new RuntimeException toString private byte buffer null public static FSDirectory getDirectory String path throws IOException return getDirectory new File path null public static FSDirectory getDirectory String path LockFactory lockFactory throws IOException return getDirectory new File path lockFactory public static FSDirectory getDirectory File file throws IOException return getDirectory file null public static FSDirectory getDirectory File file LockFactory lockFactory throws IOException file new File file getCanonicalPath if file exists file isDirectory throw new IOException file if file exists if file mkdirs throw new IOException file FSDirectory dir synchronized DIRECTORIES dir FSDirectory DIRECTORIES get file if dir null try dir FSDirectory IMPL newInstance catch Exception throw new RuntimeException toString dir init file lockFactory DIRECTORIES put file dir else if lockFactory null lockFactory dir getLockFactory throw new IOException synchronized dir dir refCount return dir public static FSDirectory getDirectory String path boolean create throws IOException return getDirectory new File path create public static FSDirectory getDirectory File file boolean create throws IOException FSDirectory dir getDirectory file null if create dir create return dir private void create throws IOException if directory exists if files null throw new IOException directory getAbsolutePath for int files length File file new File directory files if file delete throw new IOException file lockFactory clearLock IndexWriter WRITE_LOCK_NAME private File directory null private int refCount private void init File path LockFactory lockFactory throws IOException directory path boolean doClearLockID false if lockFactory null if disableLocks lockFactory NoLockFactory getNoLockFactory else String lockClassName System getProperty if lockClassName null lockClassName equals Class try Class forName lockClassName catch ClassNotFoundException throw new IOException lockClassName try lockFactory LockFactory newInstance catch IllegalAccessException throw new IOException lockClassName catch InstantiationException throw new IOException lockClassName catch ClassCastException throw new IOException lockClassName if lockFactory instanceof NativeFSLockFactory NativeFSLockFactory lockFactory setLockDir path else if lockFactory instanceof SimpleFSLockFactory SimpleFSLockFactory lockFactory setLockDir path else lockFactory new SimpleFSLockFactory path doClearLockID true setLockFactory lockFactory if doClearLockID lockFactory setLockPrefix null public String list ensureOpen return directory list IndexFileNameFilter getFilter public boolean fileExists String name ensureOpen File file new File directory name return file exists public long fileModified String name ensureOpen File file new File directory name return file lastModified public static long fileModified File directory String name File file new File directory name return file lastModified public void touchFile String name ensureOpen File file new File directory name file setLastModified System currentTimeMillis public long fileLength String name ensureOpen File file new File directory name return file length public void deleteFile String name throws IOException ensureOpen File file new File directory name if file delete throw new IOException file public synchronized void renameFile String from String to throws IOException ensureOpen File old new File directory from File nu new File directory to if nu exists if nu delete throw new IOException nu if old renameTo nu java io InputStream in null java io OutputStream out null try in new FileInputStream old out new FileOutputStream nu if buffer null buffer new byte int len while len in read buffer out write buffer len old delete catch IOException ioe IOException newExc new IOException old nu newExc initCause ioe throw newExc finally try if in null try in close catch IOException throw new RuntimeException toString finally if out null try out close catch IOException throw new RuntimeException toString public IndexOutput createOutput String name throws IOException ensureOpen File file new File directory name throw new IOException file return new FSIndexOutput file public void sync String name throws IOException ensureOpen File fullFile new File directory name boolean success false int retryCount IOException exc null while success retryCount retryCount RandomAccessFile file null try try file new RandomAccessFile fullFile file getFD sync success true finally if file null file close catch IOException ioe if exc null exc ioe try Thread sleep catch InterruptedException ie Thread currentThread interrupt if success throw exc public IndexInput openInput String name throws IOException ensureOpen return openInput name BufferedIndexInput BUFFER_SIZE public IndexInput openInput String name int bufferSize throws IOException ensureOpen return new FSIndexInput new File directory name bufferSize private static final char HEX_DIGITS public String getLockID ensureOpen try dirName directory getCanonicalPath catch IOException throw new RuntimeException toString byte digest synchronized DIGESTER digest DIGESTER digest dirName getBytes StringBuffer buf new StringBuffer buf append for int digest length int digest buf append HEX_DIGITS buf append HEX_DIGITS return buf toString public synchronized void close if isOpen refCount isOpen false synchronized DIRECTORIES DIRECTORIES remove directory public File getFile ensureOpen return directory public String toString return this getClass getName directory protected static class FSIndexInput extends BufferedIndexInput protected static class Descriptor extends RandomAccessFile protected volatile boolean isOpen long position final long length public Descriptor File file String mode throws IOException super file mode isOpen true length length public void close throws IOException if isOpen isOpen false super close protected void finalize throws Throwable try close finally super finalize protected final Descriptor file boolean isClone public FSIndexInput File path throws IOException this path BufferedIndexInput BUFFER_SIZE public FSIndexInput File path int bufferSize throws IOException super bufferSize file new Descriptor path protected void readInternal byte int offset int len throws IOException synchronized file long position getFilePointer if position file position file seek position file position position int total do int file read offset total len total if throw new IOException file position total while total len public void close throws IOException if isClone file close protected void seekInternal long position public long length return file length public Object clone FSIndexInput clone FSIndexInput super clone clone isClone true return clone boolean isFDValid throws IOException return file getFD valid protected static class FSIndexOutput extends BufferedIndexOutput RandomAccessFile file null private volatile boolean isOpen public FSIndexOutput File path throws IOException file new RandomAccessFile path isOpen true public void flushBuffer byte int offset int size throws IOException file write offset size public void close throws IOException if isOpen boolean success false try super close success true finally isOpen false if success try file close catch Throwable else file close public void seek long pos throws IOException super seek pos file seek pos public long length throws IOException return file length public void setLength long length throws IOException file setLength length public class CachingTokenFilter extends TokenFilter private List cache private Iterator iterator public CachingTokenFilter TokenStream input super input public Token next final Token reusableToken throws IOException assert reusableToken null if cache null cache new LinkedList fillCache reusableToken iterator cache iterator if iterator hasNext return null Token nextToken Token iterator next return Token nextToken clone public void reset throws IOException if cache null iterator cache iterator private void fillCache final Token reusableToken throws IOException for Token nextToken input next reusableToken nextToken null nextToken input next reusableToken cache add nextToken clone public class BooleanClause implements java io Serializable public static final class Occur extends Parameter implements java io Serializable private Occur String name super name public String toString if this MUST return if this MUST_NOT return return public static final Occur MUST new Occur public static final Occur SHOULD new Occur public static final Occur MUST_NOT new Occur private Query query private Occur occur public BooleanClause Query query Occur occur this query query this occur occur public Occur getOccur return occur public void setOccur Occur occur this occur occur public Query getQuery return query public void setQuery Query query this query query public boolean isProhibited return Occur MUST_NOT equals occur public boolean isRequired return Occur MUST equals occur public boolean equals Object if instanceof BooleanClause return false BooleanClause other BooleanClause return this query equals other query this occur equals other occur public int hashCode return query hashCode Occur MUST equals occur Occur MUST_NOT equals occur public String toString return occur toString query toString public interface IndexCommitPoint public String getSegmentsFileName public Collection getFileNames throws IOException public void delete public class NoLockFactory extends LockFactory private static NoLock singletonLock new NoLock private static NoLockFactory singleton new NoLockFactory public static NoLockFactory getNoLockFactory return singleton public Lock makeLock String lockName return singletonLock public void clearLock String lockName class NoLock extends Lock public boolean obtain throws IOException return true public void release public boolean isLocked return false public String toString return public class ScoreDoc implements java io Serializable public float score public int doc public ScoreDoc int doc float score this doc doc this score score class SegmentTermVector implements TermFreqVector private String field private String terms private int termFreqs SegmentTermVector String field String terms int termFreqs this field field this terms terms this termFreqs termFreqs public String getField return field public String toString StringBuffer sb new StringBuffer sb append sb append field append if terms null for int terms length if sb append sb append terms append append termFreqs sb append return sb toString public int size return terms null terms length public String getTerms return terms public int getTermFrequencies return termFreqs public int indexOf String termText if terms null return int res Arrays binarySearch terms termText return res res public int indexesOf String termNumbers int start int len int res new int len for int len res indexOf termNumbers start return res public abstract class ValueSource implements Serializable public abstract DocValues getValues IndexReader reader throws IOException public abstract String description public String toString return description public abstract boolean equals Object public abstract int hashCode public final class LengthFilter extends TokenFilter final int min final int max public LengthFilter TokenStream in int min int max super in this min min this max max public final Token next final Token reusableToken throws IOException assert reusableToken null for Token nextToken input next reusableToken nextToken null nextToken input next reusableToken int len nextToken termLength if len min len max return nextToken return null public class IndexSearcher extends Searcher IndexReader reader private boolean closeReader public IndexSearcher String path throws CorruptIndexException IOException this IndexReader open path true public IndexSearcher Directory directory throws CorruptIndexException IOException this IndexReader open directory true public IndexSearcher IndexReader this false private IndexSearcher IndexReader boolean closeReader reader this closeReader closeReader public IndexReader getIndexReader return reader public void close throws IOException if closeReader reader close public int docFreq Term term throws IOException return reader docFreq term public Document doc int throws CorruptIndexException IOException return reader document public Document doc int FieldSelector fieldSelector throws CorruptIndexException IOException return reader document fieldSelector public int maxDoc throws IOException return reader maxDoc public TopDocs search Weight weight Filter filter final int nDocs throws IOException throw new IllegalArgumentException TopDocCollector collector new TopDocCollector nDocs search weight filter collector return collector topDocs public TopFieldDocs search Weight weight Filter filter final int nDocs Sort sort throws IOException TopFieldDocCollector collector new TopFieldDocCollector reader sort nDocs search weight filter collector return TopFieldDocs collector topDocs public void search Weight weight Filter filter final HitCollector results throws IOException Scorer scorer weight scorer reader if scorer null return if filter null scorer score results return boolean more filterDocIdIterator next scorer skipTo filterDocIdIterator doc while more int filterDocId filterDocIdIterator doc if filterDocId scorer doc scorer skipTo filterDocId more false else int scorerDocId scorer doc results collect scorerDocId scorer score more filterDocIdIterator next else more filterDocIdIterator skipTo scorerDocId public Query rewrite Query original throws IOException Query query original for Query rewrittenQuery query rewrite reader rewrittenQuery query rewrittenQuery query rewrite reader query rewrittenQuery return query public Explanation explain Weight weight int doc throws IOException return weight explain reader doc public class ParseException extends Exception public ParseException Token currentTokenVal int expectedTokenSequencesVal String tokenImageVal super specialConstructor true currentToken currentTokenVal expectedTokenSequences expectedTokenSequencesVal tokenImage tokenImageVal public ParseException super specialConstructor false public ParseException String message super message specialConstructor false protected boolean specialConstructor public Token currentToken public int expectedTokenSequences public String tokenImage public String getMessage if specialConstructor return super getMessage StringBuffer expected new StringBuffer int maxSize for int expectedTokenSequences length if maxSize expectedTokenSequences length maxSize expectedTokenSequences length for int expectedTokenSequences length expected append tokenImage expectedTokenSequences append if expectedTokenSequences expectedTokenSequences length expected append expected append eol append String retval Token tok currentToken next for int maxSize if retval if tok kind retval tokenImage break retval tokenImage tok kind retval retval add_escapes tok image retval tok tok next retval currentToken next beginLine currentToken next beginColumn retval eol if expectedTokenSequences length retval eol else retval eol retval expected toString return retval protected String eol System getProperty protected String add_escapes String str StringBuffer retval new StringBuffer char ch for int str length switch str charAt case continue case retval append continue case retval append continue case retval append continue case retval append continue case retval append continue case retval append continue case retval append continue case retval append continue default if ch str charAt ch String Integer toString ch retval append substring length length else retval append ch continue return retval toString public class LogByteSizeMergePolicy extends LogMergePolicy public static final double DEFAULT_MIN_MERGE_MB public static final double DEFAULT_MAX_MERGE_MB double Long MAX_VALUE public LogByteSizeMergePolicy super minMergeSize long DEFAULT_MIN_MERGE_MB maxMergeSize long DEFAULT_MAX_MERGE_MB protected long size SegmentInfo info throws IOException return info sizeInBytes public void setMaxMergeMB double mb maxMergeSize long mb public double getMaxMergeMB return double maxMergeSize public void setMinMergeMB double mb minMergeSize long mb public double getMinMergeMB return double minMergeSize public interface Weight extends java io Serializable Query getQuery float getValue float sumOfSquaredWeights throws IOException void normalize float norm Scorer scorer IndexReader reader throws IOException Explanation explain IndexReader reader int doc throws IOException public abstract class Scorer extends DocIdSetIterator private Similarity similarity protected Scorer Similarity similarity this similarity similarity public Similarity getSimilarity return this similarity public void score HitCollector hc throws IOException while next hc collect doc score protected boolean score HitCollector hc int max throws IOException while doc max hc collect doc score if next return false return true public abstract float score throws IOException public abstract Explanation explain int doc throws IOException public abstract class IndexReader final static boolean READ_ONLY_DEFAULT false public static final class FieldOption private String option private FieldOption private FieldOption String option this option option public String toString return this option public static final FieldOption ALL new FieldOption public static final FieldOption INDEXED new FieldOption public static final FieldOption STORES_PAYLOADS new FieldOption public static final FieldOption OMIT_TF new FieldOption public static final FieldOption UNINDEXED new FieldOption public static final FieldOption INDEXED_WITH_TERMVECTOR new FieldOption public static final FieldOption INDEXED_NO_TERMVECTOR new FieldOption public static final FieldOption TERMVECTOR new FieldOption public static final FieldOption TERMVECTOR_WITH_POSITION new FieldOption public static final FieldOption TERMVECTOR_WITH_OFFSET new FieldOption public static final FieldOption TERMVECTOR_WITH_POSITION_OFFSET new FieldOption private boolean closed protected boolean hasChanges private volatile int refCount synchronized int getRefCount return refCount public synchronized void incRef assert refCount ensureOpen refCount public synchronized void decRef throws IOException assert refCount ensureOpen if refCount commit doClose refCount private Directory directory protected IndexReader Directory directory this this directory directory protected IndexReader refCount protected final void ensureOpen throws AlreadyClosedException if refCount throw new AlreadyClosedException public static IndexReader open String path throws CorruptIndexException IOException return open FSDirectory getDirectory path true null null READ_ONLY_DEFAULT public static IndexReader open File path throws CorruptIndexException IOException return open FSDirectory getDirectory path true null null READ_ONLY_DEFAULT public static IndexReader open final Directory directory throws CorruptIndexException IOException return open directory false null null READ_ONLY_DEFAULT public static IndexReader open final Directory directory boolean readOnly throws CorruptIndexException IOException return open directory false null null readOnly public static IndexReader open final IndexCommit commit throws CorruptIndexException IOException return open commit getDirectory false null commit READ_ONLY_DEFAULT public static IndexReader open final Directory directory IndexDeletionPolicy deletionPolicy throws CorruptIndexException IOException return open directory false deletionPolicy null READ_ONLY_DEFAULT public static IndexReader open final Directory directory IndexDeletionPolicy deletionPolicy boolean readOnly throws CorruptIndexException IOException return open directory false deletionPolicy null readOnly public static IndexReader open final IndexCommit commit IndexDeletionPolicy deletionPolicy throws CorruptIndexException IOException return open commit getDirectory false deletionPolicy commit READ_ONLY_DEFAULT public static IndexReader open final IndexCommit commit IndexDeletionPolicy deletionPolicy boolean readOnly throws CorruptIndexException IOException return open commit getDirectory false deletionPolicy commit readOnly private static IndexReader open final Directory directory final boolean closeDirectory final IndexDeletionPolicy deletionPolicy final IndexCommit commit final boolean readOnly throws CorruptIndexException IOException return DirectoryIndexReader open directory closeDirectory deletionPolicy commit readOnly public synchronized IndexReader reopen throws CorruptIndexException IOException throw new UnsupportedOperationException public Directory directory ensureOpen if null directory return directory else throw new UnsupportedOperationException public static long lastModified String directory throws CorruptIndexException IOException return lastModified new File directory public static long lastModified File fileDirectory throws CorruptIndexException IOException return Long new SegmentInfos FindSegmentsFile fileDirectory public Object doBody String segmentFileName return new Long FSDirectory fileModified fileDirectory segmentFileName run longValue public static long lastModified final Directory directory2 throws CorruptIndexException IOException return Long new SegmentInfos FindSegmentsFile directory2 public Object doBody String segmentFileName throws IOException return new Long directory2 fileModified segmentFileName run longValue public static long getCurrentVersion String directory throws CorruptIndexException IOException return getCurrentVersion new File directory public static long getCurrentVersion File directory throws CorruptIndexException IOException Directory dir FSDirectory getDirectory directory long version getCurrentVersion dir dir close return version public static long getCurrentVersion Directory directory throws CorruptIndexException IOException return SegmentInfos readCurrentVersion directory public long getVersion throw new UnsupportedOperationException public void setTermInfosIndexDivisor int indexDivisor throws IllegalStateException throw new UnsupportedOperationException public int getTermInfosIndexDivisor throw new UnsupportedOperationException public boolean isCurrent throws CorruptIndexException IOException throw new UnsupportedOperationException public boolean isOptimized throw new UnsupportedOperationException abstract public TermFreqVector getTermFreqVectors int docNumber throws IOException abstract public TermFreqVector getTermFreqVector int docNumber String field throws IOException abstract public void getTermFreqVector int docNumber String field TermVectorMapper mapper throws IOException abstract public void getTermFreqVector int docNumber TermVectorMapper mapper throws IOException public static boolean indexExists String directory return indexExists new File directory public static boolean indexExists File directory return SegmentInfos getCurrentSegmentGeneration directory list public static boolean indexExists Directory directory throws IOException return SegmentInfos getCurrentSegmentGeneration directory public abstract int numDocs public abstract int maxDoc public int numDeletedDocs return maxDoc numDocs public Document document int throws CorruptIndexException IOException ensureOpen return document null public abstract Document document int FieldSelector fieldSelector throws CorruptIndexException IOException public abstract boolean isDeleted int public abstract boolean hasDeletions public boolean hasNorms String field throws IOException ensureOpen return norms field null public abstract byte norms String field throws IOException public abstract void norms String field byte bytes int offset throws IOException public synchronized void setNorm int doc String field byte value throws StaleReaderException CorruptIndexException LockObtainFailedException IOException ensureOpen acquireWriteLock hasChanges true doSetNorm doc field value protected abstract void doSetNorm int doc String field byte value throws CorruptIndexException IOException public void setNorm int doc String field float value throws StaleReaderException CorruptIndexException LockObtainFailedException IOException ensureOpen setNorm doc field Similarity encodeNorm value public abstract TermEnum terms throws IOException public abstract TermEnum terms Term throws IOException public abstract int docFreq Term throws IOException public TermDocs termDocs Term term throws IOException ensureOpen TermDocs termDocs termDocs termDocs seek term return termDocs public abstract TermDocs termDocs throws IOException public TermPositions termPositions Term term throws IOException ensureOpen TermPositions termPositions termPositions termPositions seek term return termPositions public abstract TermPositions termPositions throws IOException public synchronized void deleteDocument int docNum throws StaleReaderException CorruptIndexException LockObtainFailedException IOException ensureOpen acquireWriteLock hasChanges true doDelete docNum protected abstract void doDelete int docNum throws CorruptIndexException IOException public int deleteDocuments Term term throws StaleReaderException CorruptIndexException LockObtainFailedException IOException ensureOpen TermDocs docs termDocs term if docs null return int try while docs next deleteDocument docs doc finally docs close return public synchronized void undeleteAll throws StaleReaderException CorruptIndexException LockObtainFailedException IOException ensureOpen acquireWriteLock hasChanges true doUndeleteAll protected abstract void doUndeleteAll throws CorruptIndexException IOException protected synchronized void acquireWriteLock throws IOException public final synchronized void flush throws IOException ensureOpen commit protected final synchronized void commit throws IOException if hasChanges doCommit hasChanges false protected abstract void doCommit throws IOException public final synchronized void close throws IOException if closed decRef closed true protected abstract void doClose throws IOException public abstract Collection getFieldNames FieldOption fldOption public static boolean isLocked Directory directory throws IOException return directory makeLock IndexWriter WRITE_LOCK_NAME isLocked public static boolean isLocked String directory throws IOException Directory dir FSDirectory getDirectory directory boolean result isLocked dir dir close return result public static void unlock Directory directory throws IOException directory makeLock IndexWriter WRITE_LOCK_NAME release public IndexCommit getIndexCommit throws IOException throw new UnsupportedOperationException public static void main String args String filename null boolean extract false for int args length if args equals extract true else if filename null filename args if filename null System out println return Directory dir null CompoundFileReader cfr null try File file new File filename String dirname file getAbsoluteFile getParent filename file getName dir FSDirectory getDirectory dirname cfr new CompoundFileReader dir filename String files cfr list for int files length long len cfr fileLength files if extract System out println files len IndexInput ii cfr openInput files FileOutputStream new FileOutputStream files byte buffer new byte int chunk buffer length while len final int bufLen int Math min chunk len ii readBytes buffer bufLen write buffer bufLen len bufLen close ii close else System out println files len catch IOException ioe ioe printStackTrace finally try if dir null dir close if cfr null cfr close catch IOException ioe ioe printStackTrace public static Collection listCommits Directory dir throws IOException return DirectoryIndexReader listCommits dir public class CharArraySet extends AbstractSet private final static int INIT_SIZE private char entries private int count private final boolean ignoreCase public CharArraySet int startSize boolean ignoreCase this ignoreCase ignoreCase int size INIT_SIZE while startSize startSize size size entries new char size public CharArraySet Collection boolean ignoreCase this size ignoreCase addAll public boolean contains char text int off int len return entries getSlot text off len null public boolean contains CharSequence cs return entries getSlot cs null private int getSlot char text int off int len int code getHashCode text off len int pos code entries length char text2 entries pos if text2 null equals text off len text2 final int inc code code do code inc pos code entries length text2 entries pos while text2 null equals text off len text2 return pos private int getSlot CharSequence text int code getHashCode text int pos code entries length char text2 entries pos if text2 null equals text text2 final int inc code code do code inc pos code entries length text2 entries pos while text2 null equals text text2 return pos public boolean add CharSequence text public boolean add String text return add text toCharArray public boolean add char text if ignoreCase for int text length text Character toLowerCase text int slot getSlot text text length if entries slot null return false entries slot text count if count count entries length rehash return true private boolean equals char text1 int off int len char text2 if len text2 length return false if ignoreCase for int len if Character toLowerCase text1 off text2 return false else for int len if text1 off text2 return false return true private boolean equals CharSequence text1 char text2 int len text1 length if len text2 length return false if ignoreCase for int len if Character toLowerCase text1 charAt text2 return false else for int len if text1 charAt text2 return false return true private void rehash final int newSize entries length char oldEntries entries entries new char newSize for int oldEntries length char text oldEntries if text null entries getSlot text text length text private int getHashCode char text int offset int len int code final int stop offset len if ignoreCase for int offset stop code code Character toLowerCase text else for int offset stop code code text return code private int getHashCode CharSequence text int code if ignoreCase code int len text length for int len code code Character toLowerCase text charAt else if false text instanceof String code text hashCode else code int len text length for int len code code text charAt return code public int size return count public boolean isEmpty return count public boolean contains Object if instanceof char char text char return contains text text length else if instanceof CharSequence return contains CharSequence return false public boolean add Object if instanceof char return add char else if instanceof String return add String else if instanceof CharSequence return add CharSequence else return add toString public class CharArraySetIterator implements Iterator int pos char next CharArraySetIterator goNext private void goNext next null pos while pos entries length next entries pos null pos public boolean hasNext return next null public char nextCharArray char ret next goNext return ret public Object next return new String nextCharArray public void remove throw new UnsupportedOperationException public Iterator iterator return new CharArraySetIterator abstract class InvertedDocEndConsumerPerField abstract void finish abstract void abort final class FreqProxFieldMergeState final FreqProxTermsWriterPerField field final int numPostings final CharBlockPool charPool final RawPostingList postings private FreqProxTermsWriter PostingList char text int textOffset private int postingUpto final ByteSliceReader freq new ByteSliceReader final ByteSliceReader prox new ByteSliceReader int docID int termFreq public FreqProxFieldMergeState FreqProxTermsWriterPerField field this field field this charPool field perThread termsHashPerThread charPool this numPostings field termsHashPerField numPostings this postings field termsHashPerField sortPostings boolean nextTerm throws IOException postingUpto if postingUpto numPostings return false FreqProxTermsWriter PostingList postings postingUpto docID text charPool buffers textStart DocumentsWriter CHAR_BLOCK_SHIFT textOffset textStart DocumentsWriter CHAR_BLOCK_MASK field termsHashPerField initReader freq if field fieldInfo omitTf field termsHashPerField initReader prox boolean result nextDoc assert result return true public boolean nextDoc throws IOException if freq eof if lastDocCode docID lastDocID if field omitTf termFreq docFreq lastDocCode return true else return false final int code freq readVInt if field omitTf docID code else docID code if code termFreq else termFreq freq readVInt assert docID lastDocID return true public class IndexFileNameFilter implements FilenameFilter static IndexFileNameFilter singleton new IndexFileNameFilter private HashSet extensions private HashSet extensionsInCFS public IndexFileNameFilter extensions new HashSet for int IndexFileNames INDEX_EXTENSIONS length extensions add IndexFileNames INDEX_EXTENSIONS extensionsInCFS new HashSet for int IndexFileNames INDEX_EXTENSIONS_IN_COMPOUND_FILE length extensionsInCFS add IndexFileNames INDEX_EXTENSIONS_IN_COMPOUND_FILE public boolean accept File dir String name int name lastIndexOf if String extension name substring if extensions contains extension return true else if extension startsWith extension matches return true else if extension startsWith extension matches return true else if name equals IndexFileNames DELETABLE return true else if name startsWith IndexFileNames SEGMENTS return true return false public boolean isCFSFile String name int name lastIndexOf if String extension name substring if extensionsInCFS contains extension return true if extension startsWith extension matches return true return false public static IndexFileNameFilter getFilter return singleton public final class LowerCaseTokenizer extends LetterTokenizer public LowerCaseTokenizer Reader in super in protected char normalize char return Character toLowerCase public class OpenBitSet extends DocIdSet implements Cloneable Serializable protected long bits public OpenBitSet long numBits bits new long bits2words numBits wlen bits length public OpenBitSet this public OpenBitSet long bits int numWords this bits bits this wlen numWords public DocIdSetIterator iterator return new OpenBitSetIterator bits wlen public long capacity return bits length public long size return capacity public boolean isEmpty return cardinality public long getBits return bits public void setBits long bits this bits bits public int getNumWords return wlen public void setNumWords int nWords this wlen nWords public boolean get int index if bits length return false long bitmask bit return bits bitmask public boolean fastGet int index long bitmask bit return bits bitmask public boolean get long index if bits length return false long bitmask bit return bits bitmask public boolean fastGet long index long bitmask bit return bits bitmask public int getBit int index return int bits bit public void set long index int wordNum expandingWordNum index int bit int index long bitmask bit bits wordNum bitmask public void fastSet int index long bitmask bit bits wordNum bitmask public void fastSet long index int wordNum int index int bit int index long bitmask bit bits wordNum bitmask public void set long startIndex long endIndex if endIndex startIndex return int startWord int startIndex int endWord expandingWordNum endIndex long startmask startIndex if startWord endWord bits startWord startmask endmask return bits startWord startmask Arrays fill bits startWord endWord bits endWord endmask protected int expandingWordNum long index int wordNum int index if wordNum wlen ensureCapacity index wlen wordNum return wordNum public void fastClear int index int wordNum index int bit index long bitmask bit bits wordNum bitmask public void fastClear long index long bitmask bit bits wordNum bitmask public void clear long index if wordNum wlen return long bitmask bit bits wordNum bitmask public void clear long startIndex long endIndex if endIndex startIndex return int startWord int startIndex if startWord wlen return int endWord int endIndex long startmask startIndex startmask startmask endmask endmask if startWord endWord bits startWord startmask endmask return bits startWord startmask int middle Math min wlen endWord Arrays fill bits startWord middle if endWord wlen bits endWord endmask public boolean getAndSet int index long bitmask bit boolean val bits wordNum bitmask bits wordNum bitmask return val public boolean getAndSet long index long bitmask bit boolean val bits wordNum bitmask bits wordNum bitmask return val public void fastFlip int index long bitmask bit bits wordNum bitmask public void fastFlip long index long bitmask bit bits wordNum bitmask public void flip long index int wordNum expandingWordNum index long bitmask bit bits wordNum bitmask public boolean flipAndGet int index long bitmask bit bits wordNum bitmask return bits wordNum bitmask public boolean flipAndGet long index long bitmask bit bits wordNum bitmask return bits wordNum bitmask public void flip long startIndex long endIndex if endIndex startIndex return int oldlen wlen int startWord int startIndex int endWord expandingWordNum endIndex long startmask startIndex if startWord endWord bits startWord startmask endmask return bits startWord startmask for int startWord endWord bits bits bits endWord endmask public long cardinality return BitUtil pop_array bits wlen public static long intersectionCount OpenBitSet OpenBitSet return BitUtil pop_intersect bits bits Math min wlen wlen public static long unionCount OpenBitSet OpenBitSet long tot BitUtil pop_union bits bits Math min wlen wlen if wlen wlen tot BitUtil pop_array bits wlen wlen wlen else if wlen wlen tot BitUtil pop_array bits wlen wlen wlen return tot public static long andNotCount OpenBitSet OpenBitSet long tot BitUtil pop_andnot bits bits Math min wlen wlen if wlen wlen tot BitUtil pop_array bits wlen wlen wlen return tot public static long xorCount OpenBitSet OpenBitSet long tot BitUtil pop_xor bits bits Math min wlen wlen if wlen wlen tot BitUtil pop_array bits wlen wlen wlen else if wlen wlen tot BitUtil pop_array bits wlen wlen wlen return tot public int nextSetBit int index int index if wlen return if word return subIndex BitUtil ntz word while wlen word bits if word return BitUtil ntz word return public long nextSetBit long index int int index if wlen return if word return long subIndex BitUtil ntz word while wlen word bits if word return long BitUtil ntz word return public Object clone try OpenBitSet obs OpenBitSet super clone return obs catch CloneNotSupportedException throw new RuntimeException public void intersect OpenBitSet other int newLen Math min this wlen other wlen long thisArr this bits long otherArr other bits int pos newLen while pos thisArr pos otherArr pos if this wlen newLen Arrays fill bits newLen this wlen this wlen newLen public void union OpenBitSet other int newLen Math max wlen other wlen ensureCapacityWords newLen long thisArr this bits long otherArr other bits int pos Math min wlen other wlen while pos thisArr pos otherArr pos if this wlen newLen System arraycopy otherArr this wlen thisArr this wlen newLen this wlen this wlen newLen public void remove OpenBitSet other int idx Math min wlen other wlen long thisArr this bits long otherArr other bits while idx thisArr idx otherArr idx public void xor OpenBitSet other int newLen Math max wlen other wlen ensureCapacityWords newLen long thisArr this bits long otherArr other bits int pos Math min wlen other wlen while pos thisArr pos otherArr pos if this wlen newLen System arraycopy otherArr this wlen thisArr this wlen newLen this wlen this wlen newLen public void and OpenBitSet other intersect other public void or OpenBitSet other union other public void andNot OpenBitSet other remove other public boolean intersects OpenBitSet other int pos Math min this wlen other wlen long thisArr this bits long otherArr other bits while pos if thisArr pos otherArr pos return true return false public void ensureCapacityWords int numWords if bits length numWords long newBits new long numWords System arraycopy bits newBits wlen bits newBits public void ensureCapacity long numBits ensureCapacityWords bits2words numBits public void trimTrailingZeros int idx wlen while idx bits idx idx wlen idx public static int bits2words long numBits return int numBits public boolean equals Object if this return true if instanceof OpenBitSet return false OpenBitSet OpenBitSet OpenBitSet if wlen this wlen this else this for int wlen wlen if bits return false for int wlen if bits bits return false return true public int hashCode for int bits length bits public final class BitVector private byte bits private int size private int count public BitVector int size bits new byte size public final void set int bit if bit size throw new ArrayIndexOutOfBoundsException bit bits bit bit count public final boolean getAndSet int bit if bit size throw new ArrayIndexOutOfBoundsException bit final int pos bit final int bits pos final int flag bit if flag return true else bits pos byte flag if count count return false public final void clear int bit if bit size throw new ArrayIndexOutOfBoundsException bit bits bit bit count public final boolean get int bit if bit size throw new ArrayIndexOutOfBoundsException bit return bits bit bit public final int size return size public final int count if count int int end bits length for int end count return count public final void write Directory String name throws IOException IndexOutput output createOutput name try if isSparse else writeBits output finally output close private void writeBits IndexOutput output throws IOException output writeBytes bits bits length private void writeDgaps IndexOutput output throws IOException int last int count int bits length for int if bits output writeVInt last output writeByte bits last BYTE_COUNTS bits private boolean isSparse int factor if bits length return factor count size if bits length return factor count size if bits length return factor count size if bits length return factor count size return factor count size public BitVector Directory String name throws IOException IndexInput input openInput name try if size readDgaps input else readBits input finally input close private void readBits IndexInput input throws IOException input readBytes bits bits length private void readDgaps IndexInput input throws IOException int last int count while last input readVInt bits last input readByte BYTE_COUNTS bits last public abstract class AbstractField implements Fieldable protected String name protected boolean storeTermVector false protected boolean storeOffsetWithTermVector false protected boolean storePositionWithTermVector false protected boolean omitNorms false protected boolean isStored false protected boolean isIndexed true protected boolean isTokenized true protected boolean isBinary false protected boolean isCompressed false protected boolean lazy false protected boolean omitTf false protected float boost protected Object fieldsData null protected int binaryLength protected int binaryOffset protected AbstractField protected AbstractField String name Field Store store Field Index index Field TermVector termVector if name null throw new NullPointerException if store Field Store YES this isStored true this isCompressed false else if store Field Store COMPRESS this isStored true this isCompressed true else if store Field Store NO this isStored false this isCompressed false else throw new IllegalArgumentException store if index Field Index NO this isIndexed false this isTokenized false else if index Field Index ANALYZED this isIndexed true this isTokenized true else if index Field Index NOT_ANALYZED this isIndexed true this isTokenized false else if index Field Index NOT_ANALYZED_NO_NORMS this isIndexed true this isTokenized false this omitNorms true else if index Field Index ANALYZED_NO_NORMS this isIndexed true this isTokenized true this omitNorms true else throw new IllegalArgumentException index this isBinary false setStoreTermVector termVector public void setBoost float boost this boost boost public float getBoost return boost public String name return name protected void setStoreTermVector Field TermVector termVector if termVector Field TermVector NO this storeTermVector false this storePositionWithTermVector false this storeOffsetWithTermVector false else if termVector Field TermVector YES this storeTermVector true this storePositionWithTermVector false this storeOffsetWithTermVector false else if termVector Field TermVector WITH_POSITIONS this storeTermVector true this storePositionWithTermVector true this storeOffsetWithTermVector false else if termVector Field TermVector WITH_OFFSETS this storeTermVector true this storePositionWithTermVector false this storeOffsetWithTermVector true else if termVector Field TermVector WITH_POSITIONS_OFFSETS this storeTermVector true this storePositionWithTermVector true this storeOffsetWithTermVector true else throw new IllegalArgumentException termVector public final boolean isStored return isStored public final boolean isIndexed return isIndexed public final boolean isTokenized return isTokenized public final boolean isCompressed return isCompressed public final boolean isTermVectorStored return storeTermVector public boolean isStoreOffsetWithTermVector return storeOffsetWithTermVector public boolean isStorePositionWithTermVector return storePositionWithTermVector public final boolean isBinary return isBinary public byte getBinaryValue return getBinaryValue null public byte getBinaryValue byte result if isBinary fieldsData instanceof byte return byte fieldsData else return null public int getBinaryLength if isBinary if isCompressed return binaryLength else return byte fieldsData length else if fieldsData instanceof byte return byte fieldsData length else return public int getBinaryOffset return binaryOffset public boolean getOmitNorms return omitNorms public boolean getOmitTf return omitTf public void setOmitNorms boolean omitNorms this omitNorms omitNorms public void setOmitTf boolean omitTf this omitTf omitTf public boolean isLazy return lazy public final String toString StringBuffer result new StringBuffer if isStored result append if isCompressed result append else result append if isIndexed if result length result append result append if isTokenized if result length result append result append if storeTermVector if result length result append result append if storeOffsetWithTermVector if result length result append result append if storePositionWithTermVector if result length result append result append if isBinary if result length result append result append if omitNorms result append if omitTf result append if lazy result append result append result append name result append if fieldsData null lazy false result append fieldsData result append return result toString public class DisjunctionMaxQuery extends Query private ArrayList disjuncts new ArrayList private float tieBreakerMultiplier public DisjunctionMaxQuery float tieBreakerMultiplier this tieBreakerMultiplier tieBreakerMultiplier public DisjunctionMaxQuery Collection disjuncts float tieBreakerMultiplier this tieBreakerMultiplier tieBreakerMultiplier add disjuncts public void add Query query disjuncts add query public void add Collection disjuncts this disjuncts addAll disjuncts public Iterator iterator return disjuncts iterator private class DisjunctionMaxWeight implements Weight public DisjunctionMaxWeight Searcher searcher throws IOException this similarity searcher getSimilarity for int disjuncts size weights add Query disjuncts get createWeight searcher public Query getQuery return DisjunctionMaxQuery this public float getValue return getBoost public float sumOfSquaredWeights throws IOException float max sum for int weights size float sub Weight weights get sumOfSquaredWeights sum sub max Math max max sub return sum max tieBreakerMultiplier tieBreakerMultiplier max getBoost getBoost public void normalize float norm for int weights size Weight weights get normalize norm public Scorer scorer IndexReader reader throws IOException DisjunctionMaxScorer result new DisjunctionMaxScorer tieBreakerMultiplier similarity for int weights size Weight Weight weights get Scorer subScorer scorer reader if subScorer null return null result add subScorer return result public Explanation explain IndexReader reader int doc throws IOException if disjuncts size return Weight weights get explain reader doc ComplexExplanation result new ComplexExplanation float max sum result setDescription tieBreakerMultiplier tieBreakerMultiplier for int weights size Explanation Weight weights get explain reader doc if isMatch result setMatch Boolean TRUE result addDetail sum getValue max Math max max getValue result setValue max sum max tieBreakerMultiplier return result protected Weight createWeight Searcher searcher throws IOException return new DisjunctionMaxWeight searcher public Query rewrite IndexReader reader throws IOException if disjuncts size Query singleton Query disjuncts get Query result singleton rewrite reader if getBoost if result singleton result Query result clone result setBoost getBoost result getBoost return result DisjunctionMaxQuery clone null for int disjuncts size Query clause Query disjuncts get Query rewrite clause rewrite reader if rewrite clause if clone null clone DisjunctionMaxQuery this clone clone disjuncts set rewrite if clone null return clone else return this public Object clone DisjunctionMaxQuery clone DisjunctionMaxQuery super clone clone disjuncts ArrayList this disjuncts clone return clone public void extractTerms Set terms for int disjuncts size Query disjuncts get extractTerms terms public String toString String field StringBuffer buffer new StringBuffer buffer append for int disjuncts size Query subquery Query disjuncts get buffer append buffer append subquery toString field buffer append else buffer append subquery toString field if disjuncts size buffer append buffer append if tieBreakerMultiplier buffer append buffer append tieBreakerMultiplier if getBoost buffer append buffer append getBoost return buffer toString public boolean equals Object if instanceof DisjunctionMaxQuery return false DisjunctionMaxQuery other DisjunctionMaxQuery return this getBoost other getBoost this tieBreakerMultiplier other tieBreakerMultiplier this disjuncts equals other disjuncts public int hashCode return Float floatToIntBits getBoost Float floatToIntBits tieBreakerMultiplier disjuncts hashCode public abstract class TermVectorMapper private boolean ignoringPositions private boolean ignoringOffsets protected TermVectorMapper protected TermVectorMapper boolean ignoringPositions boolean ignoringOffsets this ignoringPositions ignoringPositions this ignoringOffsets ignoringOffsets public abstract void setExpectations String field int numTerms boolean storeOffsets boolean storePositions public abstract void map String term int frequency TermVectorOffsetInfo offsets int positions public boolean isIgnoringPositions return ignoringPositions public boolean isIgnoringOffsets return ignoringOffsets public void setDocumentNumber int documentNumber public abstract class DocIdSetIterator public abstract int doc public abstract boolean next throws IOException public abstract boolean skipTo int target throws IOException public final class Hits private Weight weight private Searcher searcher private Filter filter null private Sort sort null Hits Searcher Query Filter throws IOException weight weight searcher filter nDeletions countDeletions lengthAtStart length Hits Searcher Query Filter Sort throws IOException weight weight searcher filter sort nDeletions countDeletions lengthAtStart length private int countDeletions Searcher throws IOException int cnt if instanceof IndexSearcher cnt maxDoc IndexSearcher getIndexReader numDocs return cnt private final void getMoreDocs int min throws IOException if hitDocs size min min hitDocs size TopDocs topDocs sort null searcher search weight filter searcher search weight filter sort length topDocs totalHits ScoreDoc scoreDocs topDocs scoreDocs float scoreNorm if length topDocs getMaxScore scoreNorm topDocs getMaxScore int start hitDocs size nDeletedHits int nDels2 countDeletions searcher debugCheckedForDeletions false if nDeletions nDels2 nDeletions nDeletedHits debugCheckedForDeletions true int i2 for int i1 i1 hitDocs size i2 scoreDocs length i1 int id1 HitDoc hitDocs get i1 id int id2 scoreDocs i2 doc if id1 id2 i2 else nDeletedHits start i2 int end scoreDocs length length scoreDocs length length length nDeletedHits for int start end hitDocs addElement new HitDoc scoreDocs score scoreNorm scoreDocs doc nDeletions nDels2 public final int length return length public final Document doc int throws CorruptIndexException IOException HitDoc hitDoc hitDoc HitDoc oldLast last if hitDoc doc null return hitDoc doc public final float score int throws IOException return hitDoc score public final int id int throws IOException return hitDoc id public Iterator iterator return new HitIterator this private final HitDoc hitDoc int throws IOException if lengthAtStart throw new IndexOutOfBoundsException if hitDocs size getMoreDocs if length throw new ConcurrentModificationException return HitDoc hitDocs elementAt if first null last hitDoc else first prev hitDoc hitDoc next first first hitDoc hitDoc prev null numDocs if hitDoc next null last hitDoc prev else hitDoc next prev hitDoc prev if hitDoc prev null first hitDoc next else hitDoc prev next hitDoc next numDocs final class HitDoc float score int id Document doc null HitDoc float int score id final class BooleanScorer extends Scorer private SubScorer scorers null private BucketTable bucketTable new BucketTable private int maxCoord private float coordFactors null private int requiredMask private int prohibitedMask private int nextMask private final int minNrShouldMatch BooleanScorer Similarity similarity this similarity BooleanScorer Similarity similarity int minNrShouldMatch super similarity this minNrShouldMatch minNrShouldMatch static final class SubScorer public Scorer scorer public boolean done public boolean required false public boolean prohibited false public HitCollector collector public SubScorer next public SubScorer Scorer scorer boolean required boolean prohibited HitCollector collector SubScorer next throws IOException this scorer scorer this done scorer next this required required this prohibited prohibited this collector collector this next next final void add Scorer scorer boolean required boolean prohibited throws IOException int mask if required prohibited if nextMask throw new IndexOutOfBoundsException mask nextMask nextMask nextMask else mask if prohibited maxCoord if prohibited else if required scorers new SubScorer scorer required prohibited bucketTable newCollector mask scorers private final void computeCoordFactors coordFactors new float maxCoord for int maxCoord coordFactors getSimilarity coord maxCoord private int end private Bucket current public void score HitCollector hc throws IOException next score hc Integer MAX_VALUE protected boolean score HitCollector hc int max throws IOException if coordFactors null computeCoordFactors boolean more Bucket tmp do bucketTable first null if current bits prohibitedMask current bits requiredMask requiredMask if current doc max tmp current current current next tmp next bucketTable first bucketTable first tmp continue if current coord minNrShouldMatch hc collect current doc current score coordFactors current coord if bucketTable first null current bucketTable first bucketTable first current next return true more false end BucketTable SIZE for SubScorer sub scorers sub null sub sub next if sub done sub done sub scorer score sub collector end if sub done more true current bucketTable first while current null more return false public int doc return current doc public boolean next throws IOException boolean more do current bucketTable first if current bits prohibitedMask current bits requiredMask requiredMask current coord minNrShouldMatch return true more false end BucketTable SIZE for SubScorer sub scorers sub null sub sub next Scorer scorer sub scorer while sub done scorer doc end sub collector collect scorer doc scorer score sub done scorer next if sub done more true while bucketTable first null more return false public float score if coordFactors null computeCoordFactors return current score coordFactors current coord static final class Bucket static final class BucketTable public static final int SIZE public static final int MASK SIZE final Bucket buckets new Bucket SIZE public BucketTable public final int size return SIZE public HitCollector newCollector int mask return new Collector mask this static final class Collector extends HitCollector private BucketTable bucketTable private int mask public Collector int mask BucketTable bucketTable this mask mask this bucketTable bucketTable public final void collect final int doc final float score final BucketTable table bucketTable final int doc BucketTable MASK Bucket bucket table buckets if bucket null table buckets bucket new Bucket table first bucket public boolean skipTo int target throw new UnsupportedOperationException public Explanation explain int doc throw new UnsupportedOperationException public String toString StringBuffer buffer new StringBuffer buffer append for SubScorer sub scorers sub null sub sub next buffer append sub scorer toString buffer append buffer append return buffer toString public class SpanTermQuery extends SpanQuery protected Term term public SpanTermQuery Term term this term term public Term getTerm return term public String getField return term field public Collection getTerms Collection terms new ArrayList terms add term return terms public void extractTerms Set terms terms add term public String toString String field StringBuffer buffer new StringBuffer if term field equals field buffer append term text else buffer append term toString buffer append ToStringUtils boost getBoost return buffer toString public boolean equals Object if instanceof SpanTermQuery return false SpanTermQuery other SpanTermQuery return this getBoost other getBoost this term equals other term public int hashCode return Float floatToIntBits getBoost term hashCode public Spans getSpans final IndexReader reader throws IOException return new TermSpans reader termPositions term term public PayloadSpans getPayloadSpans IndexReader reader throws IOException return PayloadSpans getSpans reader public abstract class StringHelper public static final int bytesDifference byte bytes1 int len1 byte bytes2 int len2 int len len1 len2 len1 len2 for int len if bytes1 bytes2 return return len public static final int stringDifference String s1 String s2 int len1 s1 length int len2 s2 length int len len1 len2 len1 len2 for int len if s1 charAt s2 charAt return return len private StringHelper public class SpanFilterResult private BitSet bits private DocIdSet docIdSet public SpanFilterResult BitSet bits List positions this bits bits this positions positions public SpanFilterResult DocIdSet docIdSet List positions this docIdSet docIdSet this positions positions public List getPositions return positions public BitSet getBits return bits public DocIdSet getDocIdSet return docIdSet public static class PositionInfo private int doc private List positions public PositionInfo int doc this doc doc positions new ArrayList public void addPosition int start int end positions add new StartEnd start end public int getDoc return doc public List getPositions return positions public static class StartEnd private int start private int end public StartEnd int start int end this start start this end end public int getEnd return end public int getStart return start class RAMInputStream extends IndexInput implements Cloneable static final int BUFFER_SIZE RAMOutputStream BUFFER_SIZE private RAMFile file private long length private byte currentBuffer private int currentBufferIndex private int bufferPosition private long bufferStart private int bufferLength RAMInputStream RAMFile throws IOException file length file length if length BUFFER_SIZE Integer MAX_VALUE throw new IOException length currentBufferIndex currentBuffer null public void close public long length return length public byte readByte throws IOException if bufferPosition bufferLength currentBufferIndex switchCurrentBuffer true return currentBuffer bufferPosition public void readBytes byte int offset int len throws IOException while len if bufferPosition bufferLength currentBufferIndex switchCurrentBuffer true int remainInBuffer bufferLength bufferPosition int bytesToCopy len remainInBuffer len remainInBuffer System arraycopy currentBuffer bufferPosition offset bytesToCopy offset bytesToCopy len bytesToCopy bufferPosition bytesToCopy private final void switchCurrentBuffer boolean enforceEOF throws IOException if currentBufferIndex file numBuffers if enforceEOF throw new IOException else currentBufferIndex bufferPosition BUFFER_SIZE else currentBuffer byte file getBuffer currentBufferIndex bufferPosition bufferStart long BUFFER_SIZE long currentBufferIndex long buflen length bufferStart bufferLength buflen BUFFER_SIZE BUFFER_SIZE int buflen public long getFilePointer return currentBufferIndex bufferStart bufferPosition public void seek long pos throws IOException if currentBuffer null pos bufferStart pos bufferStart BUFFER_SIZE currentBufferIndex int pos BUFFER_SIZE switchCurrentBuffer false bufferPosition int pos BUFFER_SIZE public abstract class Searcher implements Searchable public final Hits search Query query throws IOException return search query Filter null public Hits search Query query Filter filter throws IOException return new Hits this query filter public Hits search Query query Sort sort throws IOException return new Hits this query null sort public Hits search Query query Filter filter Sort sort throws IOException return new Hits this query filter sort public TopFieldDocs search Query query Filter filter int Sort sort throws IOException return search createWeight query filter sort public void search Query query HitCollector results throws IOException search query Filter null results public void search Query query Filter filter HitCollector results throws IOException search createWeight query filter results public TopDocs search Query query Filter filter int throws IOException return search createWeight query filter public TopDocs search Query query int throws IOException return search query null public Explanation explain Query query int doc throws IOException return explain createWeight query doc private Similarity similarity Similarity getDefault public void setSimilarity Similarity similarity this similarity similarity public Similarity getSimilarity return this similarity protected Weight createWeight Query query throws IOException return query weight this public int docFreqs Term terms throws IOException int result new int terms length for int terms length result docFreq terms return result abstract public void search Weight weight Filter filter HitCollector results throws IOException abstract public void close throws IOException abstract public int docFreq Term term throws IOException abstract public int maxDoc throws IOException abstract public TopDocs search Weight weight Filter filter int throws IOException abstract public Document doc int throws CorruptIndexException IOException abstract public Query rewrite Query query throws IOException abstract public Explanation explain Weight weight int doc throws IOException abstract public TopFieldDocs search Weight weight Filter filter int Sort sort throws IOException public class BoostingTermQuery extends SpanTermQuery public BoostingTermQuery Term term super term protected Weight createWeight Searcher searcher throws IOException return new BoostingTermWeight this searcher protected class BoostingTermWeight extends SpanWeight implements Weight public BoostingTermWeight BoostingTermQuery query Searcher searcher throws IOException super query searcher public Scorer scorer IndexReader reader throws IOException return new BoostingSpanScorer TermSpans query getSpans reader this similarity reader norms query getField protected class BoostingSpanScorer extends SpanScorer byte payload new byte private TermPositions positions protected float payloadScore private int payloadsSeen public BoostingSpanScorer TermSpans spans Weight weight Similarity similarity byte norms throws IOException super spans weight similarity norms positions spans getPositions protected boolean setFreqCurrentDoc throws IOException if more return false doc spans doc freq payloadScore payloadsSeen Similarity similarity1 getSimilarity while more doc spans doc int matchLength spans end spans start freq similarity1 sloppyFreq matchLength processPayload similarity1 return more freq protected void processPayload Similarity similarity throws IOException if positions isPayloadAvailable payload positions getPayload payload payloadScore similarity scorePayload term field payload positions getPayloadLength payloadsSeen else public float score throws IOException return super score payloadsSeen payloadScore payloadsSeen public Explanation explain final int doc throws IOException ComplexExplanation result new ComplexExplanation Explanation nonPayloadExpl super explain doc result addDetail nonPayloadExpl Explanation payloadBoost new Explanation result addDetail payloadBoost float avgPayloadScore payloadsSeen payloadScore payloadsSeen payloadBoost setValue avgPayloadScore payloadBoost setDescription result setValue nonPayloadExpl getValue avgPayloadScore result setDescription return result public boolean equals Object if instanceof BoostingTermQuery return false BoostingTermQuery other BoostingTermQuery return this getBoost other getBoost this term equals other term public abstract class Analyzer public abstract TokenStream tokenStream String fieldName Reader reader public TokenStream reusableTokenStream String fieldName Reader reader throws IOException return tokenStream fieldName reader private ThreadLocal tokenStreams new ThreadLocal protected Object getPreviousTokenStream return tokenStreams get protected void setPreviousTokenStream Object obj tokenStreams set obj public int getPositionIncrementGap String fieldName return public class SimpleFSLockFactory extends LockFactory private File lockDir SimpleFSLockFactory throws IOException this File null public SimpleFSLockFactory File lockDir throws IOException setLockDir lockDir public SimpleFSLockFactory String lockDirName throws IOException lockDir new File lockDirName setLockDir lockDir void setLockDir File lockDir throws IOException this lockDir lockDir public Lock makeLock String lockName if lockPrefix null lockName lockPrefix lockName return new SimpleFSLock lockDir lockName public void clearLock String lockName throws IOException if lockDir exists if lockPrefix null lockName lockPrefix lockName File lockFile new File lockDir lockName if lockFile exists lockFile delete throw new IOException lockFile class SimpleFSLock extends Lock File lockFile File lockDir public SimpleFSLock File lockDir String lockFileName this lockDir lockDir lockFile new File lockDir lockFileName public boolean obtain throws IOException if lockDir exists if lockDir mkdirs throw new IOException lockDir getAbsolutePath else if lockDir isDirectory throw new IOException lockDir getAbsolutePath return lockFile createNewFile public void release throws LockReleaseFailedException if lockFile exists lockFile delete throw new LockReleaseFailedException lockFile public boolean isLocked return lockFile exists public String toString return lockFile public class LockReleaseFailedException extends IOException public LockReleaseFailedException String message super message public abstract class TokenFilter extends TokenStream protected TokenStream input protected TokenFilter TokenStream input this input input public void close throws IOException input close public void reset throws IOException super reset input reset final class DocFieldConsumersPerThread extends DocFieldConsumerPerThread final DocFieldConsumerPerThread one final DocFieldConsumerPerThread two final DocFieldConsumers parent final DocumentsWriter DocState docState public DocFieldConsumersPerThread DocFieldProcessorPerThread docFieldProcessorPerThread DocFieldConsumers parent DocFieldConsumerPerThread one DocFieldConsumerPerThread two this parent parent this one one this two two docState docFieldProcessorPerThread docState public void startDocument throws IOException one startDocument two startDocument public void abort try one abort finally two abort public DocumentsWriter DocWriter finishDocument throws IOException final DocumentsWriter DocWriter oneDoc one finishDocument final DocumentsWriter DocWriter twoDoc two finishDocument if oneDoc null return twoDoc else if twoDoc null return oneDoc else DocFieldConsumers PerDoc both parent getPerDoc both docID docState docID assert oneDoc docID docState docID assert twoDoc docID docState docID both one oneDoc both two twoDoc return both public DocFieldConsumerPerField addField FieldInfo fi return new DocFieldConsumersPerField this one addField fi two addField fi final public class UnicodeUtil public static final int UNI_SUR_HIGH_START public static final int UNI_SUR_HIGH_END public static final int UNI_SUR_LOW_START public static final int UNI_SUR_LOW_END public static final int UNI_REPLACEMENT_CHAR private static final long UNI_MAX_BMP private static final int HALF_BASE private static final long HALF_SHIFT private static final long HALF_MASK public static final class UTF8Result public byte result new byte public int length public void setLength int newLength if result length newLength byte newArray new byte int newLength System arraycopy result newArray length result newArray length newLength public static final class UTF16Result public char result new char public int offsets new int public int length public void setLength int newLength if result length newLength char newArray new char int newLength System arraycopy result newArray length result newArray length newLength public void copyText UTF16Result other setLength other length System arraycopy other result result length public static void UTF16toUTF8 final char source final int offset UTF8Result result int upto int offset byte out result result while true final int code int source if upto out length byte newOut new byte out length assert newOut length upto System arraycopy out newOut upto result result out newOut if code out upto byte code else if code out upto byte code out upto byte code else if code code if code break out upto byte code out upto byte code out upto byte code else if code source int utf32 int source if utf32 utf32 utf32 code utf32 out upto byte utf32 out upto byte utf32 out upto byte utf32 out upto byte utf32 continue out upto byte out upto byte out upto byte result length upto public static void UTF16toUTF8 final char source final int offset final int length UTF8Result result int upto int offset final int end offset length byte out result result while end final int code int source if upto out length byte newOut new byte out length assert newOut length upto System arraycopy out newOut upto result result out newOut if code out upto byte code else if code out upto byte code out upto byte code else if code code out upto byte code out upto byte code out upto byte code else if code end source int utf32 int source if utf32 utf32 utf32 code utf32 out upto byte utf32 out upto byte utf32 out upto byte utf32 out upto byte utf32 continue out upto byte out upto byte out upto byte result length upto public static void UTF16toUTF8 final String final int offset final int length UTF8Result result final int end offset length byte out result result int upto for int offset end final int code int charAt if upto out length byte newOut new byte out length assert newOut length upto System arraycopy out newOut upto result result out newOut if code out upto byte code else if code out upto byte code out upto byte code else if code code out upto byte code out upto byte code out upto byte code else if code end int utf32 int charAt if utf32 utf32 utf32 code utf32 out upto byte utf32 out upto byte utf32 out upto byte utf32 out upto byte utf32 continue out upto byte out upto byte out upto byte result length upto public static void UTF8toUTF16 final byte utf8 final int offset final int length final UTF16Result result final int end offset length char out result result if result offsets length end int newOffsets new int end System arraycopy result offsets newOffsets result offsets length result offsets newOffsets final int offsets result offsets int upto offset while offsets upto upto int outUpto offsets upto if outUpto length out length char newOut new char outUpto length System arraycopy out newOut outUpto result result out newOut while upto end final int utf8 upto final int ch offsets upto outUpto if assert ch else if ch utf8 upto offsets upto else if ch utf8 upto utf8 upto offsets upto offsets upto else assert ch utf8 upto utf8 upto utf8 upto offsets upto offsets upto offsets upto if ch UNI_MAX_BMP out outUpto char ch else final int chHalf ch HALF_BASE out outUpto char chHalf HALF_SHIFT UNI_SUR_HIGH_START out outUpto char chHalf HALF_MASK UNI_SUR_LOW_START offsets upto outUpto result length outUpto final class PhraseQueue extends PriorityQueue PhraseQueue int size initialize size protected final boolean lessThan Object o1 Object o2 PhrasePositions pp1 PhrasePositions o1 PhrasePositions pp2 PhrasePositions o2 if pp1 doc pp2 doc if pp1 position pp2 position return pp1 offset pp2 offset else return pp1 position pp2 position else return pp1 doc pp2 doc abstract class PhraseScorer extends Scorer private Weight weight protected byte norms protected float value private boolean firstTime true private boolean more true protected PhraseQueue pq protected PhrasePositions first last PhraseScorer Weight weight TermPositions tps int offsets Similarity similarity byte norms super similarity this norms norms this weight weight this value weight getValue for int tps length PhrasePositions pp new PhrasePositions tps offsets last next pp else first pp last pp public int doc return first doc public boolean next throws IOException if firstTime init firstTime false else if more return doNext private boolean doNext throws IOException while more if more else public float score throws IOException public boolean skipTo int target throws IOException firstTime false for PhrasePositions pp first more pp null pp pp next more pp skipTo target if more return doNext protected abstract float phraseFreq throws IOException private void init throws IOException for PhrasePositions pp first more pp null pp pp next more pp next if more sort private void sort pq clear for PhrasePositions pp first pp null pp pp next pq put pp pqToList protected final void pqToList last first null while pq top null PhrasePositions pp PhrasePositions pq pop last next pp else first pp last pp pp next null protected final void firstToLast last first first first next last next null public Explanation explain final int doc throws IOException Explanation tfExplanation new Explanation while next doc doc float phraseFreq doc doc freq tfExplanation setValue getSimilarity tf phraseFreq tfExplanation setDescription phraseFreq return tfExplanation public String toString return weight public class MMapDirectory extends FSDirectory private static class MMapIndexInput extends IndexInput private ByteBuffer buffer private final long length private MMapIndexInput RandomAccessFile raf throws IOException this length raf length this buffer raf getChannel map MapMode READ_ONLY length public byte readByte throws IOException return buffer get public void readBytes byte int offset int len throws IOException buffer get offset len public long getFilePointer return buffer position public void seek long pos throws IOException buffer position int pos public long length return length public Object clone MMapIndexInput clone MMapIndexInput super clone clone buffer buffer duplicate return clone public void close throws IOException private static class MultiMMapIndexInput extends IndexInput private ByteBuffer buffers private final long length private int curBufIndex private final int maxBufSize public MultiMMapIndexInput RandomAccessFile raf int maxBufSize throws IOException this length raf length this maxBufSize maxBufSize if maxBufSize throw new IllegalArgumentException maxBufSize if length maxBufSize Integer MAX_VALUE throw new IllegalArgumentException raf toString int nrBuffers int length maxBufSize if nrBuffers maxBufSize length nrBuffers this buffers new ByteBuffer nrBuffers this bufSizes new int nrBuffers long bufferStart FileChannel rafc raf getChannel for int bufNr bufNr nrBuffers bufNr int bufSize length bufferStart maxBufSize maxBufSize int length bufferStart this buffers bufNr rafc map MapMode READ_ONLY bufferStart bufSize this bufSizes bufNr bufSize bufferStart bufSize seek public byte readByte throws IOException if curAvail curBufIndex curBuf position curAvail bufSizes curBufIndex curAvail return curBuf get public void readBytes byte int offset int len throws IOException while len curAvail curBuf get offset curAvail len curAvail offset curAvail curBufIndex curBuf position curAvail bufSizes curBufIndex curBuf get offset len curAvail len public long getFilePointer return curBufIndex long maxBufSize curBuf position public void seek long pos throws IOException curBufIndex int pos maxBufSize curBuf buffers curBufIndex int bufOffset int pos curBufIndex maxBufSize curBuf position bufOffset curAvail bufSizes curBufIndex bufOffset public long length return length public Object clone MultiMMapIndexInput clone MultiMMapIndexInput super clone clone buffers new ByteBuffer buffers length for int bufNr bufNr buffers length bufNr clone buffers bufNr buffers bufNr duplicate try clone seek getFilePointer catch IOException ioe RuntimeException newException new RuntimeException ioe newException initCause ioe throw newException return clone public void close throws IOException private final int MAX_BBUF Integer MAX_VALUE public IndexInput openInput String name throws IOException File new File getFile name RandomAccessFile raf new RandomAccessFile try return raf length MAX_BBUF IndexInput new MMapIndexInput raf IndexInput new MultiMMapIndexInput raf MAX_BBUF finally raf close public IndexInput openInput String name int bufferSize throws IOException return openInput name public class StandardAnalyzer extends Analyzer private Set stopSet private boolean replaceInvalidAcronym defaultReplaceInvalidAcronym private static boolean defaultReplaceInvalidAcronym static final String System getProperty if null equals defaultReplaceInvalidAcronym true else defaultReplaceInvalidAcronym false public static boolean getDefaultReplaceInvalidAcronym return defaultReplaceInvalidAcronym public static void setDefaultReplaceInvalidAcronym boolean replaceInvalidAcronym defaultReplaceInvalidAcronym replaceInvalidAcronym public static final String STOP_WORDS StopAnalyzer ENGLISH_STOP_WORDS public StandardAnalyzer this STOP_WORDS public StandardAnalyzer Set stopWords stopSet stopWords public StandardAnalyzer String stopWords stopSet StopFilter makeStopSet stopWords public StandardAnalyzer File stopwords throws IOException stopSet WordlistLoader getWordSet stopwords public StandardAnalyzer Reader stopwords throws IOException stopSet WordlistLoader getWordSet stopwords public StandardAnalyzer boolean replaceInvalidAcronym this STOP_WORDS this replaceInvalidAcronym replaceInvalidAcronym public StandardAnalyzer Reader stopwords boolean replaceInvalidAcronym throws IOException this stopwords this replaceInvalidAcronym replaceInvalidAcronym public StandardAnalyzer File stopwords boolean replaceInvalidAcronym throws IOException this stopwords this replaceInvalidAcronym replaceInvalidAcronym public StandardAnalyzer String stopwords boolean replaceInvalidAcronym throws IOException this stopwords this replaceInvalidAcronym replaceInvalidAcronym public StandardAnalyzer Set stopwords boolean replaceInvalidAcronym throws IOException this stopwords this replaceInvalidAcronym replaceInvalidAcronym public TokenStream tokenStream String fieldName Reader reader StandardTokenizer tokenStream new StandardTokenizer reader replaceInvalidAcronym tokenStream setMaxTokenLength maxTokenLength TokenStream result new StandardFilter tokenStream result new LowerCaseFilter result result new StopFilter result stopSet return result private static final class SavedStreams StandardTokenizer tokenStream TokenStream filteredTokenStream public static final int DEFAULT_MAX_TOKEN_LENGTH private int maxTokenLength DEFAULT_MAX_TOKEN_LENGTH public void setMaxTokenLength int length maxTokenLength length public int getMaxTokenLength return maxTokenLength public TokenStream reusableTokenStream String fieldName Reader reader throws IOException SavedStreams streams SavedStreams getPreviousTokenStream if streams null streams new SavedStreams setPreviousTokenStream streams streams tokenStream new StandardTokenizer reader streams filteredTokenStream new StandardFilter streams tokenStream streams filteredTokenStream new LowerCaseFilter streams filteredTokenStream streams filteredTokenStream new StopFilter streams filteredTokenStream stopSet else streams tokenStream reset reader streams tokenStream setMaxTokenLength maxTokenLength streams tokenStream setReplaceInvalidAcronym replaceInvalidAcronym return streams filteredTokenStream public boolean isReplaceInvalidAcronym return replaceInvalidAcronym public void setReplaceInvalidAcronym boolean replaceInvalidAcronym this replaceInvalidAcronym replaceInvalidAcronym public class RAMOutputStream extends IndexOutput static final int BUFFER_SIZE private RAMFile file private byte currentBuffer private int currentBufferIndex private int bufferPosition private long bufferStart private int bufferLength public RAMOutputStream this new RAMFile RAMOutputStream RAMFile file currentBufferIndex currentBuffer null public void writeTo IndexOutput out throws IOException flush final long end file length long pos int buffer while pos end int length BUFFER_SIZE long nextPos pos length length int end pos out writeBytes byte file getBuffer buffer length pos nextPos public void reset try seek throw new RuntimeException toString file setLength public void close throws IOException flush public void seek long pos throws IOException setFileLength if pos bufferStart pos bufferStart bufferLength currentBufferIndex int pos BUFFER_SIZE switchCurrentBuffer bufferPosition int pos BUFFER_SIZE public long length return file length public void writeByte byte throws IOException if bufferPosition bufferLength currentBufferIndex switchCurrentBuffer currentBuffer bufferPosition public void writeBytes byte int offset int len throws IOException assert null while len if bufferPosition bufferLength currentBufferIndex switchCurrentBuffer int remainInBuffer currentBuffer length bufferPosition int bytesToCopy len remainInBuffer len remainInBuffer System arraycopy offset currentBuffer bufferPosition bytesToCopy offset bytesToCopy len bytesToCopy bufferPosition bytesToCopy private final void switchCurrentBuffer throws IOException if currentBufferIndex file numBuffers currentBuffer file addBuffer BUFFER_SIZE else currentBuffer byte file getBuffer currentBufferIndex bufferPosition bufferStart long BUFFER_SIZE long currentBufferIndex bufferLength currentBuffer length private void setFileLength long pointer bufferStart bufferPosition if pointer file length file setLength pointer public void flush throws IOException file setLastModified System currentTimeMillis setFileLength public long getFilePointer return currentBufferIndex bufferStart bufferPosition public long sizeInBytes return file numBuffers BUFFER_SIZE public class AlreadyClosedException extends IllegalStateException public AlreadyClosedException String message super message class ExtendedFieldCacheImpl extends FieldCacheImpl implements ExtendedFieldCache private static final LongParser LONG_PARSER new LongParser public long parseLong String value return Long parseLong value private static final DoubleParser DOUBLE_PARSER new DoubleParser public double parseDouble String value return Double parseDouble value public long getLongs IndexReader reader String field throws IOException return getLongs reader field LONG_PARSER public long getLongs IndexReader reader String field LongParser parser throws IOException return long longsCache get reader new Entry field parser Cache longsCache new Cache protected Object createValue IndexReader reader Object entryKey throws IOException Entry entry Entry entryKey String field entry field LongParser parser LongParser entry custom final long retArray new long reader maxDoc TermDocs termDocs reader termDocs TermEnum termEnum reader terms new Term field try do Term term termEnum term if term null term field field break long termval parser parseLong term text termDocs seek termEnum while termDocs next retArray termDocs doc termval while termEnum next finally termDocs close termEnum close return retArray public double getDoubles IndexReader reader String field throws IOException return getDoubles reader field DOUBLE_PARSER public double getDoubles IndexReader reader String field DoubleParser parser throws IOException return double doublesCache get reader new Entry field parser Cache doublesCache new Cache protected Object createValue IndexReader reader Object entryKey throws IOException Entry entry Entry entryKey String field entry field DoubleParser parser DoubleParser entry custom final double retArray new double reader maxDoc TermDocs termDocs reader termDocs TermEnum termEnum reader terms new Term field try do Term term termEnum term if term null term field field break double termval parser parseDouble term text termDocs seek termEnum while termDocs next retArray termDocs doc termval while termEnum next finally termDocs close termEnum close return retArray public Object getAuto IndexReader reader String field throws IOException return autoCache get reader field Cache autoCache new Cache protected Object createValue IndexReader reader Object fieldKey throws IOException String field String fieldKey intern TermEnum enumerator reader terms new Term field try Term term enumerator term if term null throw new RuntimeException field Object ret null if term field field String termtext term text trim try Integer parseInt termtext ret getInts reader field catch NumberFormatException nfe1 try Long parseLong termtext ret getLongs reader field catch NumberFormatException nfe2 try Float parseFloat termtext ret getFloats reader field catch NumberFormatException nfe3 ret getStringIndex reader field else throw new RuntimeException field return ret finally enumerator close public class FieldReaderException extends RuntimeException public FieldReaderException public FieldReaderException Throwable cause super cause public FieldReaderException String message super message public FieldReaderException String message Throwable cause super message cause final class FieldInfo String name boolean isIndexed int number boolean storeTermVector boolean storeOffsetWithTermVector boolean storePositionWithTermVector FieldInfo String na boolean tk int nu boolean storeTermVector boolean storePositionWithTermVector boolean storeOffsetWithTermVector boolean omitNorms boolean storePayloads boolean omitTf name na isIndexed tk number nu this storeTermVector storeTermVector this storeOffsetWithTermVector storeOffsetWithTermVector this storePositionWithTermVector storePositionWithTermVector this omitNorms omitNorms this storePayloads storePayloads this omitTf omitTf public Object clone return new FieldInfo name isIndexed number storeTermVector storePositionWithTermVector storeOffsetWithTermVector omitNorms storePayloads omitTf void update boolean isIndexed boolean storeTermVector boolean storePositionWithTermVector boolean storeOffsetWithTermVector boolean omitNorms boolean storePayloads boolean omitTf if this isIndexed isIndexed if this storeTermVector storeTermVector if this storePositionWithTermVector storePositionWithTermVector if this storeOffsetWithTermVector storeOffsetWithTermVector if this omitNorms omitNorms if this omitTf omitTf if this storePayloads storePayloads this storePayloads true void update FieldInfo other if isIndexed other isIndexed if storeTermVector other storeTermVector if storePositionWithTermVector other storePositionWithTermVector if storeOffsetWithTermVector other storeOffsetWithTermVector if omitNorms other omitNorms if this omitTf omitTf if storePayloads other storePayloads storePayloads true class SegmentTermDocs implements TermDocs protected SegmentReader parent protected IndexInput freqStream protected int count protected int df protected BitVector deletedDocs int doc int freq private int skipInterval private int maxSkipLevels private DefaultSkipListReader skipListReader private long freqBasePointer private long proxBasePointer private long skipPointer private boolean haveSkipped protected boolean currentFieldStoresPayloads protected boolean currentFieldOmitTf protected SegmentTermDocs SegmentReader parent this parent parent this freqStream IndexInput parent freqStream clone this deletedDocs parent deletedDocs this skipInterval parent tis getSkipInterval this maxSkipLevels parent tis getMaxSkipLevels public void seek Term term throws IOException TermInfo ti parent tis get term seek ti term public void seek TermEnum termEnum throws IOException TermInfo ti Term term SegmentTermEnum segmentTermEnum SegmentTermEnum termEnum term segmentTermEnum term ti segmentTermEnum termInfo term termEnum term ti parent tis get term seek ti term void seek TermInfo ti Term term throws IOException count FieldInfo fi parent fieldInfos fieldInfo term field currentFieldOmitTf fi null fi omitTf false currentFieldStoresPayloads fi null fi storePayloads false if ti null df else df ti docFreq doc freqBasePointer ti freqPointer proxBasePointer ti proxPointer skipPointer freqBasePointer ti skipOffset freqStream seek freqBasePointer haveSkipped false public void close throws IOException freqStream close if skipListReader null skipListReader close public final int doc return doc public final int freq return freq protected void skippingDoc throws IOException public boolean next throws IOException while true if count df return false final int docCode freqStream readVInt if currentFieldOmitTf doc docCode freq else else count if deletedDocs null deletedDocs get doc break skippingDoc return true public int read final int docs final int freqs throws IOException final int length docs length if currentFieldOmitTf return readNoTf docs freqs length else int while length count df final int docCode freqStream readVInt else count if deletedDocs null deletedDocs get doc docs doc freqs freq return private final int readNoTf final int docs final int freqs final int length throws IOException int while length count df doc freqStream readVInt count if deletedDocs null deletedDocs get doc docs doc freqs return protected void skipProx long proxPointer int payloadLength throws IOException public boolean skipTo int target throws IOException if skipListReader null skipListReader init skipPointer freqBasePointer proxBasePointer df currentFieldStoresPayloads haveSkipped true int newCount skipListReader skipTo target if newCount count freqStream seek skipListReader getFreqPointer skipProx skipListReader getProxPointer skipListReader getPayloadLength doc skipListReader getDoc count newCount do if next return false while target doc return true public interface PayloadSpans extends Spans public boolean isPayloadAvailable public class HitIterator implements Iterator private Hits hits private int hitNumber HitIterator Hits hits this hits hits public boolean hasNext return hitNumber hits length public Object next if hitNumber hits length throw new NoSuchElementException Object next new Hit hits hitNumber hitNumber return next public void remove throw new UnsupportedOperationException public int length return hits length class BooleanScorer2 extends Scorer private ArrayList requiredScorers new ArrayList private ArrayList optionalScorers new ArrayList private ArrayList prohibitedScorers new ArrayList private class Coordinator private float coordFactors null coordFactors new float maxCoord Similarity sim getSimilarity for int maxCoord coordFactors sim coord maxCoord void initDoc nrMatchers float coordFactor return coordFactors nrMatchers private final Coordinator coordinator private Scorer countingSumScorer null private final int minNrShouldMatch private boolean allowDocsOutOfOrder public BooleanScorer2 Similarity similarity int minNrShouldMatch boolean allowDocsOutOfOrder super similarity if minNrShouldMatch throw new IllegalArgumentException coordinator new Coordinator this minNrShouldMatch minNrShouldMatch this allowDocsOutOfOrder allowDocsOutOfOrder public BooleanScorer2 Similarity similarity int minNrShouldMatch this similarity minNrShouldMatch false public BooleanScorer2 Similarity similarity this similarity false public void add final Scorer scorer boolean required boolean prohibited if prohibited coordinator maxCoord if required if prohibited throw new IllegalArgumentException requiredScorers add scorer else if prohibited prohibitedScorers add scorer else optionalScorers add scorer private void initCountingSumScorer throws IOException coordinator init countingSumScorer makeCountingSumScorer private class SingleMatchScorer extends Scorer private Scorer scorer private int lastScoredDoc SingleMatchScorer Scorer scorer super scorer getSimilarity this scorer scorer public float score throws IOException if this doc lastScoredDoc lastScoredDoc this doc coordinator nrMatchers return scorer score public int doc return scorer doc public boolean next throws IOException return scorer next public boolean skipTo int docNr throws IOException return scorer skipTo docNr public Explanation explain int docNr throws IOException return scorer explain docNr private Scorer countingDisjunctionSumScorer final List scorers int minNrShouldMatch return new DisjunctionSumScorer scorers minNrShouldMatch private int lastScoredDoc public float score throws IOException if this doc lastScoredDoc lastScoredDoc this doc coordinator nrMatchers super nrMatchers return super score private static Similarity defaultSimilarity new DefaultSimilarity private Scorer countingConjunctionSumScorer List requiredScorers throws IOException final int requiredNrMatchers requiredScorers size return new ConjunctionScorer defaultSimilarity requiredScorers private int lastScoredDoc public float score throws IOException if this doc lastScoredDoc lastScoredDoc this doc coordinator nrMatchers requiredNrMatchers return super score return new ConjunctionScorer defaultSimilarity new Scorer req1 req2 return requiredScorers size makeCountingSumScorerNoReq makeCountingSumScorerSomeReq if optionalScorers size int nrOptRequired minNrShouldMatch minNrShouldMatch if optionalScorers size nrOptRequired Scorer requiredCountingSumScorer optionalScorers size nrOptRequired countingDisjunctionSumScorer optionalScorers nrOptRequired optionalScorers size new SingleMatchScorer Scorer optionalScorers get countingConjunctionSumScorer optionalScorers return addProhibitedScorers requiredCountingSumScorer if optionalScorers size minNrShouldMatch ArrayList allReq new ArrayList requiredScorers allReq addAll optionalScorers return addProhibitedScorers countingConjunctionSumScorer allReq Scorer requiredCountingSumScorer requiredScorers size new SingleMatchScorer Scorer requiredScorers get countingConjunctionSumScorer requiredScorers return addProhibitedScorers requiredCountingSumScorer countingDisjunctionSumScorer optionalScorers minNrShouldMatch return new ReqOptSumScorer addProhibitedScorers requiredCountingSumScorer optionalScorers size new SingleMatchScorer Scorer optionalScorers get private Scorer addProhibitedScorers Scorer requiredCountingSumScorer return prohibitedScorers size new ReqExclScorer requiredCountingSumScorer prohibitedScorers size Scorer prohibitedScorers get new DisjunctionSumScorer prohibitedScorers public void score HitCollector hc throws IOException if allowDocsOutOfOrder requiredScorers size prohibitedScorers size BooleanScorer bs new BooleanScorer getSimilarity minNrShouldMatch Iterator si optionalScorers iterator while si hasNext si prohibitedScorers iterator while si hasNext bs score hc else if countingSumScorer null initCountingSumScorer while countingSumScorer next hc collect countingSumScorer doc score protected boolean score HitCollector hc int max throws IOException int docNr countingSumScorer doc while docNr max hc collect docNr score if countingSumScorer next return false docNr countingSumScorer doc return true public int doc return countingSumScorer doc public boolean next throws IOException if countingSumScorer null initCountingSumScorer return countingSumScorer next public float score throws IOException coordinator initDoc float sum countingSumScorer score return sum coordinator coordFactor public boolean skipTo int target throws IOException if countingSumScorer null initCountingSumScorer return countingSumScorer skipTo target public Explanation explain int doc throw new UnsupportedOperationException public class PhraseQuery extends Query private String field private ArrayList terms new ArrayList private ArrayList positions new ArrayList private int maxPosition private int slop public PhraseQuery public void setSlop int slop public int getSlop return slop public void add Term term int position if positions size position Integer positions get positions size intValue add term position public void add Term term int position if terms size field term field else if term field field throw new IllegalArgumentException term terms add term positions add new Integer position if position maxPosition maxPosition position public Term getTerms return Term terms toArray new Term public int getPositions int result new int positions size for int positions size result Integer positions get intValue return result private class PhraseWeight implements Weight private Similarity similarity private float value private float idf private float queryNorm private float queryWeight public PhraseWeight Searcher searcher throws IOException this similarity getSimilarity searcher idf similarity idf terms searcher public String toString return PhraseQuery this public Query getQuery return PhraseQuery this public float getValue return value public float sumOfSquaredWeights public void normalize float queryNorm this queryNorm queryNorm public Scorer scorer IndexReader reader throws IOException return null TermPositions tps new TermPositions terms size for int terms size TermPositions reader termPositions Term terms get if null return null tps return new ExactPhraseScorer this tps getPositions similarity reader norms field else return new SloppyPhraseScorer this tps getPositions similarity slop reader norms field public Explanation explain IndexReader reader int doc throws IOException Explanation result new Explanation result setDescription getQuery doc StringBuffer docFreqs new StringBuffer StringBuffer query new StringBuffer query append for int terms size if docFreqs append query append Term term Term terms get docFreqs append term text docFreqs append docFreqs append reader docFreq term query append term text query append Explanation idfExpl new Explanation idf field docFreqs Explanation queryExpl new Explanation queryExpl setDescription getQuery Explanation boostExpl new Explanation getBoost if getBoost queryExpl addDetail boostExpl queryExpl addDetail idfExpl Explanation queryNormExpl new Explanation queryNorm queryExpl addDetail queryNormExpl queryExpl setValue boostExpl getValue idfExpl getValue queryNormExpl getValue result addDetail queryExpl Explanation fieldExpl new Explanation fieldExpl setDescription field query doc Explanation tfExpl scorer reader explain doc fieldExpl addDetail tfExpl fieldExpl addDetail idfExpl Explanation fieldNormExpl new Explanation byte fieldNorms reader norms field float fieldNorm fieldNorms null Similarity decodeNorm fieldNorms doc fieldNormExpl setValue fieldNorm fieldNormExpl setDescription field doc fieldExpl addDetail fieldNormExpl fieldExpl setValue tfExpl getValue idfExpl getValue fieldNormExpl getValue result addDetail fieldExpl result setValue queryExpl getValue fieldExpl getValue if queryExpl getValue return fieldExpl return result protected Weight createWeight Searcher searcher throws IOException Term term Term terms get Query termQuery new TermQuery term termQuery setBoost getBoost return termQuery createWeight searcher return new PhraseWeight searcher public void extractTerms Set queryTerms queryTerms addAll terms public String toString String StringBuffer buffer new StringBuffer if field null field equals buffer append field buffer append buffer append String pieces new String maxPosition for int terms size int pos Integer positions get intValue String pieces pos if null Term terms get text else Term terms get text pieces pos for int pieces length if buffer append String pieces if null buffer append else buffer append buffer append if slop buffer append buffer append slop buffer append ToStringUtils boost getBoost return buffer toString public boolean equals Object if instanceof PhraseQuery return false PhraseQuery other PhraseQuery return this getBoost other getBoost this slop other slop this terms equals other terms this positions equals other positions public int hashCode return Float floatToIntBits getBoost slop terms hashCode positions hashCode public class Token implements Cloneable public static final String DEFAULT_TYPE private static int MIN_BUFFER_SIZE private String termText char termBuffer int termLength int startOffset int endOffset String type DEFAULT_TYPE private int flags Payload payload int positionIncrement public Token public Token int start int end startOffset start endOffset end public Token int start int end String typ startOffset start endOffset end type typ public Token int start int end int flags startOffset start endOffset end this flags flags public Token String text int start int end termText text startOffset start endOffset end public Token String text int start int end String typ termText text startOffset start endOffset end type typ public Token String text int start int end int flags termText text startOffset start endOffset end this flags flags public Token char startTermBuffer int termBufferOffset int termBufferLength int start int end setTermBuffer startTermBuffer termBufferOffset termBufferLength startOffset start endOffset end public void setPositionIncrement int positionIncrement if positionIncrement throw new IllegalArgumentException positionIncrement this positionIncrement positionIncrement public int getPositionIncrement return positionIncrement public void setTermText String text termText text termBuffer null public final String termText if termText null termBuffer null termText new String termBuffer termLength return termText public final String term if termText null return termText initTermBuffer return new String termBuffer termLength public final void setTermBuffer char buffer int offset int length termText null char newCharBuffer growTermBuffer length if newCharBuffer null termBuffer newCharBuffer System arraycopy buffer offset termBuffer length termLength length public final void setTermBuffer String buffer termText null int length buffer length char newCharBuffer growTermBuffer length if newCharBuffer null termBuffer newCharBuffer buffer getChars length termBuffer termLength length public final void setTermBuffer String buffer int offset int length assert offset buffer length assert offset length buffer length termText null char newCharBuffer growTermBuffer length if newCharBuffer null termBuffer newCharBuffer buffer getChars offset offset length termBuffer termLength length public final char termBuffer initTermBuffer return termBuffer public char resizeTermBuffer int newSize char newCharBuffer growTermBuffer newSize if termBuffer null assert newCharBuffer null if termText null termText getChars termText length newCharBuffer termBuffer newCharBuffer else if newCharBuffer null System arraycopy termBuffer newCharBuffer termBuffer length termBuffer newCharBuffer termText null return termBuffer private char growTermBuffer int newSize if termBuffer null if termBuffer length newSize return null else return new char ArrayUtil getNextSize newSize else if newSize MIN_BUFFER_SIZE newSize MIN_BUFFER_SIZE if termText null int ttLength termText length if newSize ttLength newSize ttLength return new char newSize private void initTermBuffer if termBuffer null if termText null termBuffer new char MIN_BUFFER_SIZE termLength else int length termText length if length MIN_BUFFER_SIZE length MIN_BUFFER_SIZE termBuffer new char length termLength termText length termText getChars termText length termBuffer termText null else if termText null termText null public final int termLength initTermBuffer return termLength public final void setTermLength int length initTermBuffer if length termBuffer length throw new IllegalArgumentException length termBuffer length termLength length public final int startOffset return startOffset public void setStartOffset int offset this startOffset offset public final int endOffset return endOffset public void setEndOffset int offset this endOffset offset public final String type return type public final void setType String type this type type public int getFlags return flags public void setFlags int flags this flags flags public Payload getPayload return this payload public void setPayload Payload payload this payload payload public String toString StringBuffer sb new StringBuffer sb append initTermBuffer if termBuffer null sb append else sb append termBuffer termLength sb append append startOffset append append endOffset if type equals sb append append type if positionIncrement sb append append positionIncrement sb append return sb toString public void clear payload null termLength termText null positionIncrement flags public Object clone try Token Token super clone if termBuffer null termBuffer char termBuffer clone if payload null setPayload Payload payload clone return catch CloneNotSupportedException public Token clone char newTermBuffer int newTermOffset int newTermLength int newStartOffset int newEndOffset final Token new Token newTermBuffer newTermOffset newTermLength newStartOffset newEndOffset positionIncrement positionIncrement flags flags type type if payload null payload Payload payload clone return public boolean equals Object obj if obj this return true if obj instanceof Token Token other Token obj initTermBuffer other initTermBuffer if termLength other termLength startOffset other startOffset endOffset other endOffset flags other flags positionIncrement other positionIncrement subEqual type other type subEqual payload other payload for int termLength if termBuffer other termBuffer return false return true else return false else return false private boolean subEqual Object o1 Object o2 if o1 null return o2 null else return o1 equals o2 public int hashCode initTermBuffer int code termLength code code startOffset code code endOffset code code flags code code positionIncrement code code type hashCode code payload null code code payload hashCode code code ArrayUtil hashCode termBuffer termLength return code private void clearNoTermBuffer payload null positionIncrement flags public Token reinit char newTermBuffer int newTermOffset int newTermLength int newStartOffset int newEndOffset String newType clearNoTermBuffer payload null positionIncrement setTermBuffer newTermBuffer newTermOffset newTermLength startOffset newStartOffset endOffset newEndOffset type newType return this public Token reinit char newTermBuffer int newTermOffset int newTermLength int newStartOffset int newEndOffset clearNoTermBuffer setTermBuffer newTermBuffer newTermOffset newTermLength startOffset newStartOffset endOffset newEndOffset type DEFAULT_TYPE return this public Token reinit String newTerm int newStartOffset int newEndOffset String newType clearNoTermBuffer setTermBuffer newTerm startOffset newStartOffset endOffset newEndOffset type newType return this public Token reinit String newTerm int newTermOffset int newTermLength int newStartOffset int newEndOffset String newType clearNoTermBuffer setTermBuffer newTerm newTermOffset newTermLength startOffset newStartOffset endOffset newEndOffset type newType return this public Token reinit String newTerm int newStartOffset int newEndOffset clearNoTermBuffer setTermBuffer newTerm startOffset newStartOffset endOffset newEndOffset type DEFAULT_TYPE return this public Token reinit String newTerm int newTermOffset int newTermLength int newStartOffset int newEndOffset clearNoTermBuffer setTermBuffer newTerm newTermOffset newTermLength startOffset newStartOffset endOffset newEndOffset type DEFAULT_TYPE return this public void reinit Token prototype prototype initTermBuffer setTermBuffer prototype termBuffer prototype termLength positionIncrement prototype positionIncrement flags prototype flags startOffset prototype startOffset endOffset prototype endOffset type prototype type payload prototype payload public void reinit Token prototype String newTerm setTermBuffer newTerm positionIncrement prototype positionIncrement flags prototype flags startOffset prototype startOffset endOffset prototype endOffset type prototype type payload prototype payload public void reinit Token prototype char newTermBuffer int offset int length setTermBuffer newTermBuffer offset length positionIncrement prototype positionIncrement flags prototype flags startOffset prototype startOffset endOffset prototype endOffset type prototype type payload prototype payload public class PayloadSpanUtil private IndexReader reader public PayloadSpanUtil IndexReader reader this reader reader public Collection getPayloadsForQuery Query query throws IOException Collection payloads new ArrayList queryToSpanQuery query payloads return payloads private void queryToSpanQuery Query query Collection payloads throws IOException if query instanceof BooleanQuery BooleanClause queryClauses BooleanQuery query getClauses for int queryClauses length if queryClauses isProhibited queryToSpanQuery queryClauses getQuery payloads else if query instanceof PhraseQuery Term phraseQueryTerms PhraseQuery query getTerms SpanQuery clauses new SpanQuery phraseQueryTerms length for int phraseQueryTerms length clauses new SpanTermQuery phraseQueryTerms int slop PhraseQuery query getSlop boolean inorder false if slop inorder true SpanNearQuery sp new SpanNearQuery clauses slop inorder sp setBoost query getBoost getPayloads payloads sp else if query instanceof TermQuery SpanTermQuery stq new SpanTermQuery TermQuery query getTerm stq setBoost query getBoost getPayloads payloads stq else if query instanceof SpanQuery getPayloads payloads SpanQuery query else if query instanceof FilteredQuery queryToSpanQuery FilteredQuery query getQuery payloads else if query instanceof DisjunctionMaxQuery for Iterator iterator DisjunctionMaxQuery query iterator iterator hasNext queryToSpanQuery Query iterator next payloads else if query instanceof MultiPhraseQuery final MultiPhraseQuery mpq MultiPhraseQuery query final List termArrays mpq getTermArrays final int positions mpq getPositions if positions length int maxPosition positions positions length for int positions length if positions maxPosition maxPosition positions final List disjunctLists new List maxPosition int distinctPositions for int termArrays size final Term termArray Term termArrays get List disjuncts disjunctLists positions if disjuncts null disjuncts disjunctLists positions new ArrayList termArray length distinctPositions for int termArray length disjuncts add new SpanTermQuery termArray int positionGaps int position final SpanQuery clauses new SpanQuery distinctPositions for int disjunctLists length List disjuncts disjunctLists if disjuncts null clauses position new SpanOrQuery SpanQuery disjuncts toArray new SpanQuery disjuncts size else positionGaps final int slop mpq getSlop final boolean inorder slop SpanNearQuery sp new SpanNearQuery clauses slop positionGaps inorder sp setBoost query getBoost getPayloads payloads sp private void getPayloads Collection payloads SpanQuery query throws IOException PayloadSpans spans query getPayloadSpans reader while spans next true if spans isPayloadAvailable Collection payload spans getPayload Iterator it payload iterator while it hasNext byte bytes byte it next payloads add bytes public interface SortComparatorSource extends Serializable ScoreDocComparator newComparator IndexReader reader String fieldname throws IOException abstract class InvertedDocConsumerPerThread abstract void startDocument throws IOException abstract InvertedDocConsumerPerField addField DocInverterPerField docInverterPerField FieldInfo fieldInfo abstract DocumentsWriter DocWriter finishDocument throws IOException abstract void abort public class TeeTokenFilter extends TokenFilter SinkTokenizer sink public TeeTokenFilter TokenStream input SinkTokenizer sink super input this sink sink public Token next final Token reusableToken throws IOException assert reusableToken null Token nextToken input next reusableToken sink add nextToken return nextToken class DisjunctionMaxScorer extends Scorer private ArrayList subScorers new ArrayList private float tieBreakerMultiplier public DisjunctionMaxScorer float tieBreakerMultiplier Similarity similarity super similarity this tieBreakerMultiplier tieBreakerMultiplier public void add Scorer scorer throws IOException subScorers add scorer more true public boolean next throws IOException if more return false if firstTime heapify firstTime false int lastdoc Scorer subScorers get doc do if Scorer subScorers get next heapAdjust else heapRemoveRoot if subScorers isEmpty return more false while Scorer subScorers get doc lastdoc return true public int doc return Scorer subScorers get doc public float score throws IOException int doc Scorer subScorers get doc float sum Scorer subScorers get score max sum int size subScorers size scoreAll size doc sum max scoreAll size doc sum max return max sum max tieBreakerMultiplier private void scoreAll int root int size int doc float sum float max throws IOException if root size Scorer subScorers get root doc doc float sub Scorer subScorers get root score sum sub max Math max max sub scoreAll root size doc sum max scoreAll root size doc sum max public boolean skipTo int target throws IOException if firstTime if more return false heapify firstTime false while subScorers size Scorer subScorers get doc target if Scorer subScorers get skipTo target heapAdjust else heapRemoveRoot if subScorers size return more false return true public Explanation explain int doc throws IOException throw new UnsupportedOperationException private void heapify int size subScorers size for int size heapAdjust private void heapAdjust int root Scorer scorer Scorer subScorers get root int doc scorer doc int root size subScorers size while size int lchild Scorer lscorer Scorer subScorers get lchild int ldoc lscorer doc int rdoc Integer MAX_VALUE rchild Scorer rscorer null if rchild size rscorer Scorer subScorers get rchild rdoc rscorer doc if ldoc doc if rdoc ldoc subScorers set rscorer subScorers set rchild scorer rchild else subScorers set lscorer subScorers set lchild scorer lchild else if rdoc doc subScorers set rscorer subScorers set rchild scorer rchild else return private void heapRemoveRoot int size subScorers size if size subScorers remove else subScorers set subScorers get size subScorers remove size heapAdjust final class MergeDocIDRemapper public MergeDocIDRemapper SegmentInfos infos int docMaps int delCounts MergePolicy OneMerge merge int mergedDocCount this docMaps docMaps SegmentInfo firstSegment merge segments info int while true SegmentInfo info infos info if info equals firstSegment break minDocID info docCount int numDocs for int docMaps length numDocs infos info docCount assert infos info equals merge segments info maxDocID minDocID numDocs starts new int docMaps length newStarts new int docMaps length starts minDocID newStarts minDocID for docMaps length final int lastDocCount merge segments info docCount starts starts lastDocCount newStarts newStarts lastDocCount delCounts docShift numDocs mergedDocCount assert docShift maxDocID newStarts docMaps length merge segments info docMaps length docCount delCounts docMaps length public int remap int oldDocID if oldDocID minDocID return oldDocID else if oldDocID maxDocID return oldDocID docShift else while hi lo int mid lo hi int midValue starts mid if oldDocID midValue hi mid else if oldDocID midValue lo mid while mid docMaps length starts mid midValue if docMaps mid null return newStarts mid docMaps mid oldDocID starts mid else return newStarts mid oldDocID starts mid if docMaps hi null return newStarts hi docMaps hi oldDocID starts hi else return newStarts hi oldDocID starts hi public class NativeFSLockFactory extends LockFactory private File lockDir private void acquireTestLock throws IOException String randomLockName Long toString new Random nextInt Character MAX_RADIX Lock makeLock randomLockName try obtain catch IOException IOException e2 new IOException lockDir e2 initCause throw e2 release NativeFSLockFactory throws IOException this File null public NativeFSLockFactory String lockDirName throws IOException this new File lockDirName public NativeFSLockFactory File lockDir throws IOException setLockDir lockDir void setLockDir File lockDir throws IOException this lockDir lockDir if lockDir null if lockDir exists if lockDir mkdirs throw new IOException lockDir getAbsolutePath else if lockDir isDirectory throw new IOException lockDir getAbsolutePath acquireTestLock public synchronized Lock makeLock String lockName if lockPrefix null lockName lockPrefix lockName return new NativeFSLock lockDir lockName public void clearLock String lockName throws IOException if lockDir exists if lockPrefix null lockName lockPrefix lockName File lockFile new File lockDir lockName if lockFile exists lockFile delete throw new IOException lockFile class NativeFSLock extends Lock private RandomAccessFile private FileChannel channel private FileLock lock private File path private File lockDir private static HashSet LOCK_HELD new HashSet public NativeFSLock File lockDir String lockFileName this lockDir lockDir path new File lockDir lockFileName public synchronized boolean obtain throws IOException if isLocked return false if lockDir exists if lockDir mkdirs throw new IOException lockDir getAbsolutePath else if lockDir isDirectory throw new IOException lockDir getAbsolutePath String canonicalPath path getCanonicalPath boolean markedHeld false try synchronized LOCK_HELD if LOCK_HELD contains canonicalPath return false else LOCK_HELD add canonicalPath markedHeld true try new RandomAccessFile path catch IOException failureReason null if null try channel getChannel try lock channel tryLock catch IOException failureReason finally if lock null try channel close finally channel null finally if channel null try close finally null finally if markedHeld isLocked synchronized LOCK_HELD if LOCK_HELD contains canonicalPath LOCK_HELD remove canonicalPath return isLocked public synchronized void release throws IOException if isLocked try lock release finally lock null try channel close finally channel null try close finally null synchronized LOCK_HELD LOCK_HELD remove path getCanonicalPath if path delete throw new LockReleaseFailedException path public synchronized boolean isLocked return lock null public String toString return path public void finalize throws Throwable try if isLocked release finally super finalize public class SimilarityDelegator extends Similarity private Similarity delegee public SimilarityDelegator Similarity delegee this delegee delegee public float lengthNorm String fieldName int numTerms return delegee lengthNorm fieldName numTerms public float queryNorm float sumOfSquaredWeights return delegee queryNorm sumOfSquaredWeights public float tf float freq return delegee tf freq public float sloppyFreq int distance return delegee sloppyFreq distance public float idf int docFreq int numDocs return delegee idf docFreq numDocs public float coord int overlap int maxOverlap return delegee coord overlap maxOverlap public float scorePayload String fieldName byte payload int offset int length return delegee scorePayload fieldName payload offset length public class SingleInstanceLockFactory extends LockFactory private HashSet locks new HashSet public Lock makeLock String lockName return new SingleInstanceLock locks lockName public void clearLock String lockName throws IOException synchronized locks if locks contains lockName locks remove lockName class SingleInstanceLock extends Lock String lockName private HashSet locks public SingleInstanceLock HashSet locks String lockName this locks locks this lockName lockName public boolean obtain throws IOException synchronized locks return locks add lockName public void release synchronized locks locks remove lockName public boolean isLocked synchronized locks return locks contains lockName public String toString return lockName public class TimeLimitedCollector extends HitCollector public static final int DEFAULT_RESOLUTION public boolean DEFAULT_GREEDY false private static long resolution DEFAULT_RESOLUTION private boolean greedy DEFAULT_GREEDY private static class TimerThread extends Thread private volatile long time private TimerThread super this setDaemon true public void run boolean interrupted false try while true time resolution try Thread sleep resolution catch final InterruptedException interrupted true finally if interrupted Thread currentThread interrupt public long getMilliseconds return time public static class TimeExceededException extends RuntimeException private long timeAllowed private long timeElapsed private int lastDocCollected private TimeExceededException long timeAllowed long timeElapsed int lastDocCollected super timeElapsed timeAllowed this timeAllowed timeAllowed this timeElapsed timeElapsed this lastDocCollected lastDocCollected public long getTimeAllowed return timeAllowed public long getTimeElapsed return timeElapsed public int getLastDocCollected return lastDocCollected private final static TimerThread TIMER_THREAD new TimerThread static TIMER_THREAD start private final long t0 private final long timeout private final HitCollector hc public TimeLimitedCollector final HitCollector hc final long timeAllowed this hc hc t0 TIMER_THREAD getMilliseconds this timeout t0 timeAllowed public void collect final int doc final float score long time TIMER_THREAD getMilliseconds if timeout time if greedy hc collect doc score throw new TimeExceededException timeout t0 time t0 doc hc collect doc score public static long getResolution return resolution public static void setResolution long newResolution public boolean isGreedy return greedy public void setGreedy boolean greedy this greedy greedy public class SortField implements Serializable public static final int SCORE public static final int DOC public static final int AUTO public static final int STRING public static final int INT public static final int FLOAT public static final int LONG public static final int DOUBLE public static final int SHORT public static final int CUSTOM public static final int BYTE public static final SortField FIELD_SCORE new SortField null SCORE public static final SortField FIELD_DOC new SortField null DOC private String field private SortComparatorSource factory public SortField String field this field field intern public SortField String field boolean reverse this field field intern this reverse reverse public SortField String field int type this field field null field intern field this type type public SortField String field int type boolean reverse this field field null field intern field this type type this reverse reverse public SortField String field Locale locale this field field intern this type STRING this locale locale public SortField String field Locale locale boolean reverse this field field intern this type STRING this locale locale this reverse reverse public SortField String field SortComparatorSource comparator this field field null field intern field this type CUSTOM this factory comparator public SortField String field SortComparatorSource comparator boolean reverse this field field null field intern field this type CUSTOM this reverse reverse this factory comparator public String getField return field public int getType return type public Locale getLocale return locale public boolean getReverse return reverse public SortComparatorSource getFactory return factory public String toString StringBuffer buffer new StringBuffer switch type case SCORE buffer append break case DOC buffer append break case CUSTOM buffer append append field append append factory append break default buffer append append field append break if locale null buffer append append locale append if reverse buffer append return buffer toString public class CachingWrapperFilter extends Filter protected Filter filter protected transient Map cache public CachingWrapperFilter Filter filter this filter filter public BitSet bits IndexReader reader throws IOException if cache null cache new WeakHashMap BitSet cached BitSet cache get reader if cached null return cached final BitSet bits filter bits reader cache put reader bits return bits public DocIdSet getDocIdSet IndexReader reader throws IOException if cache null cache new WeakHashMap DocIdSet cached DocIdSet cache get reader if cached null return cached final DocIdSet docIdSet filter getDocIdSet reader cache put reader docIdSet return docIdSet public String toString return filter public boolean equals Object if instanceof CachingWrapperFilter return false return this filter equals CachingWrapperFilter filter public int hashCode return filter hashCode public interface TermPositionVector extends TermFreqVector public int getTermPositions int index public TermVectorOffsetInfo getOffsets int index public final class FastCharStream implements CharStream char buffer null public FastCharStream Reader input public final char readChar throws IOException if bufferPosition bufferLength refill return buffer bufferPosition private final void refill throws IOException int newPosition bufferLength tokenStart buffer new char char newBuffer new char buffer length System arraycopy buffer newBuffer bufferLength buffer newBuffer System arraycopy buffer tokenStart buffer newPosition bufferPosition newPosition bufferStart tokenStart tokenStart input read buffer newPosition buffer length newPosition if charsRead throw new IOException else bufferLength charsRead public final char BeginToken throws IOException tokenStart bufferPosition return readChar public final void backup int amount bufferPosition amount public final String GetImage return new String buffer tokenStart bufferPosition tokenStart public final char GetSuffix int len char value new char len System arraycopy buffer bufferPosition len value len return value public final void Done try input close catch IOException System err println public final int getColumn return bufferStart bufferPosition public final int getLine return public final int getEndColumn return bufferStart bufferPosition public final int getEndLine return public final int getBeginColumn return bufferStart tokenStart public final int getBeginLine return public class WildcardTermEnum extends FilteredTermEnum Term searchTerm String field String text String pre int preLen boolean endEnum false public WildcardTermEnum IndexReader reader Term term throws IOException super searchTerm term field searchTerm field text searchTerm text int sidx text indexOf WILDCARD_STRING int cidx text indexOf WILDCARD_CHAR int idx sidx if idx idx cidx else if cidx idx Math min idx cidx pre searchTerm text substring idx preLen pre length text text substring preLen setEnum reader terms new Term searchTerm field pre protected final boolean termCompare Term term if field term field String searchText term text if searchText startsWith pre return wildcardEquals text searchText preLen endEnum true return false public final float difference return public final boolean endEnum return endEnum public static final char WILDCARD_STRING public static final char WILDCARD_CHAR public static final boolean wildcardEquals String pattern int patternIdx String string int stringIdx int patternIdx for int stringIdx boolean sEnd string length boolean pEnd pattern length if sEnd boolean justWildcardsLeft true int wildcardSearchPos while wildcardSearchPos pattern length justWildcardsLeft char wildchar pattern charAt wildcardSearchPos if wildchar WILDCARD_CHAR wildchar WILDCARD_STRING justWildcardsLeft false else if wildchar WILDCARD_CHAR return false wildcardSearchPos if justWildcardsLeft return true if sEnd pEnd break if pattern charAt WILDCARD_CHAR continue if pattern charAt WILDCARD_STRING for int string length if wildcardEquals pattern string return true break if pattern charAt string charAt break return false public void close throws IOException super close searchTerm null field null text null public abstract class IndexCommit implements IndexCommitPoint public abstract String getSegmentsFileName public abstract Collection getFileNames throws IOException public abstract Directory getDirectory public void delete throw new UnsupportedOperationException public boolean isDeleted throw new UnsupportedOperationException public boolean isOptimized throw new UnsupportedOperationException public boolean equals Object other if other instanceof IndexCommit IndexCommit otherCommit IndexCommit other return otherCommit getDirectory equals getDirectory otherCommit getVersion getVersion else return false public int hashCode return getDirectory hashCode getSegmentsFileName hashCode public long getVersion throw new UnsupportedOperationException public long getGeneration throw new UnsupportedOperationException public long getTimestamp throws IOException return getDirectory fileModified getSegmentsFileName public final class StopFilter extends TokenFilter private static boolean ENABLE_POSITION_INCREMENTS_DEFAULT false private final CharArraySet stopWords private boolean enablePositionIncrements ENABLE_POSITION_INCREMENTS_DEFAULT public StopFilter TokenStream input String stopWords this input stopWords false public StopFilter TokenStream in String stopWords boolean ignoreCase super in this stopWords CharArraySet makeStopSet stopWords ignoreCase public StopFilter TokenStream input Set stopWords boolean ignoreCase super input if stopWords instanceof CharArraySet this stopWords CharArraySet stopWords else this stopWords new CharArraySet stopWords size ignoreCase this stopWords addAll stopWords public StopFilter TokenStream in Set stopWords this in stopWords false public static final Set makeStopSet String stopWords return makeStopSet stopWords false public static final Set makeStopSet String stopWords boolean ignoreCase CharArraySet stopSet new CharArraySet stopWords length ignoreCase stopSet addAll Arrays asList stopWords return stopSet public final Token next final Token reusableToken throws IOException assert reusableToken null int skippedPositions for Token nextToken input next reusableToken nextToken null nextToken input next reusableToken if stopWords contains nextToken termBuffer nextToken termLength if enablePositionIncrements nextToken setPositionIncrement nextToken getPositionIncrement skippedPositions return nextToken skippedPositions nextToken getPositionIncrement return null public static boolean getEnablePositionIncrementsDefault return ENABLE_POSITION_INCREMENTS_DEFAULT public static void setEnablePositionIncrementsDefault boolean defaultValue ENABLE_POSITION_INCREMENTS_DEFAULT defaultValue public boolean getEnablePositionIncrements return enablePositionIncrements public void setEnablePositionIncrements boolean enable this enablePositionIncrements enable private final HeapedScorerDoc heap private final int maxSize private int size private class HeapedScorerDoc Scorer scorer int doc HeapedScorerDoc Scorer this doc HeapedScorerDoc Scorer scorer int doc this scorer scorer this doc doc void adjust doc scorer doc public ScorerDocQueue int maxSize size int heapSize maxSize heap new HeapedScorerDoc heapSize this maxSize maxSize public final void put Scorer scorer size heap size new HeapedScorerDoc scorer upHeap public boolean insert Scorer scorer if size maxSize put scorer return true else int docNr scorer doc heap new HeapedScorerDoc scorer docNr downHeap return true else return false public final Scorer top return topHSD scorer public final int topDoc return topHSD doc public final float topScore throws IOException return topHSD scorer score public final boolean topNextAndAdjustElsePop throws IOException return checkAdjustElsePop topHSD scorer next public final boolean topSkipToAndAdjustElsePop int target throws IOException return checkAdjustElsePop topHSD scorer skipTo target private boolean checkAdjustElsePop boolean cond topHSD doc topHSD scorer doc heap size null size downHeap return cond public final Scorer pop Scorer result topHSD scorer popNoResult return result private final void popNoResult heap size null size public final void adjustTop topHSD adjust downHeap public final int size return size public final void clear for int size heap null size private final void upHeap int size int while node doc heap doc topHSD heap private final void downHeap int int if size heap doc heap doc while size heap doc node doc if size heap doc heap doc topHSD heap public class DefaultSimilarity extends Similarity public float lengthNorm String fieldName int numTerms return float Math sqrt numTerms public float queryNorm float sumOfSquaredWeights return float Math sqrt sumOfSquaredWeights public float tf float freq return float Math sqrt freq public float sloppyFreq int distance return distance public float idf int docFreq int numDocs return float Math log numDocs double docFreq public float coord int overlap int maxOverlap return overlap float maxOverlap final class TermsHashPerThread extends InvertedDocConsumerPerThread final TermsHash termsHash final TermsHashConsumerPerThread consumer final TermsHashPerThread nextPerThread final CharBlockPool charPool final IntBlockPool intPool final ByteBlockPool bytePool final boolean primary final DocumentsWriter DocState docState final RawPostingList freePostings new RawPostingList int freePostingsCount public TermsHashPerThread DocInverterPerThread docInverterPerThread final TermsHash termsHash final TermsHash nextTermsHash final TermsHashPerThread primaryPerThread docState docInverterPerThread docState this termsHash termsHash this consumer termsHash consumer addThread this if nextTermsHash null charPool new CharBlockPool termsHash docWriter primary true else charPool primaryPerThread charPool primary false intPool new IntBlockPool termsHash docWriter termsHash trackAllocations bytePool new ByteBlockPool termsHash docWriter byteBlockAllocator termsHash trackAllocations if nextTermsHash null nextPerThread nextTermsHash addThread docInverterPerThread this else nextPerThread null InvertedDocConsumerPerField addField DocInverterPerField docInverterPerField final FieldInfo fieldInfo return new TermsHashPerField docInverterPerField this nextPerThread fieldInfo synchronized public void abort reset true consumer abort if nextPerThread null nextPerThread abort void morePostings throws IOException assert freePostingsCount termsHash getPostings freePostings freePostingsCount freePostings length assert noNullPostings freePostings freePostingsCount consumer private static boolean noNullPostings RawPostingList postings int count String details for int count assert postings null count details return true public void startDocument throws IOException consumer startDocument if nextPerThread null nextPerThread consumer startDocument public DocumentsWriter DocWriter finishDocument throws IOException final DocumentsWriter DocWriter doc consumer finishDocument final DocumentsWriter DocWriter doc2 if nextPerThread null doc2 nextPerThread consumer finishDocument else doc2 null if doc null return doc2 else doc setNext doc2 return doc void reset boolean recyclePostings intPool reset bytePool reset if primary charPool reset if recyclePostings termsHash recyclePostings freePostings freePostingsCount freePostingsCount class ReadOnlyMultiSegmentReader extends MultiSegmentReader ReadOnlyMultiSegmentReader Directory directory SegmentInfos sis boolean closeDirectory throws IOException super directory sis closeDirectory true ReadOnlyMultiSegmentReader Directory directory SegmentInfos infos boolean closeDirectory SegmentReader oldReaders int oldStarts Map oldNormsCache throws IOException super directory infos closeDirectory oldReaders oldStarts oldNormsCache true protected void acquireWriteLock ReadOnlySegmentReader noWrite 