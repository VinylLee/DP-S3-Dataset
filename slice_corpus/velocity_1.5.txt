public class JdkLogChute implements LogChute public static final String RUNTIME_LOG_JDK_LOGGER public static final String DEFAULT_LOG_NAME protected Logger logger null public void init RuntimeServices rs String name String rs getProperty RUNTIME_LOG_JDK_LOGGER if name null name DEFAULT_LOG_NAME logger Logger getLogger name log LogChute DEBUG_ID name protected Level getJdkLevel int level switch level case LogChute WARN_ID return Level WARNING case LogChute INFO_ID return Level INFO case LogChute DEBUG_ID return Level FINE case LogChute TRACE_ID return Level FINEST case LogChute ERROR_ID return Level SEVERE default return Level FINER public void log int level String message log level message null public void log int level String message Throwable Level jdkLevel getJdkLevel level if null logger log jdkLevel message else logger log jdkLevel message public boolean isLevelEnabled int level Level jdkLevel getJdkLevel level return logger isLoggable jdkLevel public abstract class IntrospectorBase implements IntrospectorCacheListener protected final Log log private final IntrospectorCache introspectorCache protected IntrospectorBase final Log log this log log introspectorCache addListener this public Method getMethod final Class final String name final Object params throws IllegalArgumentException MethodMap AmbiguousException if null throw new IllegalArgumentException if params null throw new IllegalArgumentException ClassMap classMap null IntrospectorCache ic getIntrospectorCache synchronized ic classMap ic get if classMap null classMap ic put return classMap findMethod name params protected IntrospectorCache getIntrospectorCache return introspectorCache protected void clearCache getIntrospectorCache clear protected ClassMap createClassMap final Class return getIntrospectorCache put protected ClassMap lookupClassMap final Class return getIntrospectorCache get public void triggerClear public void triggerGet Class ClassMap classMap public void triggerPut Class ClassMap classMap public class ASTIfStatement extends SimpleNode public ASTIfStatement int id super id public ASTIfStatement Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public boolean render InternalContextAdapter context Writer writer throws IOException MethodInvocationException ResourceNotFoundException ParseErrorException if jjtGetChild evaluate context jjtGetChild render context writer return true int totalNodes jjtGetNumChildren for int totalNodes if jjtGetChild evaluate context jjtGetChild render context writer return true return true public void process InternalContextAdapter context ParserVisitor visitor public class Include extends InputBase private String outputMsgStart private String outputMsgEnd public String getName return public int getType return LINE public void init RuntimeServices rs InternalContextAdapter context Node node throws TemplateInitException super init rs context node outputMsgStart rsvc getString RuntimeConstants ERRORMSG_START outputMsgStart outputMsgStart outputMsgEnd rsvc getString RuntimeConstants ERRORMSG_END outputMsgEnd outputMsgEnd public boolean render InternalContextAdapter context Writer writer Node node throws IOException MethodInvocationException ResourceNotFoundException int argCount node jjtGetNumChildren for int argCount Node node jjtGetChild if getType ParserTreeConstants JJTSTRINGLITERAL getType ParserTreeConstants JJTREFERENCE if renderOutput context writer outputErrorToStream writer else rsvc getLog error toString outputErrorToStream writer return true private boolean renderOutput Node node InternalContextAdapter context Writer writer throws IOException MethodInvocationException ResourceNotFoundException if node null rsvc getLog error return false Object value node value context if value null rsvc getLog error return false String sourcearg value toString String arg EventHandlerUtil includeEvent rsvc context sourcearg context getCurrentTemplateName getName boolean blockinput false if arg null blockinput true Resource resource null try if blockinput resource rsvc getContent arg getInputEncoding context catch ResourceNotFoundException rnfe rsvc getLog error arg context getCurrentTemplateName getLine getColumn throw rnfe catch RuntimeException throw catch Exception rsvc getLog error arg context getCurrentTemplateName getLine getColumn if blockinput return true else if resource null return false writer write String resource getData return true private void outputErrorToStream Writer writer String msg throws IOException if outputMsgStart null outputMsgEnd null writer write outputMsgStart writer write msg writer write outputMsgEnd public class ReportInvalidReferences implements InvalidReferenceEventHandler RuntimeServicesAware public static final String EVENTHANDLER_INVALIDREFERENCE_EXCEPTION List invalidReferences new ArrayList private boolean stopOnFirstInvalidReference false public Object invalidGetMethod Context context String reference Object object String property Info info reportInvalidReference reference info return null public Object invalidMethod Context context String reference Object object String method Info info if reference null reportInvalidReference object getClass getName method info else reportInvalidReference reference info return null public boolean invalidSetMethod Context context String leftreference String rightreference Info info reportInvalidReference leftreference info return false private void reportInvalidReference String reference Info info InvalidReferenceInfo invalidReferenceInfo new InvalidReferenceInfo reference info invalidReferences add invalidReferenceInfo if stopOnFirstInvalidReference throw new ParseErrorException info invalidReferenceInfo getInvalidReference public List getInvalidReferences return invalidReferences public void setRuntimeServices RuntimeServices rs stopOnFirstInvalidReference rs getConfiguration getBoolean EVENTHANDLER_INVALIDREFERENCE_EXCEPTION false public class ASTFloatingPointLiteral extends SimpleNode private Number value null public ASTFloatingPointLiteral int id super id public ASTFloatingPointLiteral Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public Object init InternalContextAdapter context Object data throws TemplateInitException super init context data String str getFirstToken image try value new Double str catch NumberFormatException E1 value new BigDecimal str return data public Object value InternalContextAdapter context return value public abstract class Resource protected RuntimeServices rsvc null protected ResourceLoader resourceLoader protected static final long MILLIS_PER_SECOND protected long modificationCheckInterval protected long lastModified protected long nextCheck protected String name protected String encoding RuntimeConstants ENCODING_DEFAULT protected Object data null public Resource public void setRuntimeServices RuntimeServices rs rsvc rs public abstract boolean process throws ResourceNotFoundException ParseErrorException Exception public boolean isSourceModified return resourceLoader isSourceModified this public void setModificationCheckInterval long modificationCheckInterval this modificationCheckInterval modificationCheckInterval public boolean requiresChecking if modificationCheckInterval return false return System currentTimeMillis nextCheck public void touch nextCheck System currentTimeMillis MILLIS_PER_SECOND modificationCheckInterval public void setName String name this name name public String getName return name public void setEncoding String encoding this encoding encoding public String getEncoding return encoding public long getLastModified return lastModified public void setLastModified long lastModified this lastModified lastModified public ResourceLoader getResourceLoader return resourceLoader public void setResourceLoader ResourceLoader resourceLoader this resourceLoader resourceLoader public void setData Object data this data data public Object getData return data public class AnakiaElement extends Element private static final long serialVersionUID private static final XMLOutputter DEFAULT_OUTPUTTER new XMLOutputter static DEFAULT_OUTPUTTER getFormat setLineSeparator System getProperty public AnakiaElement String name Namespace namespace super name namespace public AnakiaElement String name super name public AnakiaElement String name String uri super name uri public AnakiaElement String name String prefix String uri super name prefix uri public NodeList selectNodes String xpathExpression return new NodeList XPathCache getXPath xpathExpression applyTo this false public String toString return DEFAULT_OUTPUTTER outputString this public List getContent return new NodeList super getContent false public List getChildren return new NodeList super getChildren false public List getChildren String name return new NodeList super getChildren name public List getChildren String name Namespace ns return new NodeList super getChildren name ns public List getAttributes return new NodeList super getAttributes public class PrintExceptions implements MethodExceptionEventHandler RuntimeServicesAware private static String SHOW_MESSAGE private static String SHOW_STACK_TRACE private RuntimeServices rs null public Object methodException Class claz String method Exception throws Exception boolean showMessage rs getBoolean SHOW_MESSAGE false boolean showStackTrace rs getBoolean SHOW_STACK_TRACE false StringBuffer st if showMessage showStackTrace st new StringBuffer st append getClass getName append st append getMessage append st append getStackTrace else if showMessage st new StringBuffer st append getClass getName append st append getMessage append else if showStackTrace st new StringBuffer st append getClass getName append st append getStackTrace else st new StringBuffer st append getClass getName append return st toString private static String getStackTrace Throwable throwable PrintWriter printWriter null try StringWriter stackTraceWriter new StringWriter printWriter new PrintWriter stackTraceWriter throwable printStackTrace printWriter printWriter flush return stackTraceWriter toString finally if printWriter null printWriter close public void setRuntimeServices RuntimeServices rs this rs rs public class EscapeXmlReference extends EscapeReference protected String escape Object text return StringEscapeUtils escapeXml text toString protected String getMatchAttribute return public class ClasspathResourceLoader extends ResourceLoader public void init ExtendedProperties configuration if log isTraceEnabled log trace public InputStream getResourceStream String name throws ResourceNotFoundException InputStream result null if StringUtils isEmpty name throw new ResourceNotFoundException try result ClassUtils getResourceAsStream getClass name catch Exception fnfe throw ResourceNotFoundException ExceptionUtils createWithCause ResourceNotFoundException class name fnfe if result null String msg name throw new ResourceNotFoundException msg return result public boolean isSourceModified Resource resource return false public long getLastModified Resource resource return public interface RuntimeConstants String RUNTIME_LOG String RUNTIME_LOG_LOGSYSTEM String RUNTIME_LOG_LOGSYSTEM_CLASS String RUNTIME_LOG_ERROR_STACKTRACE String RUNTIME_LOG_WARN_STACKTRACE String RUNTIME_LOG_INFO_STACKTRACE String RUNTIME_LOG_REFERENCE_LOG_INVALID String TRACE_PREFIX String DEBUG_PREFIX String INFO_PREFIX String WARN_PREFIX String ERROR_PREFIX String UNKNOWN_PREFIX String COUNTER_NAME String COUNTER_INITIAL_VALUE String MAX_NUMBER_LOOPS String SET_NULL_ALLOWED String ERRORMSG_START String ERRORMSG_END String PARSE_DIRECTIVE_MAXDEPTH String RESOURCE_MANAGER_CLASS String RESOURCE_MANAGER_CACHE_CLASS String RESOURCE_MANAGER_DEFAULTCACHE_SIZE String RESOURCE_MANAGER_LOGWHENFOUND String RESOURCE_LOADER String FILE_RESOURCE_LOADER_PATH String FILE_RESOURCE_LOADER_CACHE String EVENTHANDLER_REFERENCEINSERTION String EVENTHANDLER_NULLSET String EVENTHANDLER_METHODEXCEPTION String EVENTHANDLER_INCLUDE String EVENTHANDLER_INVALIDREFERENCES String VM_LIBRARY String VM_LIBRARY_DEFAULT String VM_LIBRARY_AUTORELOAD String VM_PERM_ALLOW_INLINE String VM_PERM_ALLOW_INLINE_REPLACE_GLOBAL String VM_PERM_INLINE_LOCAL String VM_MESSAGES_ON String VM_CONTEXT_LOCALSCOPE String VM_ARGUMENTS_STRICT String INTERPOLATE_STRINGLITERALS String INPUT_ENCODING String OUTPUT_ENCODING String ENCODING_DEFAULT String UBERSPECT_CLASSNAME String INTROSPECTOR_RESTRICT_CLASSES String PARSER_POOL_CLASS String PARSER_POOL_SIZE String DEFAULT_RUNTIME_PROPERTIES String DEFAULT_RUNTIME_DIRECTIVES int NUMBER_OF_PARSERS public class Escape public static final String LINE_SEPARATOR System getProperty public Escape public static final String getText String st StringBuffer buff new StringBuffer char block st toCharArray String stEntity null int last for last block length switch block case stEntity break case stEntity break case stEntity break case stEntity break case stEntity LINE_SEPARATOR break default break if stEntity null buff append block last last buff append stEntity stEntity null last if last block length buff append block last last return buff toString public class VelocimacroFactory private final RuntimeServices rsvc private final LogDisplayWrapper log private VelocimacroManager vmManager null private boolean replaceAllowed false private boolean addNewAllowed true private boolean templateLocal false private boolean autoReloadLibrary false private Vector macroLibVec null private Map libModMap public VelocimacroFactory final RuntimeServices rsvc this rsvc rsvc this log new LogDisplayWrapper rsvc getLog rsvc getBoolean RuntimeConstants VM_MESSAGES_ON true libModMap new HashMap vmManager new VelocimacroManager rsvc public void initVelocimacro synchronized this log trace setReplacementPermission true vmManager setNamespaceUsage false Object libfiles rsvc getProperty RuntimeConstants VM_LIBRARY if libfiles null log debug RuntimeConstants VM_LIBRARY RuntimeConstants VM_LIBRARY_DEFAULT if rsvc getLoaderNameForResource RuntimeConstants VM_LIBRARY_DEFAULT null libfiles RuntimeConstants VM_LIBRARY_DEFAULT else log debug if libfiles null if libfiles instanceof Vector macroLibVec Vector libfiles else if libfiles instanceof String macroLibVec new Vector macroLibVec addElement libfiles for int macroLibVec size String lib String macroLibVec elementAt if StringUtils isNotEmpty lib vmManager setRegisterFromLib true log debug lib try Template template rsvc getTemplate lib Twonk twonk new Twonk twonk template template twonk modificationTime template getLastModified libModMap put lib twonk catch Exception log error true lib log trace vmManager setRegisterFromLib false setAddMacroPermission true if rsvc getBoolean RuntimeConstants VM_PERM_ALLOW_INLINE true setAddMacroPermission false log info else log debug setReplacementPermission false if rsvc getBoolean RuntimeConstants VM_PERM_ALLOW_INLINE_REPLACE_GLOBAL false setReplacementPermission true log info else log debug vmManager setNamespaceUsage true setTemplateLocalInline rsvc getBoolean RuntimeConstants VM_PERM_INLINE_LOCAL false if getTemplateLocalInline log info else log debug vmManager setTemplateLocalInlineVM getTemplateLocalInline setAutoload rsvc getBoolean RuntimeConstants VM_LIBRARY_AUTORELOAD false if getAutoload log info else log debug log trace public boolean addVelocimacro String name String macroBody String argArray String sourceTemplate if name null macroBody null argArray null sourceTemplate null log warn return false if canAddVelocimacro name sourceTemplate return false synchronized this vmManager addVM name macroBody argArray sourceTemplate StringBuffer msg new StringBuffer Macro macroToString msg argArray msg append append sourceTemplate log info msg toString return true private synchronized boolean canAddVelocimacro String name String sourceTemplate if getAutoload macroLibVec null for int macroLibVec size String lib String macroLibVec elementAt if lib equals sourceTemplate return true if addNewAllowed log warn name return false if templateLocal if isVelocimacro name sourceTemplate replaceAllowed log warn name return false return true public boolean isVelocimacro String vm String sourceTemplate synchronized this if vmManager get vm sourceTemplate null return true return false public Directive getVelocimacro String vmName String sourceTemplate VelocimacroProxy vp null synchronized this vp vmManager get vmName sourceTemplate if vp null getAutoload String lib vmManager getLibraryName vmName sourceTemplate if lib null try Twonk tw Twonk libModMap get lib if tw null Template template tw template long tt tw modificationTime long ft template getResourceLoader getLastModified template if ft tt log debug lib tw modificationTime ft template rsvc getTemplate lib tw template template tw modificationTime template getLastModified catch Exception log error true lib vp vmManager get vmName sourceTemplate return vp public boolean dumpVMNamespace String namespace return vmManager dumpNamespace namespace private void setTemplateLocalInline boolean templateLocal private boolean getTemplateLocalInline return templateLocal private boolean setAddMacroPermission final boolean addNewAllowed boolean this addNewAllowed this addNewAllowed addNewAllowed return private boolean setReplacementPermission boolean arg boolean replaceAllowed replaceAllowed arg return private void setAutoload boolean autoReloadLibrary private boolean getAutoload return autoReloadLibrary private static class Twonk public Template template public long modificationTime public class ASTAddNode extends SimpleNode public ASTAddNode int id super id public ASTAddNode Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public Object value InternalContextAdapter context throws MethodInvocationException Object left jjtGetChild value context Object right jjtGetChild value context if left null right null log error left null jjtGetChild left null literal context getCurrentTemplateName getLine getColumn return null if left instanceof TemplateNumber left TemplateNumber left getAsNumber if right instanceof TemplateNumber right TemplateNumber right getAsNumber if left instanceof Number right instanceof Number return MathUtils add Number left Number right if left instanceof String right instanceof String return left toString concat right toString log error left instanceof Number left instanceof String context getCurrentTemplateName getLine getColumn return null public class Macro extends Directive private static boolean debugMode false public String getName return public int getType return BLOCK public boolean render InternalContextAdapter context Writer writer Node node throws IOException return true public void init RuntimeServices rs InternalContextAdapter context Node node throws TemplateInitException super init rs context node public static void processAndRegister RuntimeServices rs Token Node node String sourceTemplate throws IOException ParseException int numArgs node jjtGetNumChildren if numArgs rs getLog error numArgs throw new MacroParseException sourceTemplate int firstType node jjtGetChild getType if firstType ParserTreeConstants JJTWORD throw new MacroParseException ParserTreeConstants jjtNodeName firstType sourceTemplate String argArray getArgArray node rs List macroArray getASTAsStringArray node jjtGetChild numArgs StringBuffer macroBody new StringBuffer for int macroArray size macroBody append macroArray get boolean macroAdded rs addVelocimacro argArray macroBody toString argArray sourceTemplate if macroAdded rs getLog isWarnEnabled StringBuffer msg new StringBuffer macroToString msg argArray msg append append sourceTemplate rs getLog warn msg private static String getArgArray Node node RuntimeServices rsvc int numArgs node jjtGetNumChildren String argArray new String numArgs int while numArgs argArray node jjtGetChild getFirstToken image if if argArray startsWith argArray argArray substring argArray length if debugMode StringBuffer msg new StringBuffer msg append numArgs append macroToString msg argArray rsvc getLog debug msg return argArray private static List getASTAsStringArray Node rootNode Token rootNode getFirstToken Token tLast rootNode getLastToken List list new ArrayList while tLast list add NodeUtils tokenLiteral next list add NodeUtils tokenLiteral return list public static final StringBuffer macroToString final StringBuffer buf final String argArray StringBuffer ret buf null new StringBuffer buf ret append append argArray append for int argArray length ret append append argArray ret append return ret public class InvalidReferenceInfo extends Info private String invalidReference public InvalidReferenceInfo String invalidReference Info info super info getTemplateName info getLine info getColumn this invalidReference invalidReference public String getInvalidReference return invalidReference public String toString return getTemplateName getLine getColumn invalidReference public interface ContextAware public void setContext Context context public class SecureIntrospectorImpl extends Introspector implements SecureIntrospectorControl private String badClasses private String badPackages public SecureIntrospectorImpl String badClasses String badPackages Log log super log this badClasses badClasses this badPackages badPackages public Method getMethod Class clazz String methodName Object params throws IllegalArgumentException if checkObjectExecutePermission clazz methodName log warn methodName clazz getName return null else return super getMethod clazz methodName params public boolean checkObjectExecutePermission Class clazz String methodName if methodName null methodName equals methodName equals return false else if java lang Number class isAssignableFrom clazz return true else if java lang Boolean class isAssignableFrom clazz return true else if java lang String class isAssignableFrom clazz return true else if java lang Class class isAssignableFrom clazz methodName null methodName equals return true String className clazz getName if className startsWith className endsWith className className substring className length int dotPos className lastIndexOf int sz badPackages length for int sz return false sz badClasses length for int sz if className equals badClasses return false return true public class ASTFalse extends SimpleNode private static Boolean value Boolean FALSE public ASTFalse int id super id public ASTFalse Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public boolean evaluate InternalContextAdapter context return false public Object value InternalContextAdapter context return value public interface StringResourceRepository StringResource getStringResource String name void putStringResource String name String body void removeStringResource String name void setEncoding String encoding String getEncoding public class ASTModNode extends SimpleNode public ASTModNode int id super id public ASTModNode Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public Object value InternalContextAdapter context throws MethodInvocationException Object left jjtGetChild value context Object right jjtGetChild value context if left null right null log error left null jjtGetChild left null literal context getCurrentTemplateName getLine getColumn return null if left instanceof TemplateNumber left TemplateNumber left getAsNumber if right instanceof TemplateNumber right TemplateNumber right getAsNumber if left instanceof Number right instanceof Number log error left instanceof Number context getCurrentTemplateName getLine getColumn return null if MathUtils isZero Number right log error context getCurrentTemplateName getLine getColumn return null return MathUtils modulo Number left Number right public class ASTLTNode extends SimpleNode public ASTLTNode int id super id public ASTLTNode Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public boolean evaluate InternalContextAdapter context throws MethodInvocationException Object left jjtGetChild value context Object right jjtGetChild value context if left null right null log error left null jjtGetChild left null literal context getCurrentTemplateName getLine getColumn return false if left instanceof TemplateNumber left TemplateNumber left getAsNumber if right instanceof TemplateNumber right TemplateNumber right getAsNumber if left instanceof Number right instanceof Number log error left instanceof Number context getCurrentTemplateName getLine getColumn return false return MathUtils compare Number left Number right public Object value InternalContextAdapter context throws MethodInvocationException boolean val evaluate context return val Boolean TRUE Boolean FALSE public class EscapeSqlReference extends EscapeReference protected String escape Object text return StringEscapeUtils escapeSql text toString protected String getMatchAttribute return public class SimpleLog4JLogSystem implements LogSystem private RuntimeServices rsvc null private RollingFileAppender appender null protected Category logger null public SimpleLog4JLogSystem public void init RuntimeServices rs rsvc rs String categoryname String rsvc getProperty if categoryname null logger Category getInstance categoryname logVelocityMessage categoryname return String logfile rsvc getString RuntimeConstants RUNTIME_LOG try internalInit logfile logVelocityMessage logfile catch Exception System err println private void internalInit String logfile throws Exception logger Category getInstance this getClass getName logger setAdditivity false logger setLevel Level DEBUG appender new RollingFileAppender new PatternLayout logfile true appender setMaxBackupIndex appender setMaximumFileSize logger addAppender appender public void logVelocityMessage int level String message switch level case LogSystem WARN_ID logger warn message break case LogSystem INFO_ID logger info message break case LogSystem DEBUG_ID logger debug message break case LogSystem ERROR_ID logger error message break default logger debug message break protected void finalize throws Throwable shutdown public void shutdown if appender null logger removeAppender appender appender close appender null public class SimpleNode implements Node protected RuntimeServices rsvc null protected Log log null protected Node parent protected Node children protected int id protected Parser parser public boolean state protected boolean invalid false protected Token first protected Token last public SimpleNode int id public SimpleNode Parser int this parser public void jjtOpen public void jjtClose public void setFirstToken Token this first public Token getFirstToken return first public Token getLastToken return last public void jjtSetParent Node parent public Node jjtGetParent return parent public void jjtAddChild Node int if children null children new Node else if children length Node new Node System arraycopy children children length children children public Node jjtGetChild int return children public int jjtGetNumChildren return children null children length public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public Object childrenAccept ParserVisitor visitor Object data if children null for int children length children jjtAccept visitor data return data public String toString String prefix return prefix toString public void dump String prefix System out println toString prefix if children null for int children length SimpleNode SimpleNode children if null dump prefix public String literal Token first StringBuffer sb new StringBuffer image while last next sb append image return sb toString public Object init InternalContextAdapter context Object data throws TemplateInitException rsvc RuntimeServices data log rsvc getLog int jjtGetNumChildren for jjtGetChild init context data return data public boolean evaluate InternalContextAdapter context throws MethodInvocationException return false public Object value InternalContextAdapter context throws MethodInvocationException return null public boolean render InternalContextAdapter context Writer writer throws IOException MethodInvocationException ParseErrorException ResourceNotFoundException int jjtGetNumChildren for jjtGetChild render context writer return true public Object execute Object InternalContextAdapter context throws MethodInvocationException return null public int getType return id public void setInfo int info this info info public int getInfo return info public void setInvalid invalid true public boolean isInvalid return invalid public int getLine return first beginLine public int getColumn return first beginColumn public String toString StringBuffer tokens new StringBuffer for Token getFirstToken null tokens append append image append if next null if equals getLastToken break else tokens append next return new ToStringBuilder this append getType append getInfo append isInvalid append jjtGetNumChildren append tokens toString public class ExceptionUtils private static boolean causesAllowed true public static RuntimeException createRuntimeException String message Throwable cause return RuntimeException createWithCause RuntimeException class message cause public static Throwable createWithCause Class clazz String message Throwable cause Throwable re null if causesAllowed try Constructor constructor clazz getConstructor new Class String class Throwable class re Throwable constructor newInstance new Object message cause catch RuntimeException throw catch Exception causesAllowed false if re null try Constructor constructor clazz getConstructor new Class String class re Throwable constructor newInstance new Object message cause catch RuntimeException throw catch Exception return re public static void setCause Throwable onObject Throwable cause if causesAllowed try Method method onObject getClass getMethod new Class Throwable class method invoke onObject new Object cause catch RuntimeException throw catch Exception causesAllowed false public class ASTExpression extends SimpleNode public ASTExpression int id super id public ASTExpression Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public boolean evaluate InternalContextAdapter context throws MethodInvocationException return jjtGetChild evaluate context public Object value InternalContextAdapter context throws MethodInvocationException return jjtGetChild value context public class ASTLENode extends SimpleNode public ASTLENode int id super id public ASTLENode Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public boolean evaluate InternalContextAdapter context throws MethodInvocationException Object left jjtGetChild value context Object right jjtGetChild value context if left null right null log error left null jjtGetChild left null literal context getCurrentTemplateName getLine getColumn return false if left instanceof TemplateNumber left TemplateNumber left getAsNumber if right instanceof TemplateNumber right TemplateNumber right getAsNumber if left instanceof Number right instanceof Number log error left instanceof Number context getCurrentTemplateName getLine getColumn return false return MathUtils compare Number left Number right public Object value InternalContextAdapter context throws MethodInvocationException boolean val evaluate context return val Boolean TRUE Boolean FALSE public interface InternalEventContext public EventCartridge attachEventCartridge EventCartridge ec public EventCartridge getEventCartridge public class DataSourceResourceLoader extends ResourceLoader private String dataSourceName private String tableName private String keyColumn private String templateColumn private String timestampColumn private InitialContext ctx private DataSource dataSource public void init ExtendedProperties configuration dataSourceName StringUtils nullTrim configuration getString tableName StringUtils nullTrim configuration getString keyColumn StringUtils nullTrim configuration getString templateColumn StringUtils nullTrim configuration getString timestampColumn StringUtils nullTrim configuration getString if dataSource null if log isDebugEnabled log debug tableName log debug keyColumn templateColumn timestampColumn log trace else if dataSourceName null if log isDebugEnabled log debug dataSourceName tableName log debug keyColumn templateColumn timestampColumn log trace else log warn public void setDataSource final DataSource dataSource this dataSource dataSource public boolean isSourceModified final Resource resource return resource getLastModified readLastModified resource public long getLastModified final Resource resource return readLastModified resource public synchronized InputStream getResourceStream final String name throws ResourceNotFoundException if org apache commons lang StringUtils isEmpty name throw new ResourceNotFoundException Connection conn null ResultSet rs null try conn openDbConnection rs readData conn templateColumn name if rs next InputStream ascStream rs getAsciiStream templateColumn if ascStream null throw new ResourceNotFoundException name return new BufferedInputStream ascStream else throw new ResourceNotFoundException name catch SQLException sqle String msg name log error msg sqle throw new ResourceNotFoundException msg catch NamingException ne String msg name log error msg ne throw new ResourceNotFoundException msg finally closeResultSet rs closeDbConnection conn private long readLastModified final Resource resource final String operation long timeStamp String name resource getName if name null name length log error else Connection conn null ResultSet rs null try conn openDbConnection rs readData conn timestampColumn name if rs next Timestamp ts rs getTimestamp timestampColumn timeStamp ts null ts getTime else log error name operation catch SQLException sqle String msg operation name log error msg sqle throw ExceptionUtils createRuntimeException msg sqle catch NamingException ne String msg operation name log error msg ne throw ExceptionUtils createRuntimeException msg ne finally closeResultSet rs closeDbConnection conn return timeStamp private Connection openDbConnection throws NamingException SQLException if dataSource null return dataSource getConnection if ctx null ctx new InitialContext dataSource DataSource ctx lookup dataSourceName return dataSource getConnection private void closeDbConnection final Connection conn if conn null try conn close catch RuntimeException re throw re catch Exception log warn private void closeResultSet final ResultSet rs if rs null try rs close catch RuntimeException re throw re catch Exception log warn private ResultSet readData final Connection conn final String columnNames final String templateName throws SQLException PreparedStatement ps conn prepareStatement columnNames tableName keyColumn ps setString templateName return ps executeQuery public final class VelocityWriter extends Writer public static final int NO_BUFFER public static final int DEFAULT_BUFFER public static final int UNBOUNDED_BUFFER private int bufferSize private boolean autoFlush private Writer writer private char cb private int nextChar private static int defaultCharBufferSize public VelocityWriter Writer writer this writer defaultCharBufferSize true private VelocityWriter int bufferSize boolean autoFlush this bufferSize bufferSize this autoFlush autoFlush public int getBufferSize return bufferSize public boolean isAutoFlush return autoFlush public VelocityWriter Writer writer int sz boolean autoFlush this sz autoFlush if sz throw new IllegalArgumentException this writer writer cb sz null new char sz nextChar private final void flushBuffer throws IOException if bufferSize return if nextChar return writer write cb nextChar nextChar public final void clear nextChar private final void bufferOverflow throws IOException throw new IOException public final void flush throws IOException flushBuffer if writer null writer flush public final void close throws IOException if writer null return flush public final int getRemaining return bufferSize nextChar public final void write int throws IOException if bufferSize writer write else if nextChar bufferSize if autoFlush flushBuffer else bufferOverflow cb nextChar char private final int min int int return public final void write char cbuf int off int len throws IOException if bufferSize writer write cbuf off len return if len return if len bufferSize if autoFlush flushBuffer else bufferOverflow writer write cbuf off len return int off off len while int min bufferSize nextChar System arraycopy cbuf cb nextChar nextChar if nextChar bufferSize if autoFlush flushBuffer else bufferOverflow public final void write char buf throws IOException write buf buf length public final void write String int off int len throws IOException if bufferSize writer write off len return int off off len while int min bufferSize nextChar getChars cb nextChar nextChar if nextChar bufferSize if autoFlush flushBuffer else bufferOverflow public final void write String throws IOException if null write length public final void recycle Writer writer this writer writer clear public class ResourceLoaderFactory public static ResourceLoader getLoader RuntimeServices rs String loaderClassName throws Exception ResourceLoader loader null try loader ResourceLoader ClassUtils getNewInstance loaderClassName rs getLog debug loader getClass getName return loader catch Exception rs getLog error throw new Exception loaderClassName StringUtils stackTrace public class ASTprocess extends SimpleNode public ASTprocess int id super id public ASTprocess Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public class FileResourceLoader extends ResourceLoader private List paths new ArrayList private Map templatePaths Collections synchronizedMap new HashMap private boolean unicode false public void init ExtendedProperties configuration if log isTraceEnabled log trace paths addAll configuration getVector unicode configuration getBoolean false if log isDebugEnabled log debug unicode StringUtils trimStrings paths if log isInfoEnabled int sz paths size for int sz log info String paths get log trace public InputStream getResourceStream String templateName throws ResourceNotFoundException if org apache commons lang StringUtils isEmpty templateName throw new ResourceNotFoundException String template StringUtils normalizePath templateName if template null template length String msg template log error msg throw new ResourceNotFoundException msg int size paths size for int size String path String paths get InputStream inputStream null try inputStream findTemplate path template catch IOException ioe log error template ioe if inputStream null templatePaths put templateName path return inputStream throw new ResourceNotFoundException template private InputStream findTemplate final String path final String template throws IOException try File file getFile path template if file canRead FileInputStream fis null try fis new FileInputStream file getAbsolutePath if unicode UnicodeInputStream uis null try uis new UnicodeInputStream fis true if log isDebugEnabled log debug file uis getEncodingFromStream return new BufferedInputStream uis catch IOException closeQuiet uis throw else return new BufferedInputStream fis catch IOException closeQuiet fis throw else return null catch FileNotFoundException fnfe return null private void closeQuiet final InputStream is if is null try is close catch IOException ioe public boolean isSourceModified Resource resource boolean modified true String fileName resource getName String path String templatePaths get fileName File currentFile null for int currentFile null paths size String testPath String paths get File testFile getFile testPath fileName if testFile canRead currentFile testFile File file getFile path fileName if currentFile null file exists else if currentFile equals file file canRead modified file lastModified resource getLastModified return modified public long getLastModified Resource resource String path String templatePaths get resource getName File file getFile path resource getName if file canRead return file lastModified else return private File getFile String path String template File file null if equals path file new File template else if template startsWith template template substring file new File path template return file public interface ResourceCache public void initialize RuntimeServices rs public Resource get Object resourceKey public Resource put Object resourceKey Resource resource public Resource remove Object resourceKey public Iterator enumerateKeys public class EscapeJavaScriptReference extends EscapeReference protected String escape Object text return StringEscapeUtils escapeJavaScript text toString protected String getMatchAttribute return public class ASTDirective extends SimpleNode private Directive directive null private String directiveName private boolean isDirective public ASTDirective int id super id public ASTDirective Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public Object init InternalContextAdapter context Object data throws TemplateInitException super init context data if parser isDirective directiveName isDirective true try directive Directive parser getDirective directiveName getClass newInstance catch InstantiationException throw ExceptionUtils createRuntimeException parser getDirective directiveName getClass getName catch IllegalAccessException throw ExceptionUtils createRuntimeException parser getDirective directiveName getClass getName directive init rsvc context this directive setLocation getLine getColumn else if rsvc isVelocimacro directiveName context getCurrentTemplateName isDirective true directive rsvc getVelocimacro directiveName context getCurrentTemplateName try directive init rsvc context this catch TemplateInitException die throw new TemplateInitException die getMessage ParseException die getWrappedThrowable die getTemplateName die getColumnNumber getColumn die getLineNumber getLine directive setLocation getLine getColumn else isDirective false return data public boolean render InternalContextAdapter context Writer writer throws IOException MethodInvocationException ResourceNotFoundException ParseErrorException if isDirective directive render context writer this else if context getAllowRendering writer write writer write directiveName return true public void setDirectiveName String str directiveName str public String getDirectiveName return directiveName public String toString return new ToStringBuilder this appendSuper super toString append getDirectiveName toString public class EventHandlerUtil public static Object referenceInsert RuntimeServices rsvc InternalContextAdapter context String reference Object value EventCartridge ev1 rsvc getApplicationEventCartridge Iterator applicationEventHandlerIterator ev1 null null ev1 getReferenceInsertionEventHandlers EventCartridge ev2 context getEventCartridge initializeEventCartridge rsvc ev2 Iterator contextEventHandlerIterator ev2 null null ev2 getReferenceInsertionEventHandlers try EventHandlerMethodExecutor methodExecutor new ReferenceInsertionEventHandler referenceInsertExecutor context reference value callEventHandlers applicationEventHandlerIterator contextEventHandlerIterator methodExecutor return methodExecutor getReturnValue catch RuntimeException throw catch Exception throw ExceptionUtils createRuntimeException public static boolean shouldLogOnNullSet RuntimeServices rsvc InternalContextAdapter context String lhs String rhs EventCartridge ev1 rsvc getApplicationEventCartridge Iterator applicationEventHandlerIterator ev1 null null ev1 getNullSetEventHandlers EventCartridge ev2 context getEventCartridge initializeEventCartridge rsvc ev2 Iterator contextEventHandlerIterator ev2 null null ev2 getNullSetEventHandlers try EventHandlerMethodExecutor methodExecutor new NullSetEventHandler ShouldLogOnNullSetExecutor context lhs rhs callEventHandlers applicationEventHandlerIterator contextEventHandlerIterator methodExecutor return Boolean methodExecutor getReturnValue booleanValue catch RuntimeException throw catch Exception throw ExceptionUtils createRuntimeException public static Object methodException RuntimeServices rsvc InternalContextAdapter context Class claz String method Exception throws Exception EventCartridge ev1 rsvc getApplicationEventCartridge Iterator applicationEventHandlerIterator ev1 null null ev1 getMethodExceptionEventHandlers EventCartridge ev2 context getEventCartridge initializeEventCartridge rsvc ev2 Iterator contextEventHandlerIterator ev2 null null ev2 getMethodExceptionEventHandlers EventHandlerMethodExecutor methodExecutor new MethodExceptionEventHandler MethodExceptionExecutor context claz method if applicationEventHandlerIterator null applicationEventHandlerIterator hasNext contextEventHandlerIterator null contextEventHandlerIterator hasNext throw callEventHandlers applicationEventHandlerIterator contextEventHandlerIterator methodExecutor return methodExecutor getReturnValue public static String includeEvent RuntimeServices rsvc InternalContextAdapter context String includeResourcePath String currentResourcePath String directiveName EventCartridge ev1 rsvc getApplicationEventCartridge Iterator applicationEventHandlerIterator ev1 null null ev1 getIncludeEventHandlers EventCartridge ev2 context getEventCartridge initializeEventCartridge rsvc ev2 Iterator contextEventHandlerIterator ev2 null null ev2 getIncludeEventHandlers try EventHandlerMethodExecutor methodExecutor new IncludeEventHandler IncludeEventExecutor context includeResourcePath currentResourcePath directiveName callEventHandlers applicationEventHandlerIterator contextEventHandlerIterator methodExecutor return String methodExecutor getReturnValue catch RuntimeException throw catch Exception throw ExceptionUtils createRuntimeException public static Object invalidGetMethod RuntimeServices rsvc InternalContextAdapter context String reference Object object String property Info info return invalidReferenceHandlerCall new InvalidReferenceEventHandler InvalidGetMethodExecutor context reference object property info rsvc context public static void invalidSetMethod RuntimeServices rsvc InternalContextAdapter context String leftreference String rightreference Info info invalidReferenceHandlerCall new InvalidReferenceEventHandler InvalidSetMethodExecutor context leftreference rightreference info rsvc context public static Object invalidMethod RuntimeServices rsvc InternalContextAdapter context String reference Object object String method Info info return invalidReferenceHandlerCall new InvalidReferenceEventHandler InvalidMethodExecutor context reference object method info rsvc context public static Object invalidReferenceHandlerCall EventHandlerMethodExecutor methodExecutor RuntimeServices rsvc InternalContextAdapter context EventCartridge ev1 rsvc getApplicationEventCartridge Iterator applicationEventHandlerIterator ev1 null null ev1 getInvalidReferenceEventHandlers EventCartridge ev2 context getEventCartridge initializeEventCartridge rsvc ev2 Iterator contextEventHandlerIterator ev2 null null ev2 getInvalidReferenceEventHandlers try callEventHandlers applicationEventHandlerIterator contextEventHandlerIterator methodExecutor return methodExecutor getReturnValue catch RuntimeException throw catch Exception throw ExceptionUtils createRuntimeException private static void initializeEventCartridge RuntimeServices rsvc EventCartridge eventCartridge if eventCartridge null try eventCartridge initialize rsvc catch Exception throw ExceptionUtils createRuntimeException private static void callEventHandlers Iterator applicationEventHandlerIterator Iterator contextEventHandlerIterator EventHandlerMethodExecutor eventExecutor throws Exception iterateOverEventHandlers applicationEventHandlerIterator eventExecutor iterateOverEventHandlers contextEventHandlerIterator eventExecutor private static void iterateOverEventHandlers Iterator handlerIterator EventHandlerMethodExecutor eventExecutor throws Exception if handlerIterator null for Iterator handlerIterator hasNext EventHandler eventHandler EventHandler next if eventExecutor isDone eventExecutor execute eventHandler public abstract class AbstractContext extends InternalContextBase implements Context private Context innerContext null public abstract Object internalGet String key public abstract Object internalPut String key Object value public abstract boolean internalContainsKey Object key public abstract Object internalGetKeys public abstract Object internalRemove Object key public AbstractContext public AbstractContext Context inner innerContext inner if innerContext instanceof InternalEventContext attachEventCartridge InternalEventContext innerContext getEventCartridge public Object put String key Object value if key null return null else if value null return null return internalPut key value public Object get String key if key null return null Object internalGet key if null innerContext null innerContext get key return public boolean containsKey Object key if key null return false return internalContainsKey key public Object getKeys return internalGetKeys public Object remove Object key if key null return null return internalRemove key public Context getChainedContext return innerContext public class TokenMgrError extends Error static final int LEXICAL_ERROR static final int STATIC_LEXER_ERROR static final int INVALID_LEXICAL_STATE static final int LOOP_DETECTED int errorCode protected static final String addEscapes String str StringBuffer retval new StringBuffer char ch for int str length switch str charAt case continue case retval append continue case retval append continue case retval append continue case retval append continue case retval append continue case retval append continue case retval append continue case retval append continue default if ch str charAt ch String Integer toString ch retval append substring length length else retval append ch continue return retval toString protected static String LexicalError boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar return errorLine errorColumn EOFSeen addEscapes String valueOf curChar int curChar addEscapes errorAfter public String getMessage return super getMessage public TokenMgrError public TokenMgrError String message int reason super message errorCode reason public TokenMgrError boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason this LexicalError EOFSeen lexState errorLine errorColumn errorAfter curChar reason public class MapGetExecutor extends AbstractExecutor private final String property public MapGetExecutor final Log log final Class clazz final String property this log log this property property discover clazz protected void discover final Class clazz Class interfaces clazz getInterfaces for int interfaces length if interfaces equals Map class try if property null setMethod Map class getMethod new Class Object class catch RuntimeException throw catch Exception log error property break public Object execute final Object return Map get property public class NodeList implements List Cloneable private static final AttributeXMLOutputter DEFAULT_OUTPUTTER new AttributeXMLOutputter private List nodes public NodeList nodes new ArrayList public NodeList Document document this Object document public NodeList Element element this Object element private NodeList Object object if object null throw new IllegalArgumentException nodes new ArrayList nodes add object public NodeList List nodes this nodes true public NodeList List nodes boolean copy if nodes null throw new IllegalArgumentException this nodes copy new ArrayList nodes nodes public List getList return nodes public String toString if nodes isEmpty return StringWriter sw new StringWriter nodes size try for Iterator nodes iterator hasNext Object node next if node instanceof Element DEFAULT_OUTPUTTER output Element node sw else if node instanceof Attribute DEFAULT_OUTPUTTER output Attribute node sw else if node instanceof Text DEFAULT_OUTPUTTER output Text node sw else if node instanceof Document DEFAULT_OUTPUTTER output Document node sw else if node instanceof ProcessingInstruction DEFAULT_OUTPUTTER output ProcessingInstruction node sw else if node instanceof Comment DEFAULT_OUTPUTTER output Comment node sw else if node instanceof CDATA DEFAULT_OUTPUTTER output CDATA node sw else if node instanceof DocType DEFAULT_OUTPUTTER output DocType node sw else if node instanceof EntityRef DEFAULT_OUTPUTTER output EntityRef node sw else throw new IllegalArgumentException node null node getClass getName catch IOException throw new Error return sw toString public Object clone throws CloneNotSupportedException NodeList clonedList NodeList super clone clonedList cloneNodes return clonedList private void cloneNodes throws CloneNotSupportedException Class listClass nodes getClass try List clonedNodes List listClass newInstance clonedNodes addAll nodes nodes clonedNodes catch IllegalAccessException throw new CloneNotSupportedException listClass getName catch InstantiationException throw new Error public int hashCode return nodes hashCode public boolean equals Object return instanceof NodeList NodeList nodes equals nodes false public NodeList selectNodes String xpathString return new NodeList XPathCache getXPath xpathString applyTo nodes false public boolean add Object return nodes add public void add int index Object nodes add index public boolean addAll Collection return nodes addAll public boolean addAll int index Collection return nodes addAll index public void clear nodes clear public boolean contains Object return nodes contains public boolean containsAll Collection return nodes containsAll public Object get int index return nodes get index public int indexOf Object return nodes indexOf public boolean isEmpty return nodes isEmpty public Iterator iterator return nodes iterator public int lastIndexOf Object return nodes lastIndexOf public ListIterator listIterator return nodes listIterator public ListIterator listIterator int index return nodes listIterator index public Object remove int index return nodes remove index public boolean remove Object return nodes remove public boolean removeAll Collection return nodes removeAll public boolean retainAll Collection return nodes retainAll public Object set int index Object return nodes set index public int size return nodes size public List subList int fromIndex int toIndex return new NodeList nodes subList fromIndex toIndex public Object toArray return nodes toArray public Object toArray Object return nodes toArray private static final class AttributeXMLOutputter extends XMLOutputter public void output Attribute attribute Writer out throws IOException out write out write attribute getQualifiedName out write out write out write escapeAttributeEntities attribute getValue out write public class Log4JLogChute implements LogChute public static final String RUNTIME_LOG_LOG4J_LOGGER private RuntimeServices rsvc null private boolean hasTrace false private RollingFileAppender appender null protected Logger logger null public void init RuntimeServices rs throws Exception rsvc rs String name String rsvc getProperty RUNTIME_LOG_LOG4J_LOGGER if name null logger Logger getLogger name log DEBUG_ID name else logger Logger getLogger this getClass getName String file rsvc getString RuntimeConstants RUNTIME_LOG if file null file length initAppender file try Field traceLevel Level class getField hasTrace true catch NoSuchFieldException log DEBUG_ID private void initAppender String file throws Exception try PatternLayout layout new PatternLayout this appender new RollingFileAppender layout file true appender setMaxBackupIndex appender setMaximumFileSize logger setAdditivity false logger setLevel Level DEBUG logger addAppender appender log DEBUG_ID file catch IOException ioe rsvc getLog warn file ioe throw ExceptionUtils createRuntimeException ioe public void log int level String message switch level case LogChute WARN_ID logger warn message break case LogChute INFO_ID logger info message break case LogChute DEBUG_ID logger debug message break case LogChute TRACE_ID if hasTrace logger trace message else logger debug message break case LogChute ERROR_ID logger error message break default logger debug message break public void log int level String message Throwable switch level case LogChute WARN_ID logger warn message break case LogChute INFO_ID logger info message break case LogChute DEBUG_ID logger debug message break case LogChute TRACE_ID if hasTrace logger trace message else logger debug message break case LogChute ERROR_ID logger error message break default logger debug message break public boolean isLevelEnabled int level switch level case LogChute DEBUG_ID return logger isDebugEnabled case LogChute INFO_ID return logger isInfoEnabled case LogChute TRACE_ID if hasTrace return logger isTraceEnabled else return logger isDebugEnabled case LogChute WARN_ID return logger isEnabledFor Level WARN case LogChute ERROR_ID return logger isEnabledFor Level ERROR default return true protected void finalize throws Throwable shutdown public void shutdown if appender null logger removeAppender appender appender close appender null public interface TemplateNumber public Number getAsNumber public class ASTGENode extends SimpleNode public ASTGENode int id super id public ASTGENode Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public boolean evaluate InternalContextAdapter context throws MethodInvocationException Object left jjtGetChild value context Object right jjtGetChild value context if left null right null log error left null jjtGetChild left null literal context getCurrentTemplateName getLine getColumn return false if left instanceof TemplateNumber left TemplateNumber left getAsNumber if right instanceof TemplateNumber right TemplateNumber right getAsNumber if left instanceof Number right instanceof Number log error left instanceof Number context getCurrentTemplateName getLine getColumn return false return MathUtils compare Number left Number right public Object value InternalContextAdapter context throws MethodInvocationException boolean val evaluate context return val Boolean TRUE Boolean FALSE public class ASTNENode extends SimpleNode public ASTNENode int id super id public ASTNENode Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public boolean evaluate InternalContextAdapter context throws MethodInvocationException Object left jjtGetChild value context Object right jjtGetChild value context if left null right null log error left null jjtGetChild left null literal context getCurrentTemplateName getLine getColumn return false if left instanceof TemplateNumber left TemplateNumber left getAsNumber if right instanceof TemplateNumber right TemplateNumber right getAsNumber if left instanceof Number right instanceof Number return MathUtils compare Number left Number right if left getClass isAssignableFrom right getClass right getClass isAssignableFrom left getClass return left equals right else if left toString null right toString null boolean culprit left toString null log error culprit jjtGetChild culprit literal context getCurrentTemplateName getLine getColumn return false else return left toString equals right toString public Object value InternalContextAdapter context throws MethodInvocationException boolean val evaluate context return val Boolean TRUE Boolean FALSE private Hashtable directives new Hashtable String currentTemplateName VelocityCharStream velcharstream null private RuntimeServices rsvc null public Parser RuntimeServices rs this new VelocityCharStream new ByteArrayInputStream getBytes velcharstream new VelocityCharStream new ByteArrayInputStream getBytes rsvc rs public SimpleNode parse Reader reader String templateName throws ParseException SimpleNode sn null currentTemplateName templateName try token_source clearStateVars velcharstream ReInit reader ReInit velcharstream sn process catch MacroParseException mee rsvc getLog error templateName mee throw mee catch ParseException pe rsvc getLog error templateName pe throw new TemplateParseException pe currentToken pe expectedTokenSequences pe tokenImage currentTemplateName catch TokenMgrError tme throw new ParseException tme toString catch Exception rsvc getLog error templateName currentTemplateName return sn public void setDirectives Hashtable directives this directives directives public Directive getDirective String directive return Directive directives get directive public boolean isDirective String directive return directives containsKey directive private String escapedDirective String strImage int iLast strImage lastIndexOf String strDirective strImage substring iLast boolean bRecognizedDirective false if isDirective strDirective substring bRecognizedDirective true else if rsvc isVelocimacro strDirective substring currentTemplateName bRecognizedDirective true else if strDirective substring equals strDirective substring equals strDirective substring equals strDirective substring equals strDirective substring equals strDirective substring equals bRecognizedDirective true if bRecognizedDirective return strImage substring iLast strDirective else return strImage final public SimpleNode process throws ParseException ASTprocess jjtn000 new ASTprocess this JJTPROCESS boolean jjtc000 true jjtree openNodeScope jjtn000 try label_1 while true switch jj_ntk jj_ntk jj_ntk case LPAREN case RPAREN case ESCAPE_DIRECTIVE case SET_DIRECTIVE case SINGLE_LINE_COMMENT_START case DOUBLE_ESCAPE case ESCAPE case TEXT case FORMAL_COMMENT case MULTI_LINE_COMMENT case STRING_LITERAL case IF_DIRECTIVE case STOP_DIRECTIVE case INTEGER_LITERAL case FLOATING_POINT_LITERAL case WORD case BRACKETED_WORD case IDENTIFIER case DOT case LCURLY case RCURLY break default jj_la1 jj_gen break label_1 Statement jj_consume_token jjtree closeNodeScope jjtn000 true jjtc000 false if true return jjtn000 catch Throwable jjte000 if jjtc000 jjtree clearNodeScope jjtn000 jjtc000 false else jjtree popNode if jjte000 instanceof RuntimeException if true throw RuntimeException jjte000 if jjte000 instanceof ParseException if true throw ParseException jjte000 if true throw Error jjte000 finally if jjtc000 jjtree closeNodeScope jjtn000 true throw new Error final public void Statement throws ParseException switch jj_ntk jj_ntk jj_ntk case IF_DIRECTIVE IfStatement break case STOP_DIRECTIVE StopStatement break default jj_la1 jj_gen if jj_2_1 Reference else switch jj_ntk jj_ntk jj_ntk case SINGLE_LINE_COMMENT_START case FORMAL_COMMENT case MULTI_LINE_COMMENT Comment break case SET_DIRECTIVE SetDirective break case ESCAPE_DIRECTIVE EscapedDirective break case DOUBLE_ESCAPE Escape break case WORD case BRACKETED_WORD Directive break case LPAREN case RPAREN case ESCAPE case TEXT case STRING_LITERAL case INTEGER_LITERAL case FLOATING_POINT_LITERAL case DOT case LCURLY case RCURLY Text break default jj_la1 jj_gen jj_consume_token throw new ParseException final public void EscapedDirective throws ParseException ASTEscapedDirective jjtn000 new ASTEscapedDirective this JJTESCAPEDDIRECTIVE boolean jjtc000 true jjtree openNodeScope jjtn000 try Token null jj_consume_token ESCAPE_DIRECTIVE jjtree closeNodeScope jjtn000 true jjtc000 false image escapedDirective image finally if jjtc000 jjtree closeNodeScope jjtn000 true final public void Escape throws ParseException ASTEscape jjtn000 new ASTEscape this JJTESCAPE boolean jjtc000 true jjtree openNodeScope jjtn000 try Token null int count boolean control false label_2 while true jj_consume_token DOUBLE_ESCAPE count if jj_2_2 else break label_2 jjtree closeNodeScope jjtn000 true jjtc000 false switch next kind case IF_DIRECTIVE case ELSE_DIRECTIVE case ELSEIF_DIRECTIVE case END case STOP_DIRECTIVE control true break if isDirective next image substring control true else if rsvc isVelocimacro next image substring currentTemplateName control true jjtn000 val for int count jjtn000 val control finally if jjtc000 jjtree closeNodeScope jjtn000 true final public void Comment throws ParseException ASTComment jjtn000 new ASTComment this JJTCOMMENT boolean jjtc000 true jjtree openNodeScope jjtn000 try switch jj_ntk jj_ntk jj_ntk case SINGLE_LINE_COMMENT_START jj_consume_token SINGLE_LINE_COMMENT_START switch jj_ntk jj_ntk jj_ntk case SINGLE_LINE_COMMENT jj_consume_token SINGLE_LINE_COMMENT break default jj_la1 jj_gen break case MULTI_LINE_COMMENT jj_consume_token MULTI_LINE_COMMENT break case FORMAL_COMMENT jj_consume_token FORMAL_COMMENT break default jj_la1 jj_gen jj_consume_token throw new ParseException finally if jjtc000 jjtree closeNodeScope jjtn000 true final public void FloatingPointLiteral throws ParseException ASTFloatingPointLiteral jjtn000 new ASTFloatingPointLiteral this JJTFLOATINGPOINTLITERAL boolean jjtc000 true jjtree openNodeScope jjtn000 try jj_consume_token FLOATING_POINT_LITERAL finally if jjtc000 jjtree closeNodeScope jjtn000 true final public void IntegerLiteral throws ParseException ASTIntegerLiteral jjtn000 new ASTIntegerLiteral this JJTINTEGERLITERAL boolean jjtc000 true jjtree openNodeScope jjtn000 try jj_consume_token INTEGER_LITERAL finally if jjtc000 jjtree closeNodeScope jjtn000 true final public void StringLiteral throws ParseException ASTStringLiteral jjtn000 new ASTStringLiteral this JJTSTRINGLITERAL boolean jjtc000 true jjtree openNodeScope jjtn000 try jj_consume_token STRING_LITERAL finally if jjtc000 jjtree closeNodeScope jjtn000 true final public void Identifier throws ParseException ASTIdentifier jjtn000 new ASTIdentifier this JJTIDENTIFIER boolean jjtc000 true jjtree openNodeScope jjtn000 try jj_consume_token IDENTIFIER finally if jjtc000 jjtree closeNodeScope jjtn000 true final public void Word throws ParseException ASTWord jjtn000 new ASTWord this JJTWORD boolean jjtc000 true jjtree openNodeScope jjtn000 try jj_consume_token WORD finally if jjtc000 jjtree closeNodeScope jjtn000 true final public int DirectiveArg throws ParseException switch jj_ntk jj_ntk jj_ntk case IDENTIFIER case LCURLY Reference if true return ParserTreeConstants JJTREFERENCE break case WORD Word if true return ParserTreeConstants JJTWORD break case STRING_LITERAL StringLiteral if true return ParserTreeConstants JJTSTRINGLITERAL break case INTEGER_LITERAL IntegerLiteral if true return ParserTreeConstants JJTINTEGERLITERAL break default jj_la1 jj_gen if jj_2_3 IntegerRange if true return ParserTreeConstants JJTINTEGERRANGE else switch jj_ntk jj_ntk jj_ntk case FLOATING_POINT_LITERAL FloatingPointLiteral if true return ParserTreeConstants JJTFLOATINGPOINTLITERAL break case LEFT_CURLEY Map if true return ParserTreeConstants JJTMAP break case LBRACKET ObjectArray if true return ParserTreeConstants JJTOBJECTARRAY break case TRUE True if true return ParserTreeConstants JJTTRUE break case FALSE False if true return ParserTreeConstants JJTFALSE break default jj_la1 jj_gen jj_consume_token throw new ParseException throw new Error final public SimpleNode Directive throws ParseException ASTDirective jjtn000 new ASTDirective this JJTDIRECTIVE boolean jjtc000 true jjtree openNodeScope jjtn000 Token null int argType int argPos Directive int directiveType boolean isVM false boolean doItNow false try switch jj_ntk jj_ntk jj_ntk case WORD jj_consume_token WORD break case BRACKETED_WORD jj_consume_token BRACKETED_WORD break default jj_la1 jj_gen jj_consume_token throw new ParseException String directiveName if kind ParserConstants BRACKETED_WORD directiveName image substring image length else directiveName image substring Directive directives get directiveName if directiveName equals doItNow true jjtn000 setDirectiveName directiveName if null isVM rsvc isVelocimacro directiveName currentTemplateName if isVM token_source stateStackPop token_source inDirective false if true return jjtn000 directiveType Directive LINE else directiveType getType token_source SwitchTo DIRECTIVE argPos switch jj_ntk jj_ntk jj_ntk case WHITESPACE jj_consume_token WHITESPACE break default jj_la1 jj_gen jj_consume_token LPAREN label_3 while true if jj_2_4 else break label_3 switch jj_ntk jj_ntk jj_ntk case WHITESPACE jj_consume_token WHITESPACE break default jj_la1 jj_gen switch jj_ntk jj_ntk jj_ntk case COMMA jj_consume_token COMMA switch jj_ntk jj_ntk jj_ntk case WHITESPACE jj_consume_token WHITESPACE break default jj_la1 jj_gen break default jj_la1 jj_gen argType DirectiveArg if argType ParserTreeConstants JJTWORD if doItNow argPos else if image equals image equals argPos else if true throw new MacroParseException argPos isVM image currentTemplateName else if doItNow argPos if true throw new MacroParseException currentTemplateName argPos switch jj_ntk jj_ntk jj_ntk case WHITESPACE jj_consume_token WHITESPACE break default jj_la1 jj_gen jj_consume_token RPAREN if directiveType Directive LINE if true return jjtn000 ASTBlock jjtn001 new ASTBlock this JJTBLOCK boolean jjtc001 true jjtree openNodeScope jjtn001 try label_4 while true Statement switch jj_ntk jj_ntk jj_ntk case LPAREN case RPAREN case ESCAPE_DIRECTIVE case SET_DIRECTIVE case SINGLE_LINE_COMMENT_START case DOUBLE_ESCAPE case ESCAPE case TEXT case FORMAL_COMMENT case MULTI_LINE_COMMENT case STRING_LITERAL case IF_DIRECTIVE case STOP_DIRECTIVE case INTEGER_LITERAL case FLOATING_POINT_LITERAL case WORD case BRACKETED_WORD case IDENTIFIER case DOT case LCURLY case RCURLY break default jj_la1 jj_gen break label_4 catch Throwable jjte001 if jjtc001 jjtree clearNodeScope jjtn001 jjtc001 false else jjtree popNode if jjte001 instanceof RuntimeException if true throw RuntimeException jjte001 if jjte001 instanceof ParseException if true throw ParseException jjte001 if true throw Error jjte001 finally if jjtc001 jjtree closeNodeScope jjtn001 true jj_consume_token END jjtree closeNodeScope jjtn000 true jjtc000 false if doItNow Macro processAndRegister rsvc jjtn000 currentTemplateName if true return jjtn000 catch Throwable jjte000 if jjtc000 jjtree clearNodeScope jjtn000 jjtc000 false else jjtree popNode if jjte000 instanceof RuntimeException if true throw RuntimeException jjte000 if jjte000 instanceof ParseException if true throw ParseException jjte000 if true throw Error jjte000 finally if jjtc000 jjtree closeNodeScope jjtn000 true throw new Error final public void Map throws ParseException ASTMap jjtn000 new ASTMap this JJTMAP boolean jjtc000 true jjtree openNodeScope jjtn000 try jj_consume_token LEFT_CURLEY if jj_2_5 Parameter jj_consume_token COLON Parameter label_5 while true switch jj_ntk jj_ntk jj_ntk case COMMA break default jj_la1 jj_gen break label_5 jj_consume_token COMMA Parameter jj_consume_token COLON Parameter else switch jj_ntk jj_ntk jj_ntk case WHITESPACE jj_consume_token WHITESPACE break default jj_la1 jj_gen jj_consume_token RIGHT_CURLEY catch Throwable jjte000 if jjtc000 jjtree clearNodeScope jjtn000 jjtc000 false else jjtree popNode if jjte000 instanceof RuntimeException if true throw RuntimeException jjte000 if jjte000 instanceof ParseException if true throw ParseException jjte000 if true throw Error jjte000 finally if jjtc000 jjtree closeNodeScope jjtn000 true final public void ObjectArray throws ParseException ASTObjectArray jjtn000 new ASTObjectArray this JJTOBJECTARRAY boolean jjtc000 true jjtree openNodeScope jjtn000 try jj_consume_token LBRACKET switch jj_ntk jj_ntk jj_ntk case LBRACKET case LEFT_CURLEY case WHITESPACE case STRING_LITERAL case TRUE case FALSE case INTEGER_LITERAL case FLOATING_POINT_LITERAL case IDENTIFIER case LCURLY Parameter label_6 while true switch jj_ntk jj_ntk jj_ntk case COMMA break default jj_la1 jj_gen break label_6 jj_consume_token COMMA Parameter break default jj_la1 jj_gen jj_consume_token RBRACKET catch Throwable jjte000 if jjtc000 jjtree clearNodeScope jjtn000 jjtc000 false else jjtree popNode if jjte000 instanceof RuntimeException if true throw RuntimeException jjte000 if jjte000 instanceof ParseException if true throw ParseException jjte000 if true throw Error jjte000 finally if jjtc000 jjtree closeNodeScope jjtn000 true final public void IntegerRange throws ParseException ASTIntegerRange jjtn000 new ASTIntegerRange this JJTINTEGERRANGE boolean jjtc000 true jjtree openNodeScope jjtn000 try jj_consume_token LBRACKET switch jj_ntk jj_ntk jj_ntk case WHITESPACE jj_consume_token WHITESPACE break default jj_la1 jj_gen switch jj_ntk jj_ntk jj_ntk case IDENTIFIER case LCURLY Reference break case INTEGER_LITERAL IntegerLiteral break default jj_la1 jj_gen jj_consume_token throw new ParseException switch jj_ntk jj_ntk jj_ntk case WHITESPACE jj_consume_token WHITESPACE break default jj_la1 jj_gen jj_consume_token DOUBLEDOT switch jj_ntk jj_ntk jj_ntk case WHITESPACE jj_consume_token WHITESPACE break default jj_la1 jj_gen switch jj_ntk jj_ntk jj_ntk case IDENTIFIER case LCURLY Reference break case INTEGER_LITERAL IntegerLiteral break default jj_la1 jj_gen jj_consume_token throw new ParseException switch jj_ntk jj_ntk jj_ntk case WHITESPACE jj_consume_token WHITESPACE break default jj_la1 jj_gen jj_consume_token RBRACKET catch Throwable jjte000 if jjtc000 jjtree clearNodeScope jjtn000 jjtc000 false else jjtree popNode if jjte000 instanceof RuntimeException if true throw RuntimeException jjte000 if jjte000 instanceof ParseException if true throw ParseException jjte000 if true throw Error jjte000 finally if jjtc000 jjtree closeNodeScope jjtn000 true final public void Parameter throws ParseException switch jj_ntk jj_ntk jj_ntk case WHITESPACE jj_consume_token WHITESPACE break default jj_la1 jj_gen switch jj_ntk jj_ntk jj_ntk case STRING_LITERAL StringLiteral break case INTEGER_LITERAL IntegerLiteral break default jj_la1 jj_gen if jj_2_6 IntegerRange else switch jj_ntk jj_ntk jj_ntk case LEFT_CURLEY Map break case LBRACKET ObjectArray break case TRUE True break case FALSE False break case IDENTIFIER case LCURLY Reference break case FLOATING_POINT_LITERAL FloatingPointLiteral break default jj_la1 jj_gen jj_consume_token throw new ParseException switch jj_ntk jj_ntk jj_ntk case WHITESPACE jj_consume_token WHITESPACE break default jj_la1 jj_gen final public void Method throws ParseException ASTMethod jjtn000 new ASTMethod this JJTMETHOD boolean jjtc000 true jjtree openNodeScope jjtn000 try Identifier jj_consume_token LPAREN switch jj_ntk jj_ntk jj_ntk case LBRACKET case LEFT_CURLEY case WHITESPACE case STRING_LITERAL case TRUE case FALSE case INTEGER_LITERAL case FLOATING_POINT_LITERAL case IDENTIFIER case LCURLY Parameter label_7 while true switch jj_ntk jj_ntk jj_ntk case COMMA break default jj_la1 jj_gen break label_7 jj_consume_token COMMA Parameter break default jj_la1 jj_gen jj_consume_token REFMOD2_RPAREN catch Throwable jjte000 if jjtc000 jjtree clearNodeScope jjtn000 jjtc000 false else jjtree popNode if jjte000 instanceof RuntimeException if true throw RuntimeException jjte000 if jjte000 instanceof ParseException if true throw ParseException jjte000 if true throw Error jjte000 finally if jjtc000 jjtree closeNodeScope jjtn000 true final public void Reference throws ParseException ASTReference jjtn000 new ASTReference this JJTREFERENCE boolean jjtc000 true jjtree openNodeScope jjtn000 try switch jj_ntk jj_ntk jj_ntk case IDENTIFIER jj_consume_token IDENTIFIER label_8 while true if jj_2_7 else break label_8 jj_consume_token DOT if jj_2_8 Method else switch jj_ntk jj_ntk jj_ntk case IDENTIFIER Identifier break default jj_la1 jj_gen jj_consume_token throw new ParseException break case LCURLY jj_consume_token LCURLY jj_consume_token IDENTIFIER label_9 while true if jj_2_9 else break label_9 jj_consume_token DOT if jj_2_10 Method else switch jj_ntk jj_ntk jj_ntk case IDENTIFIER Identifier break default jj_la1 jj_gen jj_consume_token throw new ParseException jj_consume_token RCURLY break default jj_la1 jj_gen jj_consume_token throw new ParseException catch Throwable jjte000 if jjtc000 jjtree clearNodeScope jjtn000 jjtc000 false else jjtree popNode if jjte000 instanceof RuntimeException if true throw RuntimeException jjte000 if jjte000 instanceof ParseException if true throw ParseException jjte000 if true throw Error jjte000 finally if jjtc000 jjtree closeNodeScope jjtn000 true final public void True throws ParseException ASTTrue jjtn000 new ASTTrue this JJTTRUE boolean jjtc000 true jjtree openNodeScope jjtn000 try jj_consume_token TRUE finally if jjtc000 jjtree closeNodeScope jjtn000 true final public void False throws ParseException ASTFalse jjtn000 new ASTFalse this JJTFALSE boolean jjtc000 true jjtree openNodeScope jjtn000 try jj_consume_token FALSE finally if jjtc000 jjtree closeNodeScope jjtn000 true final public void Text throws ParseException ASTText jjtn000 new ASTText this JJTTEXT boolean jjtc000 true jjtree openNodeScope jjtn000 try switch jj_ntk jj_ntk jj_ntk case TEXT jj_consume_token TEXT break case DOT jj_consume_token DOT break case RPAREN jj_consume_token RPAREN break case LPAREN jj_consume_token LPAREN break case INTEGER_LITERAL jj_consume_token INTEGER_LITERAL break case FLOATING_POINT_LITERAL jj_consume_token FLOATING_POINT_LITERAL break case STRING_LITERAL jj_consume_token STRING_LITERAL break case ESCAPE jj_consume_token ESCAPE break case LCURLY jj_consume_token LCURLY break case RCURLY jj_consume_token RCURLY break default jj_la1 jj_gen jj_consume_token throw new ParseException finally if jjtc000 jjtree closeNodeScope jjtn000 true final public void IfStatement throws ParseException ASTIfStatement jjtn000 new ASTIfStatement this JJTIFSTATEMENT boolean jjtc000 true jjtree openNodeScope jjtn000 try jj_consume_token IF_DIRECTIVE switch jj_ntk jj_ntk jj_ntk case WHITESPACE jj_consume_token WHITESPACE break default jj_la1 jj_gen jj_consume_token LPAREN Expression jj_consume_token RPAREN ASTBlock jjtn001 new ASTBlock this JJTBLOCK boolean jjtc001 true jjtree openNodeScope jjtn001 try label_10 while true switch jj_ntk jj_ntk jj_ntk case LPAREN case RPAREN case ESCAPE_DIRECTIVE case SET_DIRECTIVE case SINGLE_LINE_COMMENT_START case DOUBLE_ESCAPE case ESCAPE case TEXT case FORMAL_COMMENT case MULTI_LINE_COMMENT case STRING_LITERAL case IF_DIRECTIVE case STOP_DIRECTIVE case INTEGER_LITERAL case FLOATING_POINT_LITERAL case WORD case BRACKETED_WORD case IDENTIFIER case DOT case LCURLY case RCURLY break default jj_la1 jj_gen break label_10 Statement catch Throwable jjte001 if jjtc001 jjtree clearNodeScope jjtn001 jjtc001 false else jjtree popNode if jjte001 instanceof RuntimeException if true throw RuntimeException jjte001 if jjte001 instanceof ParseException if true throw ParseException jjte001 if true throw Error jjte001 finally if jjtc001 jjtree closeNodeScope jjtn001 true switch jj_ntk jj_ntk jj_ntk case ELSEIF_DIRECTIVE label_11 while true ElseIfStatement switch jj_ntk jj_ntk jj_ntk case ELSEIF_DIRECTIVE break default jj_la1 jj_gen break label_11 break default jj_la1 jj_gen switch jj_ntk jj_ntk jj_ntk case ELSE_DIRECTIVE ElseStatement break default jj_la1 jj_gen jj_consume_token END catch Throwable jjte000 if jjtc000 jjtree clearNodeScope jjtn000 jjtc000 false else jjtree popNode if jjte000 instanceof RuntimeException if true throw RuntimeException jjte000 if jjte000 instanceof ParseException if true throw ParseException jjte000 if true throw Error jjte000 finally if jjtc000 jjtree closeNodeScope jjtn000 true final public void ElseStatement throws ParseException ASTElseStatement jjtn000 new ASTElseStatement this JJTELSESTATEMENT boolean jjtc000 true jjtree openNodeScope jjtn000 try jj_consume_token ELSE_DIRECTIVE ASTBlock jjtn001 new ASTBlock this JJTBLOCK boolean jjtc001 true jjtree openNodeScope jjtn001 try label_12 while true switch jj_ntk jj_ntk jj_ntk case LPAREN case RPAREN case ESCAPE_DIRECTIVE case SET_DIRECTIVE case SINGLE_LINE_COMMENT_START case DOUBLE_ESCAPE case ESCAPE case TEXT case FORMAL_COMMENT case MULTI_LINE_COMMENT case STRING_LITERAL case IF_DIRECTIVE case STOP_DIRECTIVE case INTEGER_LITERAL case FLOATING_POINT_LITERAL case WORD case BRACKETED_WORD case IDENTIFIER case DOT case LCURLY case RCURLY break default jj_la1 jj_gen break label_12 Statement catch Throwable jjte001 if jjtc001 jjtree clearNodeScope jjtn001 jjtc001 false else jjtree popNode if jjte001 instanceof RuntimeException if true throw RuntimeException jjte001 if jjte001 instanceof ParseException if true throw ParseException jjte001 if true throw Error jjte001 finally if jjtc001 jjtree closeNodeScope jjtn001 true catch Throwable jjte000 if jjtc000 jjtree clearNodeScope jjtn000 jjtc000 false else jjtree popNode if jjte000 instanceof RuntimeException if true throw RuntimeException jjte000 if jjte000 instanceof ParseException if true throw ParseException jjte000 if true throw Error jjte000 finally if jjtc000 jjtree closeNodeScope jjtn000 true final public void ElseIfStatement throws ParseException ASTElseIfStatement jjtn000 new ASTElseIfStatement this JJTELSEIFSTATEMENT boolean jjtc000 true jjtree openNodeScope jjtn000 try jj_consume_token ELSEIF_DIRECTIVE switch jj_ntk jj_ntk jj_ntk case WHITESPACE jj_consume_token WHITESPACE break default jj_la1 jj_gen jj_consume_token LPAREN Expression jj_consume_token RPAREN ASTBlock jjtn001 new ASTBlock this JJTBLOCK boolean jjtc001 true jjtree openNodeScope jjtn001 try label_13 while true switch jj_ntk jj_ntk jj_ntk case LPAREN case RPAREN case ESCAPE_DIRECTIVE case SET_DIRECTIVE case SINGLE_LINE_COMMENT_START case DOUBLE_ESCAPE case ESCAPE case TEXT case FORMAL_COMMENT case MULTI_LINE_COMMENT case STRING_LITERAL case IF_DIRECTIVE case STOP_DIRECTIVE case INTEGER_LITERAL case FLOATING_POINT_LITERAL case WORD case BRACKETED_WORD case IDENTIFIER case DOT case LCURLY case RCURLY break default jj_la1 jj_gen break label_13 Statement catch Throwable jjte001 if jjtc001 jjtree clearNodeScope jjtn001 jjtc001 false else jjtree popNode if jjte001 instanceof RuntimeException if true throw RuntimeException jjte001 if jjte001 instanceof ParseException if true throw ParseException jjte001 if true throw Error jjte001 finally if jjtc001 jjtree closeNodeScope jjtn001 true catch Throwable jjte000 if jjtc000 jjtree clearNodeScope jjtn000 jjtc000 false else jjtree popNode if jjte000 instanceof RuntimeException if true throw RuntimeException jjte000 if jjte000 instanceof ParseException if true throw ParseException jjte000 if true throw Error jjte000 finally if jjtc000 jjtree closeNodeScope jjtn000 true final public void SetDirective throws ParseException ASTSetDirective jjtn000 new ASTSetDirective this JJTSETDIRECTIVE boolean jjtc000 true jjtree openNodeScope jjtn000 try jj_consume_token SET_DIRECTIVE switch jj_ntk jj_ntk jj_ntk case WHITESPACE jj_consume_token WHITESPACE break default jj_la1 jj_gen Reference switch jj_ntk jj_ntk jj_ntk case WHITESPACE jj_consume_token WHITESPACE break default jj_la1 jj_gen jj_consume_token EQUALS Expression jj_consume_token RPAREN token_source inSet false switch jj_ntk jj_ntk jj_ntk case NEWLINE jj_consume_token NEWLINE break default jj_la1 jj_gen catch Throwable jjte000 if jjtc000 jjtree clearNodeScope jjtn000 jjtc000 false else jjtree popNode if jjte000 instanceof RuntimeException if true throw RuntimeException jjte000 if jjte000 instanceof ParseException if true throw ParseException jjte000 if true throw Error jjte000 finally if jjtc000 jjtree closeNodeScope jjtn000 true final public void StopStatement throws ParseException ASTStop jjtn000 new ASTStop this JJTSTOP boolean jjtc000 true jjtree openNodeScope jjtn000 try jj_consume_token STOP_DIRECTIVE finally if jjtc000 jjtree closeNodeScope jjtn000 final public void Expression throws ParseException ASTExpression jjtn000 new ASTExpression this JJTEXPRESSION boolean jjtc000 true jjtree openNodeScope jjtn000 try ConditionalOrExpression catch Throwable jjte000 if jjtc000 jjtree clearNodeScope jjtn000 jjtc000 false else jjtree popNode if jjte000 instanceof RuntimeException if true throw RuntimeException jjte000 if jjte000 instanceof ParseException if true throw ParseException jjte000 if true throw Error jjte000 finally if jjtc000 jjtree closeNodeScope jjtn000 true final public void Assignment throws ParseException ASTAssignment jjtn000 new ASTAssignment this JJTASSIGNMENT boolean jjtc000 true jjtree openNodeScope jjtn000 try PrimaryExpression jj_consume_token EQUALS Expression catch Throwable jjte000 if jjtc000 jjtree clearNodeScope jjtn000 jjtc000 false else jjtree popNode if jjte000 instanceof RuntimeException if true throw RuntimeException jjte000 if jjte000 instanceof ParseException if true throw ParseException jjte000 if true throw Error jjte000 finally if jjtc000 jjtree closeNodeScope jjtn000 final public void ConditionalOrExpression throws ParseException ConditionalAndExpression label_14 while true switch jj_ntk jj_ntk jj_ntk case LOGICAL_OR break default jj_la1 jj_gen break label_14 jj_consume_token LOGICAL_OR ASTOrNode jjtn001 new ASTOrNode this JJTORNODE boolean jjtc001 true jjtree openNodeScope jjtn001 try ConditionalAndExpression catch Throwable jjte001 if jjtc001 jjtree clearNodeScope jjtn001 jjtc001 false else jjtree popNode if jjte001 instanceof RuntimeException if true throw RuntimeException jjte001 if jjte001 instanceof ParseException if true throw ParseException jjte001 if true throw Error jjte001 finally if jjtc001 jjtree closeNodeScope jjtn001 final public void ConditionalAndExpression throws ParseException EqualityExpression label_15 while true switch jj_ntk jj_ntk jj_ntk case LOGICAL_AND break default jj_la1 jj_gen break label_15 jj_consume_token LOGICAL_AND ASTAndNode jjtn001 new ASTAndNode this JJTANDNODE boolean jjtc001 true jjtree openNodeScope jjtn001 try EqualityExpression catch Throwable jjte001 if jjtc001 jjtree clearNodeScope jjtn001 jjtc001 false else jjtree popNode if jjte001 instanceof RuntimeException if true throw RuntimeException jjte001 if jjte001 instanceof ParseException if true throw ParseException jjte001 if true throw Error jjte001 finally if jjtc001 jjtree closeNodeScope jjtn001 final public void EqualityExpression throws ParseException RelationalExpression label_16 while true switch jj_ntk jj_ntk jj_ntk case LOGICAL_EQUALS case LOGICAL_NOT_EQUALS break default jj_la1 jj_gen break label_16 switch jj_ntk jj_ntk jj_ntk case LOGICAL_EQUALS jj_consume_token LOGICAL_EQUALS ASTEQNode jjtn001 new ASTEQNode this JJTEQNODE boolean jjtc001 true jjtree openNodeScope jjtn001 try RelationalExpression catch Throwable jjte001 if jjtc001 jjtree clearNodeScope jjtn001 jjtc001 false else jjtree popNode if jjte001 instanceof RuntimeException if true throw RuntimeException jjte001 if jjte001 instanceof ParseException if true throw ParseException jjte001 if true throw Error jjte001 finally if jjtc001 jjtree closeNodeScope jjtn001 break case LOGICAL_NOT_EQUALS jj_consume_token LOGICAL_NOT_EQUALS ASTNENode jjtn002 new ASTNENode this JJTNENODE boolean jjtc002 true jjtree openNodeScope jjtn002 try RelationalExpression catch Throwable jjte002 if jjtc002 jjtree clearNodeScope jjtn002 jjtc002 false else jjtree popNode if jjte002 instanceof RuntimeException if true throw RuntimeException jjte002 if jjte002 instanceof ParseException if true throw ParseException jjte002 if true throw Error jjte002 finally if jjtc002 jjtree closeNodeScope jjtn002 break default jj_la1 jj_gen jj_consume_token throw new ParseException final public void RelationalExpression throws ParseException AdditiveExpression label_17 while true switch jj_ntk jj_ntk jj_ntk case LOGICAL_LT case LOGICAL_LE case LOGICAL_GT case LOGICAL_GE break default jj_la1 jj_gen break label_17 switch jj_ntk jj_ntk jj_ntk case LOGICAL_LT jj_consume_token LOGICAL_LT ASTLTNode jjtn001 new ASTLTNode this JJTLTNODE boolean jjtc001 true jjtree openNodeScope jjtn001 try AdditiveExpression catch Throwable jjte001 if jjtc001 jjtree clearNodeScope jjtn001 jjtc001 false else jjtree popNode if jjte001 instanceof RuntimeException if true throw RuntimeException jjte001 if jjte001 instanceof ParseException if true throw ParseException jjte001 if true throw Error jjte001 finally if jjtc001 jjtree closeNodeScope jjtn001 break case LOGICAL_GT jj_consume_token LOGICAL_GT ASTGTNode jjtn002 new ASTGTNode this JJTGTNODE boolean jjtc002 true jjtree openNodeScope jjtn002 try AdditiveExpression catch Throwable jjte002 if jjtc002 jjtree clearNodeScope jjtn002 jjtc002 false else jjtree popNode if jjte002 instanceof RuntimeException if true throw RuntimeException jjte002 if jjte002 instanceof ParseException if true throw ParseException jjte002 if true throw Error jjte002 finally if jjtc002 jjtree closeNodeScope jjtn002 break case LOGICAL_LE jj_consume_token LOGICAL_LE ASTLENode jjtn003 new ASTLENode this JJTLENODE boolean jjtc003 true jjtree openNodeScope jjtn003 try AdditiveExpression catch Throwable jjte003 if jjtc003 jjtree clearNodeScope jjtn003 jjtc003 false else jjtree popNode if jjte003 instanceof RuntimeException if true throw RuntimeException jjte003 if jjte003 instanceof ParseException if true throw ParseException jjte003 if true throw Error jjte003 finally if jjtc003 jjtree closeNodeScope jjtn003 break case LOGICAL_GE jj_consume_token LOGICAL_GE ASTGENode jjtn004 new ASTGENode this JJTGENODE boolean jjtc004 true jjtree openNodeScope jjtn004 try AdditiveExpression catch Throwable jjte004 if jjtc004 jjtree clearNodeScope jjtn004 jjtc004 false else jjtree popNode if jjte004 instanceof RuntimeException if true throw RuntimeException jjte004 if jjte004 instanceof ParseException if true throw ParseException jjte004 if true throw Error jjte004 finally if jjtc004 jjtree closeNodeScope jjtn004 break default jj_la1 jj_gen jj_consume_token throw new ParseException final public void AdditiveExpression throws ParseException MultiplicativeExpression label_18 while true switch jj_ntk jj_ntk jj_ntk case MINUS case PLUS break default jj_la1 jj_gen break label_18 switch jj_ntk jj_ntk jj_ntk case PLUS jj_consume_token PLUS ASTAddNode jjtn001 new ASTAddNode this JJTADDNODE boolean jjtc001 true jjtree openNodeScope jjtn001 try MultiplicativeExpression catch Throwable jjte001 if jjtc001 jjtree clearNodeScope jjtn001 jjtc001 false else jjtree popNode if jjte001 instanceof RuntimeException if true throw RuntimeException jjte001 if jjte001 instanceof ParseException if true throw ParseException jjte001 if true throw Error jjte001 finally if jjtc001 jjtree closeNodeScope jjtn001 break case MINUS jj_consume_token MINUS ASTSubtractNode jjtn002 new ASTSubtractNode this JJTSUBTRACTNODE boolean jjtc002 true jjtree openNodeScope jjtn002 try MultiplicativeExpression catch Throwable jjte002 if jjtc002 jjtree clearNodeScope jjtn002 jjtc002 false else jjtree popNode if jjte002 instanceof RuntimeException if true throw RuntimeException jjte002 if jjte002 instanceof ParseException if true throw ParseException jjte002 if true throw Error jjte002 finally if jjtc002 jjtree closeNodeScope jjtn002 break default jj_la1 jj_gen jj_consume_token throw new ParseException final public void MultiplicativeExpression throws ParseException UnaryExpression label_19 while true switch jj_ntk jj_ntk jj_ntk case MULTIPLY case DIVIDE case MODULUS break default jj_la1 jj_gen break label_19 switch jj_ntk jj_ntk jj_ntk case MULTIPLY jj_consume_token MULTIPLY ASTMulNode jjtn001 new ASTMulNode this JJTMULNODE boolean jjtc001 true jjtree openNodeScope jjtn001 try UnaryExpression catch Throwable jjte001 if jjtc001 jjtree clearNodeScope jjtn001 jjtc001 false else jjtree popNode if jjte001 instanceof RuntimeException if true throw RuntimeException jjte001 if jjte001 instanceof ParseException if true throw ParseException jjte001 if true throw Error jjte001 finally if jjtc001 jjtree closeNodeScope jjtn001 break case DIVIDE jj_consume_token DIVIDE ASTDivNode jjtn002 new ASTDivNode this JJTDIVNODE boolean jjtc002 true jjtree openNodeScope jjtn002 try UnaryExpression catch Throwable jjte002 if jjtc002 jjtree clearNodeScope jjtn002 jjtc002 false else jjtree popNode if jjte002 instanceof RuntimeException if true throw RuntimeException jjte002 if jjte002 instanceof ParseException if true throw ParseException jjte002 if true throw Error jjte002 finally if jjtc002 jjtree closeNodeScope jjtn002 break case MODULUS jj_consume_token MODULUS ASTModNode jjtn003 new ASTModNode this JJTMODNODE boolean jjtc003 true jjtree openNodeScope jjtn003 try UnaryExpression catch Throwable jjte003 if jjtc003 jjtree clearNodeScope jjtn003 jjtc003 false else jjtree popNode if jjte003 instanceof RuntimeException if true throw RuntimeException jjte003 if jjte003 instanceof ParseException if true throw ParseException jjte003 if true throw Error jjte003 finally if jjtc003 jjtree closeNodeScope jjtn003 break default jj_la1 jj_gen jj_consume_token throw new ParseException final public void UnaryExpression throws ParseException if jj_2_11 switch jj_ntk jj_ntk jj_ntk case WHITESPACE jj_consume_token WHITESPACE break default jj_la1 jj_gen jj_consume_token LOGICAL_NOT ASTNotNode jjtn001 new ASTNotNode this JJTNOTNODE boolean jjtc001 true jjtree openNodeScope jjtn001 try UnaryExpression catch Throwable jjte001 if jjtc001 jjtree clearNodeScope jjtn001 jjtc001 false else jjtree popNode if jjte001 instanceof RuntimeException if true throw RuntimeException jjte001 if jjte001 instanceof ParseException if true throw ParseException jjte001 if true throw Error jjte001 finally if jjtc001 jjtree closeNodeScope jjtn001 else switch jj_ntk jj_ntk jj_ntk case LBRACKET case LEFT_CURLEY case LPAREN case WHITESPACE case STRING_LITERAL case TRUE case FALSE case INTEGER_LITERAL case FLOATING_POINT_LITERAL case IDENTIFIER case LCURLY PrimaryExpression break default jj_la1 jj_gen jj_consume_token throw new ParseException final public void PrimaryExpression throws ParseException switch jj_ntk jj_ntk jj_ntk case WHITESPACE jj_consume_token WHITESPACE break default jj_la1 jj_gen switch jj_ntk jj_ntk jj_ntk case STRING_LITERAL StringLiteral break case IDENTIFIER case LCURLY Reference break case INTEGER_LITERAL IntegerLiteral break default jj_la1 jj_gen if jj_2_12 IntegerRange else switch jj_ntk jj_ntk jj_ntk case FLOATING_POINT_LITERAL FloatingPointLiteral break case LEFT_CURLEY Map break case LBRACKET ObjectArray break case TRUE True break case FALSE False break case LPAREN jj_consume_token LPAREN Expression jj_consume_token RPAREN break default jj_la1 jj_gen jj_consume_token throw new ParseException switch jj_ntk jj_ntk jj_ntk case WHITESPACE jj_consume_token WHITESPACE break default jj_la1 jj_gen final private boolean jj_2_1 int xla jj_la xla jj_lastpos jj_scanpos token try return jj_3_1 catch LookaheadSuccess ls return true finally jj_save xla final private boolean jj_2_2 int xla jj_la xla jj_lastpos jj_scanpos token try return jj_3_2 catch LookaheadSuccess ls return true finally jj_save xla final private boolean jj_2_3 int xla jj_la xla jj_lastpos jj_scanpos token try return jj_3_3 catch LookaheadSuccess ls return true finally jj_save xla final private boolean jj_2_4 int xla jj_la xla jj_lastpos jj_scanpos token try return jj_3_4 catch LookaheadSuccess ls return true finally jj_save xla final private boolean jj_2_5 int xla jj_la xla jj_lastpos jj_scanpos token try return jj_3_5 catch LookaheadSuccess ls return true finally jj_save xla final private boolean jj_2_6 int xla jj_la xla jj_lastpos jj_scanpos token try return jj_3_6 catch LookaheadSuccess ls return true finally jj_save xla final private boolean jj_2_7 int xla jj_la xla jj_lastpos jj_scanpos token try return jj_3_7 catch LookaheadSuccess ls return true finally jj_save xla final private boolean jj_2_8 int xla jj_la xla jj_lastpos jj_scanpos token try return jj_3_8 catch LookaheadSuccess ls return true finally jj_save xla final private boolean jj_2_9 int xla jj_la xla jj_lastpos jj_scanpos token try return jj_3_9 catch LookaheadSuccess ls return true finally jj_save xla final private boolean jj_2_10 int xla jj_la xla jj_lastpos jj_scanpos token try return jj_3_10 catch LookaheadSuccess ls return true finally jj_save xla final private boolean jj_2_11 int xla jj_la xla jj_lastpos jj_scanpos token try return jj_3_11 catch LookaheadSuccess ls return true finally jj_save xla final private boolean jj_2_12 int xla jj_la xla jj_lastpos jj_scanpos token try return jj_3_12 catch LookaheadSuccess ls return true finally jj_save xla final private boolean jj_3R_82 if jj_scan_token COMMA return true if jj_3R_25 return true return false final private boolean jj_3_8 if jj_3R_29 return true return false final private boolean jj_3R_26 if jj_3R_20 return true return false final private boolean jj_3R_66 if jj_scan_token FALSE return true return false final private boolean jj_3R_65 if jj_scan_token TRUE return true return false final private boolean jj_3_9 if jj_scan_token DOT return true Token xsp xsp jj_scanpos if jj_3_10 jj_scanpos xsp if jj_3R_30 return true return false final private boolean jj_3R_57 if jj_3R_25 return true Token xsp while true xsp jj_scanpos if jj_3R_82 jj_scanpos xsp break return false final private boolean jj_3_7 if jj_scan_token DOT return true Token xsp xsp jj_scanpos if jj_3_8 jj_scanpos xsp if jj_3R_28 return true return false final private boolean jj_3_2 if jj_scan_token DOUBLE_ESCAPE return true return false final private boolean jj_3R_35 if jj_scan_token LCURLY return true if jj_scan_token IDENTIFIER return true Token xsp while true xsp jj_scanpos if jj_3_9 jj_scanpos xsp break if jj_scan_token RCURLY return true return false final private boolean jj_3_12 if jj_scan_token LBRACKET return true Token xsp xsp jj_scanpos if jj_scan_token jj_scanpos xsp xsp jj_scanpos if jj_3R_32 jj_scanpos xsp if jj_3R_33 return true xsp jj_scanpos if jj_scan_token jj_scanpos xsp if jj_scan_token DOUBLEDOT return true return false final private boolean jj_3R_34 if jj_scan_token IDENTIFIER return true Token xsp while true xsp jj_scanpos if jj_3_7 jj_scanpos xsp break return false final private boolean jj_3R_81 if jj_scan_token LPAREN return true return false final private boolean jj_3R_80 if jj_3R_66 return true return false final private boolean jj_3R_79 if jj_3R_65 return true return false final private boolean jj_3R_20 Token xsp xsp jj_scanpos if jj_3R_34 jj_scanpos xsp if jj_3R_35 return true return false final private boolean jj_3R_78 if jj_3R_64 return true return false final private boolean jj_3R_77 if jj_3R_63 return true return false final private boolean jj_3R_76 if jj_3R_62 return true return false final private boolean jj_3R_75 if jj_3R_61 return true return false final private boolean jj_3R_74 if jj_3R_36 return true return false final private boolean jj_3R_73 if jj_3R_20 return true return false final private boolean jj_3_6 if jj_scan_token LBRACKET return true Token xsp xsp jj_scanpos if jj_scan_token jj_scanpos xsp xsp jj_scanpos if jj_3R_26 jj_scanpos xsp if jj_3R_27 return true xsp jj_scanpos if jj_scan_token jj_scanpos xsp if jj_scan_token DOUBLEDOT return true return false final private boolean jj_3R_29 if jj_3R_56 return true if jj_scan_token LPAREN return true Token xsp xsp jj_scanpos if jj_3R_57 jj_scanpos xsp if jj_scan_token REFMOD2_RPAREN return true return false final private boolean jj_3R_72 if jj_3R_60 return true return false final private boolean jj_3R_67 Token xsp xsp jj_scanpos if jj_scan_token jj_scanpos xsp xsp jj_scanpos if jj_3R_72 jj_scanpos xsp if jj_3R_73 jj_scanpos xsp if jj_3R_74 jj_scanpos xsp if jj_3R_75 jj_scanpos xsp if jj_3R_76 jj_scanpos xsp if jj_3R_77 jj_scanpos xsp if jj_3R_78 jj_scanpos xsp if jj_3R_79 jj_scanpos xsp if jj_3R_80 jj_scanpos xsp if jj_3R_81 return true return false final private boolean jj_3R_55 if jj_3R_62 return true return false final private boolean jj_3R_54 if jj_3R_20 return true return false final private boolean jj_3R_53 if jj_3R_66 return true return false final private boolean jj_3R_85 if jj_scan_token COMMA return true if jj_3R_25 return true if jj_scan_token COLON return true if jj_3R_25 return true return false final private boolean jj_3R_52 if jj_3R_65 return true return false final private boolean jj_3R_31 Token xsp xsp jj_scanpos if jj_3_11 jj_scanpos xsp if jj_3R_58 return true return false final private boolean jj_3_11 Token xsp xsp jj_scanpos if jj_scan_token jj_scanpos xsp if jj_scan_token LOGICAL_NOT return true if jj_3R_31 return true return false final private boolean jj_3R_58 if jj_3R_67 return true return false final private boolean jj_3R_51 if jj_3R_64 return true return false final private boolean jj_3R_50 if jj_3R_63 return true return false final private boolean jj_3R_49 if jj_3R_61 return true return false final private boolean jj_3R_48 if jj_3R_36 return true return false final private boolean jj_3R_47 if jj_3R_60 return true return false final private boolean jj_3R_22 if jj_3R_36 return true return false final private boolean jj_3R_84 if jj_3R_36 return true return false final private boolean jj_3R_69 if jj_3R_36 return true return false final private boolean jj_3R_86 if jj_scan_token COMMA return true if jj_3R_25 return true return false final private boolean jj_3R_25 Token xsp xsp jj_scanpos if jj_scan_token jj_scanpos xsp xsp jj_scanpos if jj_3R_47 jj_scanpos xsp if jj_3R_48 jj_scanpos xsp if jj_3R_49 jj_scanpos xsp if jj_3R_50 jj_scanpos xsp if jj_3R_51 jj_scanpos xsp if jj_3R_52 jj_scanpos xsp if jj_3R_53 jj_scanpos xsp if jj_3R_54 jj_scanpos xsp if jj_3R_55 return true xsp jj_scanpos if jj_scan_token jj_scanpos xsp return false final private boolean jj_3_1 if jj_3R_20 return true return false final private boolean jj_3R_21 if jj_3R_20 return true return false final private boolean jj_3R_83 if jj_3R_20 return true return false final private boolean jj_3R_68 if jj_3R_20 return true return false final private boolean jj_3R_71 if jj_3R_25 return true Token xsp while true xsp jj_scanpos if jj_3R_86 jj_scanpos xsp break return false final private boolean jj_3R_61 if jj_scan_token LBRACKET return true Token xsp xsp jj_scanpos if jj_scan_token jj_scanpos xsp xsp jj_scanpos if jj_3R_68 jj_scanpos xsp if jj_3R_69 return true xsp jj_scanpos if jj_scan_token jj_scanpos xsp if jj_scan_token DOUBLEDOT return true xsp jj_scanpos if jj_scan_token jj_scanpos xsp xsp jj_scanpos if jj_3R_83 jj_scanpos xsp if jj_3R_84 return true xsp jj_scanpos if jj_scan_token jj_scanpos xsp if jj_scan_token RBRACKET return true return false final private boolean jj_3R_64 if jj_scan_token LBRACKET return true Token xsp xsp jj_scanpos if jj_3R_71 jj_scanpos xsp if jj_scan_token RBRACKET return true return false final private boolean jj_3R_46 if jj_3R_66 return true return false final private boolean jj_3R_70 Token xsp xsp jj_scanpos if jj_scan_token jj_scanpos xsp return false final private boolean jj_3_5 if jj_3R_25 return true if jj_scan_token COLON return true if jj_3R_25 return true Token xsp while true xsp jj_scanpos if jj_3R_85 jj_scanpos xsp break return false final private boolean jj_3R_45 if jj_3R_65 return true return false final private boolean jj_3R_63 if jj_scan_token LEFT_CURLEY return true Token xsp xsp jj_scanpos if jj_3_5 jj_scanpos xsp if jj_3R_70 return true if jj_scan_token RIGHT_CURLEY return true return false final private boolean jj_3_3 if jj_scan_token LBRACKET return true Token xsp xsp jj_scanpos if jj_scan_token jj_scanpos xsp xsp jj_scanpos if jj_3R_21 jj_scanpos xsp if jj_3R_22 return true xsp jj_scanpos if jj_scan_token jj_scanpos xsp if jj_scan_token DOUBLEDOT return true return false final private boolean jj_3R_44 if jj_3R_64 return true return false final private boolean jj_3R_43 if jj_3R_63 return true return false final private boolean jj_3R_42 if jj_3R_62 return true return false final private boolean jj_3R_41 if jj_3R_61 return true return false final private boolean jj_3R_40 if jj_3R_36 return true return false final private boolean jj_3R_39 if jj_3R_60 return true return false final private boolean jj_3R_23 if jj_scan_token COMMA return true Token xsp xsp jj_scanpos if jj_scan_token jj_scanpos xsp return false final private boolean jj_3R_38 if jj_3R_59 return true return false final private boolean jj_3R_37 if jj_3R_20 return true return false final private boolean jj_3R_24 Token xsp xsp jj_scanpos if jj_3R_37 jj_scanpos xsp if jj_3R_38 jj_scanpos xsp if jj_3R_39 jj_scanpos xsp if jj_3R_40 jj_scanpos xsp if jj_3R_41 jj_scanpos xsp if jj_3R_42 jj_scanpos xsp if jj_3R_43 jj_scanpos xsp if jj_3R_44 jj_scanpos xsp if jj_3R_45 jj_scanpos xsp if jj_3R_46 return true return false final private boolean jj_3R_59 if jj_scan_token WORD return true return false final private boolean jj_3R_56 if jj_scan_token IDENTIFIER return true return false final private boolean jj_3_4 Token xsp xsp jj_scanpos if jj_scan_token jj_scanpos xsp xsp jj_scanpos if jj_3R_23 jj_scanpos xsp if jj_3R_24 return true return false final private boolean jj_3R_60 if jj_scan_token STRING_LITERAL return true return false final private boolean jj_3R_30 if jj_3R_56 return true return false final private boolean jj_3R_36 if jj_scan_token INTEGER_LITERAL return true return false final private boolean jj_3R_28 if jj_3R_56 return true return false final private boolean jj_3R_62 if jj_scan_token FLOATING_POINT_LITERAL return true return false final private boolean jj_3R_33 if jj_3R_36 return true return false final private boolean jj_3R_32 if jj_3R_20 return true return false final private boolean jj_3R_27 if jj_3R_36 return true return false final private boolean jj_3_10 if jj_3R_29 return true return false public ParserTokenManager token_source public Token token jj_nt private int jj_ntk private Token jj_scanpos jj_lastpos private int jj_la public boolean lookingAhead false private boolean jj_semLA private int jj_gen final private int jj_la1 new int static private int jj_la1_0 static private int jj_la1_1 static private int jj_la1_2 static jj_la1_0 jj_la1_1 jj_la1_2 private static void jj_la1_0 jj_la1_0 new int private static void jj_la1_1 jj_la1_1 new int private static void jj_la1_2 jj_la1_2 new int final private JJCalls jj_2_rtns new JJCalls private boolean jj_rescan false private int jj_gc public Parser CharStream stream token_source new ParserTokenManager stream token new Token jj_ntk jj_gen for int jj_la1 for int jj_2_rtns length jj_2_rtns new JJCalls public void ReInit CharStream stream token_source ReInit stream token new Token jj_ntk jjtree reset jj_gen for int jj_la1 for int jj_2_rtns length jj_2_rtns new JJCalls public Parser ParserTokenManager tm token_source tm token new Token jj_ntk jj_gen for int jj_la1 for int jj_2_rtns length jj_2_rtns new JJCalls public void ReInit ParserTokenManager tm token_source tm token new Token jj_ntk jjtree reset jj_gen for int jj_la1 for int jj_2_rtns length jj_2_rtns new JJCalls final private Token jj_consume_token int kind throws ParseException Token oldToken if oldToken token next null token token next else token token next token_source getNextToken jj_ntk if token kind kind jj_gen if jj_gc jj_gc for int jj_2_rtns length JJCalls jj_2_rtns while null if gen jj_gen first null next return token token oldToken jj_kind kind throw generateParseException static private final class LookaheadSuccess extends java lang Error final private LookaheadSuccess jj_ls new LookaheadSuccess final private boolean jj_scan_token int kind if jj_scanpos jj_lastpos jj_la if jj_scanpos next null jj_lastpos jj_scanpos jj_scanpos next token_source getNextToken else jj_lastpos jj_scanpos jj_scanpos next else jj_scanpos jj_scanpos next if jj_rescan int Token tok token while tok null tok jj_scanpos tok tok next if tok null jj_add_error_token kind if jj_scanpos kind kind return true if jj_la jj_scanpos jj_lastpos throw jj_ls return false final public Token getNextToken if token next null token token next else token token next token_source getNextToken jj_ntk jj_gen return token final public Token getToken int index Token lookingAhead jj_scanpos token for int index if next null next else next token_source getNextToken return final private int jj_ntk if jj_nt token next null return jj_ntk token next token_source getNextToken kind else return jj_ntk jj_nt kind private java util Vector jj_expentries new java util Vector private int jj_expentry private int jj_kind private int jj_lasttokens new int private int jj_endpos private void jj_add_error_token int kind int pos if pos return if pos jj_endpos jj_lasttokens jj_endpos kind else if jj_endpos jj_expentry new int jj_endpos for int jj_endpos jj_expentry jj_lasttokens boolean exists false for java util Enumeration jj_expentries elements hasMoreElements int oldentry int nextElement if oldentry length jj_expentry length exists true for int jj_expentry length if oldentry jj_expentry exists false break if exists break if exists jj_expentries addElement jj_expentry if pos jj_lasttokens jj_endpos pos kind public ParseException generateParseException jj_expentries removeAllElements boolean la1tokens new boolean for int la1tokens false if jj_kind la1tokens jj_kind true jj_kind for int if jj_la1 jj_gen for int if jj_la1_0 la1tokens true if jj_la1_1 la1tokens true if jj_la1_2 la1tokens true for int if la1tokens jj_expentry new int jj_expentry jj_expentries addElement jj_expentry jj_endpos jj_rescan_token jj_add_error_token int exptokseq new int jj_expentries size for int jj_expentries size exptokseq int jj_expentries elementAt return new ParseException token exptokseq tokenImage final public void enable_tracing final public void disable_tracing final private void jj_rescan_token jj_rescan true for int try JJCalls jj_2_rtns do if gen jj_gen jj_la arg jj_lastpos jj_scanpos first switch case jj_3_1 break case jj_3_2 break case jj_3_3 break case jj_3_4 break case jj_3_5 break case jj_3_6 break case jj_3_7 break case jj_3_8 break case jj_3_9 break case jj_3_10 break case jj_3_11 break case jj_3_12 break next while null catch LookaheadSuccess ls jj_rescan false final private void jj_save int index int xla JJCalls jj_2_rtns index while gen jj_gen if next null next new JJCalls break next gen jj_gen xla jj_la first token arg xla static final class JJCalls int gen Token first int arg JJCalls next public class SystemLogChute implements LogChute public static final String RUNTIME_LOG_LEVEL_KEY public static final String RUNTIME_LOG_SYSTEM_ERR_LEVEL_KEY private int enabled TRACE_ID private int errLevel TRACE_ID public void init RuntimeServices rs throws Exception String level String rs getProperty RUNTIME_LOG_LEVEL_KEY if level null setEnabledLevel toLevel level String errLevel String rs getProperty RUNTIME_LOG_SYSTEM_ERR_LEVEL_KEY if errLevel null setSystemErrLevel toLevel errLevel protected int toLevel String level if level equalsIgnoreCase return DEBUG_ID else if level equalsIgnoreCase return INFO_ID else if level equalsIgnoreCase return WARN_ID else if level equalsIgnoreCase return ERROR_ID else return TRACE_ID protected String getPrefix int level switch level case WARN_ID return WARN_PREFIX case INFO_ID return INFO_PREFIX case DEBUG_ID return DEBUG_PREFIX case TRACE_ID return TRACE_PREFIX case ERROR_ID return ERROR_PREFIX default return INFO_PREFIX public void log int level String message log level message null public void log int level String message Throwable if isLevelEnabled level return String prefix getPrefix level if level this errLevel System err print prefix System err println message if null System err println getMessage printStackTrace else System out print prefix System out println message if null System out println getMessage printStackTrace System out public void setEnabledLevel int level this enabled level public int getEnabledLevel return this enabled public void setSystemErrLevel int level this errLevel level public int getSystemErrLevel return this errLevel public boolean isLevelEnabled int level return level this enabled public class VelocityEngine implements RuntimeConstants private RuntimeInstance ri new RuntimeInstance public VelocityEngine public VelocityEngine String propsFilename throws Exception ri init propsFilename public VelocityEngine Properties throws Exception ri init public void init throws Exception ri init public void init String propsFilename throws Exception ri init propsFilename public void init Properties throws Exception ri init public void setProperty String key Object value ri setProperty key value public void addProperty String key Object value ri addProperty key value public void clearProperty String key ri clearProperty key public void setExtendedProperties ExtendedProperties configuration ri setConfiguration configuration public Object getProperty String key return ri getProperty key public boolean evaluate Context context Writer out String logTag String instring throws ParseErrorException MethodInvocationException ResourceNotFoundException IOException return evaluate context out logTag new BufferedReader new StringReader instring public boolean evaluate Context context Writer writer String logTag InputStream instream throws ParseErrorException MethodInvocationException ResourceNotFoundException IOException BufferedReader br null String encoding null try encoding ri getString INPUT_ENCODING ENCODING_DEFAULT br new BufferedReader new InputStreamReader instream encoding catch UnsupportedEncodingException uce String msg encoding logTag throw new ParseErrorException msg return evaluate context writer logTag br public boolean evaluate Context context Writer writer String logTag Reader reader throws ParseErrorException MethodInvocationException ResourceNotFoundException IOException SimpleNode nodeTree null try nodeTree ri parse reader logTag catch ParseException pex throw new ParseErrorException pex catch TemplateInitException pex throw new ParseErrorException pex if nodeTree null InternalContextAdapterImpl ica new InternalContextAdapterImpl context ica pushCurrentTemplateName logTag try try nodeTree init ica ri catch TemplateInitException pex throw new ParseErrorException pex catch RuntimeException throw catch Exception getLog error logTag nodeTree render ica writer finally ica popCurrentTemplateName return true return false public boolean invokeVelocimacro String vmName String logTag String params Context context Writer writer throws Exception if vmName null params null context null writer null logTag null getLog error return false if ri isVelocimacro vmName logTag getLog error vmName return false StringBuffer construct new StringBuffer construct append vmName construct append for int params length construct append construct append params construct append try boolean retval evaluate context writer logTag construct toString return retval catch RuntimeException throw catch Exception getLog error throw public boolean mergeTemplate String templateName Context context Writer writer throws ResourceNotFoundException ParseErrorException MethodInvocationException Exception return mergeTemplate templateName ri getString INPUT_ENCODING ENCODING_DEFAULT context writer public boolean mergeTemplate String templateName String encoding Context context Writer writer throws ResourceNotFoundException ParseErrorException MethodInvocationException Exception Template template ri getTemplate templateName encoding if template null getLog error templateName return false else template merge context writer return true public Template getTemplate String name throws ResourceNotFoundException ParseErrorException Exception return ri getTemplate name public Template getTemplate String name String encoding throws ResourceNotFoundException ParseErrorException Exception return ri getTemplate name encoding public boolean resourceExists String resourceName return ri getLoaderNameForResource resourceName null public boolean templateExists String resourceName return resourceExists resourceName public Log getLog return ri getLog public void warn Object message getLog warn message public void info Object message getLog info message public void error Object message getLog error message public void debug Object message getLog debug message public void setApplicationAttribute Object key Object value ri setApplicationAttribute key value public Object getApplicationAttribute Object key return ri getApplicationAttribute key public interface Uberspect public void init throws Exception public Iterator getIterator Object obj Info info throws Exception public VelMethod getMethod Object obj String method Object args Info info throws Exception public VelPropertyGet getPropertyGet Object obj String identifier Info info throws Exception public VelPropertySet getPropertySet Object obj String identifier Object arg Info info throws Exception public class ClassUtils private ClassUtils public static Class getClass String clazz throws ClassNotFoundException ClassLoader loader Thread currentThread getContextClassLoader if loader null try return Class forName clazz true loader catch ClassNotFoundException return Class forName clazz public static Object getNewInstance String clazz throws ClassNotFoundException IllegalAccessException InstantiationException return getClass clazz newInstance public static InputStream getResourceAsStream Class claz String name InputStream result null while name startsWith name name substring ClassLoader classLoader Thread currentThread getContextClassLoader if classLoader null classLoader claz getClassLoader result classLoader getResourceAsStream name else result classLoader getResourceAsStream name if result null classLoader claz getClassLoader if classLoader null result classLoader getResourceAsStream name return result public class VelocityFormatter extends PatternFormatter public VelocityFormatter String format super format protected String getTime final long time final String format return new Date toString public interface VelPropertySet public Object invoke Object Object arg throws Exception public boolean isCacheable public String getMethodName public class OutputWrapper extends XMLOutputter public OutputWrapper public OutputWrapper Format super public String outputString Element element boolean strip StringWriter buff new StringWriter try outputElementContent element buff catch IOException return buff toString public class ASTSetDirective extends SimpleNode private String leftReference private Node right null private ASTReference left null boolean logOnNull false protected Info uberInfo public ASTSetDirective int id super id public ASTSetDirective Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public Object init InternalContextAdapter context Object data throws TemplateInitException super init context data uberInfo new Info context getCurrentTemplateName getLine getColumn right getRightHandSide left getLeftHandSide logOnNull rsvc getBoolean RuntimeConstants RUNTIME_LOG_REFERENCE_LOG_INVALID true leftReference left getFirstToken image substring return data public boolean render InternalContextAdapter context Writer writer throws IOException MethodInvocationException Object value right value context if rsvc getBoolean RuntimeConstants SET_NULL_ALLOWED false if value null if logOnNull boolean doit EventHandlerUtil shouldLogOnNullSet rsvc context left literal right literal if doit log isInfoEnabled log info context getCurrentTemplateName getLine getColumn String rightReference null if right instanceof ASTExpression rightReference ASTExpression right getLastToken image EventHandlerUtil invalidSetMethod rsvc context leftReference rightReference uberInfo return false if value null String rightReference null if right instanceof ASTExpression rightReference ASTExpression right getLastToken image EventHandlerUtil invalidSetMethod rsvc context leftReference rightReference uberInfo context remove leftReference return false else if left jjtGetNumChildren context put leftReference value else left setValue context value return true private ASTReference getLeftHandSide return ASTReference jjtGetChild private Node getRightHandSide return jjtGetChild public class EscapeHtmlReference extends EscapeReference protected String escape Object text return StringEscapeUtils escapeHtml text toString protected String getMatchAttribute return public class ASTAndNode extends SimpleNode public ASTAndNode int id super id public ASTAndNode Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public Object value InternalContextAdapter context throws MethodInvocationException return new Boolean evaluate context public boolean evaluate InternalContextAdapter context throws MethodInvocationException Node left jjtGetChild Node right jjtGetChild if left null right null log error left null context getCurrentTemplateName getLine getColumn return false if left evaluate context if right evaluate context return true return false class JJTParserState private java util Stack nodes private java util Stack marks private boolean node_created JJTParserState nodes new java util Stack marks new java util Stack sp mk boolean nodeCreated return node_created void reset nodes removeAllElements marks removeAllElements sp mk Node rootNode return Node nodes elementAt void pushNode Node nodes push sp Node popNode if sp mk mk Integer marks pop intValue return Node nodes pop Node peekNode return Node nodes peek int nodeArity return sp mk void clearNodeScope Node while sp mk popNode mk Integer marks pop intValue void openNodeScope Node marks push new Integer mk mk sp jjtOpen void closeNodeScope Node int num mk Integer marks pop intValue while num Node popNode jjtSetParent jjtAddChild num jjtClose pushNode node_created true void closeNodeScope Node boolean condition if condition int nodeArity mk Integer marks pop intValue while Node popNode jjtSetParent jjtAddChild jjtClose pushNode node_created true else mk Integer marks pop intValue node_created false public interface ParserVisitor public Object visit SimpleNode node Object data public Object visit ASTprocess node Object data public Object visit ASTEscapedDirective node Object data public Object visit ASTEscape node Object data public Object visit ASTComment node Object data public Object visit ASTFloatingPointLiteral node Object data public Object visit ASTIntegerLiteral node Object data public Object visit ASTStringLiteral node Object data public Object visit ASTIdentifier node Object data public Object visit ASTWord node Object data public Object visit ASTDirective node Object data public Object visit ASTBlock node Object data public Object visit ASTMap node Object data public Object visit ASTObjectArray node Object data public Object visit ASTIntegerRange node Object data public Object visit ASTMethod node Object data public Object visit ASTReference node Object data public Object visit ASTTrue node Object data public Object visit ASTFalse node Object data public Object visit ASTText node Object data public Object visit ASTIfStatement node Object data public Object visit ASTElseStatement node Object data public Object visit ASTElseIfStatement node Object data public Object visit ASTSetDirective node Object data public Object visit ASTStop node Object data public Object visit ASTExpression node Object data public Object visit ASTAssignment node Object data public Object visit ASTOrNode node Object data public Object visit ASTAndNode node Object data public Object visit ASTEQNode node Object data public Object visit ASTNENode node Object data public Object visit ASTLTNode node Object data public Object visit ASTGTNode node Object data public Object visit ASTLENode node Object data public Object visit ASTGENode node Object data public Object visit ASTAddNode node Object data public Object visit ASTSubtractNode node Object data public Object visit ASTMulNode node Object data public Object visit ASTDivNode node Object data public Object visit ASTModNode node Object data public Object visit ASTNotNode node Object data public interface Context Object put String key Object value Object get String key boolean containsKey Object key Object getKeys Object remove Object key public class ASTVariable extends SimpleNode public ASTVariable int id super id public ASTVariable Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public class VelocityException extends RuntimeException private static final long serialVersionUID private final Throwable wrapped public VelocityException final String exceptionMessage super exceptionMessage wrapped null public VelocityException final String exceptionMessage final Throwable wrapped super exceptionMessage this wrapped wrapped ExceptionUtils setCause this wrapped public VelocityException final Throwable wrapped super this wrapped wrapped ExceptionUtils setCause this wrapped public Throwable getWrappedThrowable return wrapped public class ResourceCacheImpl implements ResourceCache protected Map cache new Hashtable protected RuntimeServices rsvc null public void initialize RuntimeServices rs rsvc rs int maxSize rsvc getInt RuntimeConstants RESOURCE_MANAGER_DEFAULTCACHE_SIZE if maxSize Map lruCache Collections synchronizedMap new LRUMap maxSize lruCache putAll cache cache lruCache rsvc getLog debug this getClass public Resource get Object key return Resource cache get key public Resource put Object key Resource value return Resource cache put key value public Resource remove Object key return Resource cache remove key public Iterator enumerateKeys return cache keySet iterator public class StringResourceLoader extends ResourceLoader public static final String REPOSITORY_CLASS public static final String REPOSITORY_CLASS_DEFAULT StringResourceRepositoryImpl class getName public static final String REPOSITORY_ENCODING public static final String REPOSITORY_ENCODING_DEFAULT public static StringResourceRepository getRepository return RepositoryFactory getRepository public void init final ExtendedProperties configuration log info String repositoryClass configuration getString REPOSITORY_CLASS REPOSITORY_CLASS_DEFAULT String encoding configuration getString REPOSITORY_ENCODING REPOSITORY_ENCODING_DEFAULT RepositoryFactory setRepositoryClass repositoryClass RepositoryFactory setEncoding encoding RepositoryFactory init log log info public InputStream getResourceStream final String name throws ResourceNotFoundException if StringUtils isEmpty name throw new ResourceNotFoundException StringResource resource getRepository getStringResource name if resource null throw new ResourceNotFoundException name byte byteArray null try byteArray resource getBody getBytes resource getEncoding return new ByteArrayInputStream byteArray catch UnsupportedEncodingException ue throw new VelocityException resource getEncoding ue public boolean isSourceModified final Resource resource StringResource original null boolean result true original getRepository getStringResource resource getName if original null result original getLastModified resource getLastModified return result public long getLastModified final Resource resource StringResource original null original getRepository getStringResource resource getName return original null original getLastModified private static final class RepositoryFactory private static boolean isInitialized false private static StringResourceRepository repository null public static void setRepositoryClass final String className if isInitialized throw new IllegalStateException try repository StringResourceRepository ClassUtils getNewInstance className catch ClassNotFoundException cnfe throw new VelocityException className cnfe catch IllegalAccessException iae throw new VelocityException className iae catch InstantiationException ie throw new VelocityException className ie public static void setEncoding final String encoding if repository null throw new IllegalStateException repository setEncoding encoding public static synchronized void init final Log log throws VelocityException if isInitialized throw new IllegalStateException if log isInfoEnabled log info repository getClass getName log info repository getEncoding isInitialized true public static StringResourceRepository getRepository if isInitialized throw new IllegalStateException return repository public class TemplateInitException extends VelocityException implements ExtendedParseException private final String templateName private final int col private final int line private static final long serialVersionUID public TemplateInitException final String msg final String templateName final int col final int line super msg this templateName templateName this col col this line line public TemplateInitException final String msg ParseException parseException final String templateName final int col final int line super msg parseException this templateName templateName this col col this line line public String getTemplateName return templateName public int getLineNumber return line public int getColumnNumber return col public class ASTMulNode extends SimpleNode public ASTMulNode int id super id public ASTMulNode Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public Object value InternalContextAdapter context throws MethodInvocationException Object left jjtGetChild value context Object right jjtGetChild value context if left null right null log error left null jjtGetChild left null literal context getCurrentTemplateName getLine getColumn return null if left instanceof TemplateNumber left TemplateNumber left getAsNumber if right instanceof TemplateNumber right TemplateNumber right getAsNumber if left instanceof Number right instanceof Number log error left instanceof Number context getCurrentTemplateName getLine getColumn return null return MathUtils multiply Number left Number right public class Introspector extends IntrospectorBase public final static String CACHEDUMP_MSG public Introspector final Log log super log public Introspector final RuntimeLogger logger this new RuntimeLoggerLog logger public Method getMethod final Class final String name final Object params throws IllegalArgumentException try return super getMethod name params catch MethodMap AmbiguousException ae StringBuffer msg new StringBuffer append name append for int params length if msg append if params null msg append else msg append params getClass getName msg append append log error msg toString return null public void triggerClear super triggerClear log info CACHEDUMP_MSG public class Generator public static final String OUTPUT_PATH public static final String TEMPLATE_PATH private static final String DEFAULT_TEXEN_PROPERTIES private Properties props new Properties private Context controlContext private Hashtable writers new Hashtable private static Generator instance new Generator protected String outputEncoding protected String inputEncoding protected VelocityEngine ve private Generator setDefaultProps public static Generator getInstance return instance public void setVelocityEngine VelocityEngine ve this ve ve public Generator String propFile try BufferedInputStream bi null try bi new BufferedInputStream new FileInputStream propFile props load bi finally if bi null bi close catch IOException System err println propFile getMessage setDefaultProps public Generator Properties props this props Properties props clone protected void setDefaultProps ClassLoader classLoader VelocityEngine class getClassLoader try InputStream inputStream null try inputStream classLoader getResourceAsStream DEFAULT_TEXEN_PROPERTIES props load inputStream finally if inputStream null inputStream close catch IOException ioe System err println ioe getMessage public void setTemplatePath String templatePath props put TEMPLATE_PATH templatePath public String getTemplatePath return props getProperty TEMPLATE_PATH public void setOutputPath String outputPath props put OUTPUT_PATH outputPath public String getOutputPath return props getProperty OUTPUT_PATH public void setOutputEncoding String outputEncoding this outputEncoding outputEncoding public void setInputEncoding String inputEncoding this inputEncoding inputEncoding public Writer getWriter String path String encoding throws Exception Writer writer if encoding null encoding length encoding equals encoding equals writer new FileWriter path else writer new BufferedWriter new OutputStreamWriter new FileOutputStream path encoding return writer public Template getTemplate String templateName String encoding throws Exception Template template if encoding null encoding length encoding equals encoding equals template ve getTemplate templateName else template ve getTemplate templateName encoding return template public String parse String inputTemplate String outputFile throws Exception return parse inputTemplate outputFile null null public String parse String inputTemplate String outputFile String objectID Object object throws Exception return parse inputTemplate null outputFile null objectID object public String parse String inputTemplate String inputEncoding String outputFile String outputEncoding String objectID Object object throws Exception if objectID null object null controlContext put objectID object Template template getTemplate inputTemplate inputEncoding null inputEncoding this inputEncoding if outputFile null outputFile equals StringWriter sw new StringWriter template merge controlContext sw return sw toString else Writer writer null if writers get outputFile null writer getWriter getOutputPath File separator outputFile outputEncoding null outputEncoding this outputEncoding writers put outputFile writer else writer Writer writers get outputFile VelocityContext vc new VelocityContext controlContext template merge vc writer return public String parse String controlTemplate Context controlContext throws Exception this controlContext controlContext fillContextDefaults this controlContext fillContextProperties this controlContext Template template getTemplate controlTemplate inputEncoding StringWriter sw new StringWriter template merge controlContext sw return sw toString protected Context getContext Hashtable objs fillContextHash controlContext objs return controlContext protected void fillContextHash Context context Hashtable objs Enumeration enumeration objs keys while enumeration hasMoreElements String key enumeration nextElement toString context put key objs get key protected void fillContextDefaults Context context context put instance context put getOutputPath protected void fillContextProperties Context context Enumeration enumeration props propertyNames while enumeration hasMoreElements String nm String enumeration nextElement if nm startsWith String contextObj props getProperty nm int colon nm lastIndexOf String contextName nm substring colon try Object ClassUtils getNewInstance contextObj context put contextName catch Exception printStackTrace public void shutdown Iterator iterator writers values iterator while iterator hasNext Writer writer Writer iterator next try writer flush catch IOException try writer close catch IOException writers clear public class ArrayIterator implements Iterator private Object array private int pos private int size public ArrayIterator Object array if array getClass isArray throw new IllegalArgumentException this array array pos size Array getLength this array public Object next if pos size return Array get array pos throw new NoSuchElementException pos size public boolean hasNext return pos size public void remove throw new UnsupportedOperationException public class AnakiaJDOMFactory extends DefaultJDOMFactory public AnakiaJDOMFactory public Element element String name Namespace namespace return new AnakiaElement name namespace public Element element String name return new AnakiaElement name public Element element String name String uri return new AnakiaElement name uri public Element element String name String prefix String uri return new AnakiaElement name prefix uri interface InternalHousekeepingContext void pushCurrentTemplateName String void popCurrentTemplateName String getCurrentTemplateName Object getTemplateNameStack IntrospectionCacheData icacheGet Object key void icachePut Object key IntrospectionCacheData Resource getCurrentResource void setCurrentResource Resource boolean getAllowRendering void setAllowRendering boolean public class VelocityFormatter Context context null public VelocityFormatter Context context this context context public String formatShortDate Date date return DateFormat getDateInstance DateFormat SHORT format date public String formatLongDate Date date return DateFormat getDateInstance DateFormat LONG format date public String formatShortDateTime Date date return DateFormat getDateTimeInstance DateFormat SHORT DateFormat SHORT format date public String formatLongDateTime Date date return DateFormat getDateTimeInstance DateFormat LONG DateFormat LONG format date public String formatArray Object array return formatArray array public String formatArray Object array String delim return formatArray array delim delim public String formatArray Object array String delim String finaldelim StringBuffer sb new StringBuffer int arrayLen Array getLength array for int arrayLen sb append Array get array toString if arrayLen sb append delim else if arrayLen sb append finaldelim return sb toString public String formatVector List list return formatVector list public String formatVector List list String delim return formatVector list delim delim public String formatVector List list String delim String finaldelim StringBuffer sb new StringBuffer int size list size for int size sb append list get if size sb append delim else if size sb append finaldelim return sb toString public String limitLen int maxlen String string return limitLen maxlen string public String limitLen int maxlen String string String suffix String ret string if string length maxlen ret string substring maxlen suffix length suffix return ret public class VelocityAlternator protected String alternates null protected int current public VelocityAlternator String alternates this alternates alternates public String alternate current current alternates length return public String toString return alternates current public class VelocityAutoAlternator extends VelocityAlternator public VelocityAutoAlternator String alternates super alternates public final String toString String alternates current alternate return public String makeAlternator String name String alt1 String alt2 String alternates alt1 alt2 context put name new VelocityAlternator alternates return public String makeAlternator String name String alt1 String alt2 String alt3 String alternates alt1 alt2 alt3 context put name new VelocityAlternator alternates return public String makeAlternator String name String alt1 String alt2 String alt3 String alt4 String alternates alt1 alt2 alt3 alt4 context put name new VelocityAlternator alternates return public String makeAutoAlternator String name String alt1 String alt2 String alternates alt1 alt2 context put name new VelocityAutoAlternator alternates return public Object isNull Object Object dflt if null return dflt else return public class AnakiaTask extends MatchingTask SAXBuilder builder private File destDir null File baseDir null private String style null private long styleSheetLastModified private String projectAttribute null private File projectFile null private long projectFileLastModified private boolean lastModifiedCheck true private String extension private String templatePath null private File velocityPropertiesFile null private VelocityEngine ve new VelocityEngine private List contexts new LinkedList public AnakiaTask builder new SAXBuilder builder setFactory new AnakiaJDOMFactory public void setBasedir File dir baseDir dir public void setDestdir File dir destDir dir public void setExtension String extension this extension extension public void setStyle String style this style style public void setProjectFile String projectAttribute this projectAttribute projectAttribute public void setTemplatePath File templatePath try this templatePath templatePath getCanonicalPath catch java io IOException ioe throw new BuildException ioe public void setVelocityPropertiesFile File velocityPropertiesFile this velocityPropertiesFile velocityPropertiesFile public void setLastModifiedCheck String lastmod if lastmod equalsIgnoreCase lastmod equalsIgnoreCase lastmod equalsIgnoreCase this lastModifiedCheck false public void execute throws BuildException DirectoryScanner scanner String list if baseDir null baseDir project resolveFile if destDir null String msg throw new BuildException msg if style null throw new BuildException if velocityPropertiesFile null velocityPropertiesFile new File if velocityPropertiesFile exists templatePath null throw new BuildException velocityPropertiesFile getAbsolutePath log destDir getAbsolutePath Project MSG_INFO if projectAttribute null projectAttribute length projectFile new File baseDir projectAttribute if projectFile exists projectFileLastModified projectFile lastModified else log projectFile getAbsolutePath Project MSG_INFO projectFile null Document projectDocument null try if velocityPropertiesFile exists String file velocityPropertiesFile getAbsolutePath ExtendedProperties config new ExtendedProperties file ve setExtendedProperties config if templatePath null templatePath length ve setProperty RuntimeConstants FILE_RESOURCE_LOADER_PATH templatePath ve init styleSheetLastModified ve getTemplate style getLastModified if projectFile null projectDocument builder build projectFile catch Exception log toString Project MSG_INFO throw new BuildException scanner getDirectoryScanner baseDir list scanner getIncludedFiles for int list length process list projectDocument private void process String xmlFile Document projectDocument throws BuildException File outFile null File inFile null Writer writer null try inFile new File baseDir xmlFile outFile new File destDir xmlFile substring xmlFile lastIndexOf extension if lastModifiedCheck false inFile lastModified outFile lastModified styleSheetLastModified outFile lastModified projectFileLastModified outFile lastModified userContextsModifed outFile lastModified ensureDirectoryFor outFile log xmlFile Project MSG_INFO Document root builder build inFile VelocityContext context new VelocityContext String encoding String ve getProperty RuntimeConstants OUTPUT_ENCODING if encoding null encoding length encoding equals encoding equals encoding Format Format getRawFormat setEncoding encoding OutputWrapper ow new OutputWrapper context put root getRootElement context put ow context put getRelativePath xmlFile context put new TreeWalker context put new XPathTool context put new Escape context put new java util Date if projectDocument null context put projectDocument getRootElement for Iterator iter contexts iterator iter hasNext Context subContext Context iter next if subContext null throw new BuildException if subContext getContextDocument null throw new BuildException subContext getName context put subContext getName subContext getContextDocument getRootElement writer new BufferedWriter new OutputStreamWriter new FileOutputStream outFile encoding Template template ve getTemplate style template merge context writer log outFile Project MSG_INFO catch JDOMException outFile delete if getCause null Throwable rootCause getCause if rootCause instanceof SAXParseException System out println System out println rootCause getMessage System out println SAXParseException rootCause getLineNumber SAXParseException rootCause getColumnNumber System out println else rootCause printStackTrace else printStackTrace catch Throwable if outFile null outFile delete printStackTrace finally if writer null try writer flush catch IOException try writer close catch IOException private String getRelativePath String file if file null file length return StringTokenizer st new StringTokenizer file int slashCount st countTokens StringBuffer sb new StringBuffer for int slashCount sb append if sb toString length return StringUtils chop sb toString return private void ensureDirectoryFor File targetFile throws BuildException File directory new File targetFile getParent if directory exists if directory mkdirs throw new BuildException directory getAbsolutePath private boolean userContextsModifed long lastModified for Iterator iter contexts iterator iter hasNext AnakiaTask Context ctx AnakiaTask Context iter next if ctx getLastModified lastModified return true return false public Context createContext Context context new Context contexts add context return context public class Context private String name private Document contextDoc null private String file public Context public String getName return name public void setName String name if name equals name equals name equals name equals name equals name equals throw new IllegalArgumentException name this name name public void setFile String file this file file public long getLastModified return new File baseDir file lastModified public Document getContextDocument if contextDoc null File contextFile new File baseDir file try contextDoc builder build contextFile catch Exception throw new BuildException return contextDoc public class ASTStringLiteral extends SimpleNode private boolean interpolate true private SimpleNode nodeTree null private String image private String interpolateimage private boolean containsLineComment public ASTStringLiteral int id super id public ASTStringLiteral Parser int id super id public Object init InternalContextAdapter context Object data throws TemplateInitException super init context data interpolate rsvc getBoolean RuntimeConstants INTERPOLATE_STRINGLITERALS true getFirstToken image startsWith getFirstToken image indexOf getFirstToken image indexOf image getFirstToken image substring getFirstToken image length containsLineComment image indexOf if containsLineComment interpolateimage image else interpolateimage image if interpolate BufferedReader br new BufferedReader new StringReader interpolateimage try nodeTree rsvc parse br context null context getCurrentTemplateName false catch ParseException throw new TemplateInitException context null context getCurrentTemplateName getColumn getLine nodeTree init context rsvc return data public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public Object value InternalContextAdapter context if interpolate try StringWriter writer new StringWriter nodeTree render context writer String ret writer toString if containsLineComment ret length return ret substring ret length else return ret catch ParseErrorException log error catch MethodInvocationException log error catch ResourceNotFoundException log error catch RuntimeException throw catch IOException log error return image public interface InternalContextAdapter extends InternalHousekeepingContext Context InternalWrapperContext InternalEventContext public class ASTWord extends SimpleNode public ASTWord int id super id public ASTWord Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public class ASTText extends SimpleNode private char ctext public ASTText int id super id public ASTText Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public Object init InternalContextAdapter context Object data throws TemplateInitException Token getFirstToken String text NodeUtils tokenLiteral ctext text toCharArray return data public boolean render InternalContextAdapter context Writer writer throws IOException if context getAllowRendering writer write ctext return true public final class IntrospectorCacheImpl implements IntrospectorCache private final Log log private final Map classMapCache new HashMap private final Set classNameCache new HashSet private final Set listeners new HashSet public IntrospectorCacheImpl final Log log this log log public synchronized void clear classMapCache clear classNameCache clear for Iterator it listeners iterator it hasNext IntrospectorCacheListener it next triggerClear public synchronized ClassMap get final Class if null throw new IllegalArgumentException ClassMap classMap ClassMap classMapCache get if classMap null if classNameCache contains getName clear for Iterator it listeners iterator it hasNext IntrospectorCacheListener it next triggerGet classMap return classMap public synchronized ClassMap put final Class ClassMap classMap new ClassMap log classMapCache put classMap classNameCache add getName for Iterator it listeners iterator it hasNext IntrospectorCacheListener it next triggerPut classMap return classMap public void addListener final IntrospectorCacheListener listener listeners add listener public void removeListener final IntrospectorCacheListener listener listeners remove listener public interface Node public void jjtOpen public void jjtClose public void jjtSetParent Node public Node jjtGetParent public void jjtAddChild Node int public Node jjtGetChild int public int jjtGetNumChildren public Object jjtAccept ParserVisitor visitor Object data public Object childrenAccept ParserVisitor visitor Object data public Token getFirstToken public Token getLastToken public int getType public Object init InternalContextAdapter context Object data throws TemplateInitException public boolean evaluate InternalContextAdapter context throws MethodInvocationException public Object value InternalContextAdapter context throws MethodInvocationException public boolean render InternalContextAdapter context Writer writer throws IOException MethodInvocationException ParseErrorException ResourceNotFoundException public Object execute Object InternalContextAdapter context throws MethodInvocationException public void setInfo int info public int getInfo public String literal public void setInvalid public boolean isInvalid public int getLine public int getColumn public interface ResourceManager public static final int RESOURCE_TEMPLATE public static final int RESOURCE_CONTENT public void initialize RuntimeServices rs throws Exception public Resource getResource String resourceName int resourceType String encoding throws ResourceNotFoundException ParseErrorException Exception public String getLoaderNameForResource String resourceName public class StringResourceRepositoryImpl implements StringResourceRepository protected Map resources Collections synchronizedMap new HashMap private String encoding StringResourceLoader REPOSITORY_ENCODING_DEFAULT public StringResource getStringResource final String name return StringResource resources get name public void putStringResource final String name final String body resources put name new StringResource body getEncoding public void removeStringResource final String name resources remove name public String getEncoding return encoding public void setEncoding final String encoding this encoding encoding public class ASTMap extends SimpleNode public ASTMap int id super id public ASTMap Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public Object value InternalContextAdapter context throws MethodInvocationException int size jjtGetNumChildren Map objectMap new HashMap for int size SimpleNode keyNode SimpleNode jjtGetChild SimpleNode valueNode SimpleNode jjtGetChild Object key keyNode null null keyNode value context Object value valueNode null null valueNode value context objectMap put key value return objectMap public class ASTNotNode extends SimpleNode public ASTNotNode int id super id public ASTNotNode Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public boolean evaluate InternalContextAdapter context throws MethodInvocationException if jjtGetChild evaluate context return false else return true public Object value InternalContextAdapter context throws MethodInvocationException return jjtGetChild evaluate context Boolean FALSE Boolean TRUE public interface InvalidReferenceEventHandler extends EventHandler public Object invalidGetMethod Context context String reference Object object String property Info info public boolean invalidSetMethod Context context String leftreference String rightreference Info info public Object invalidMethod Context context String reference Object object String method Info info static class InvalidGetMethodExecutor implements EventHandlerMethodExecutor private Context context private String reference private Object object private String property private Info info private Object result InvalidGetMethodExecutor Context context String reference Object object String property Info info this context context this reference reference this object object this property property this info info public void execute EventHandler handler result InvalidReferenceEventHandler handler invalidGetMethod context reference object property info public Object getReturnValue return result public boolean isDone return result null static class InvalidSetMethodExecutor implements EventHandlerMethodExecutor private Context context private String leftreference private String rightreference private Info info private boolean result InvalidSetMethodExecutor Context context String leftreference String rightreference Info info this context context this leftreference leftreference this rightreference rightreference this info info public void execute EventHandler handler result InvalidReferenceEventHandler handler invalidSetMethod context leftreference rightreference info public Object getReturnValue return null public boolean isDone return result static class InvalidMethodExecutor implements EventHandlerMethodExecutor private Context context private String reference private Object object private String method private Info info private Object result private boolean executed false InvalidMethodExecutor Context context String reference Object object String method Info info this context context this reference reference this object object this method method this info info public void execute EventHandler handler executed true result InvalidReferenceEventHandler handler invalidMethod context reference object method info public Object getReturnValue return result public boolean isDone return executed result null class XPathCache private static final Map XPATH_CACHE new WeakHashMap private XPathCache static XPath getXPath String xpathString XPath xpath null synchronized XPATH_CACHE xpath XPath XPATH_CACHE get xpathString if xpath null xpath new XPath xpathString XPATH_CACHE put xpathString xpath return xpath public class PropertyExecutor extends AbstractExecutor private final Introspector introspector public PropertyExecutor final Log log final Introspector introspector final Class clazz final String property this log log this introspector introspector if StringUtils isNotEmpty property discover clazz property public PropertyExecutor final RuntimeLogger final Introspector introspector final Class clazz final String property this new RuntimeLoggerLog introspector clazz property protected Introspector getIntrospector return this introspector protected void discover final Class clazz final String property try Object params StringBuffer sb new StringBuffer sb append property setMethod introspector getMethod clazz sb toString params if isAlive char sb charAt if Character isLowerCase sb setCharAt Character toUpperCase else sb setCharAt Character toLowerCase setMethod introspector getMethod clazz sb toString params catch RuntimeException throw catch Exception log error property public Object execute Object throws IllegalAccessException InvocationTargetException return isAlive getMethod invoke Object null null public class BooleanPropertyExecutor extends PropertyExecutor public BooleanPropertyExecutor final Log log final Introspector introspector final Class clazz final String property super log introspector clazz property public BooleanPropertyExecutor final RuntimeLogger rlog final Introspector introspector final Class clazz final String property super new RuntimeLoggerLog rlog introspector clazz property protected void discover final Class clazz final String property try Object params StringBuffer sb new StringBuffer sb append property setMethod getIntrospector getMethod clazz sb toString params if isAlive char sb charAt if Character isLowerCase sb setCharAt Character toUpperCase else sb setCharAt Character toLowerCase setMethod getIntrospector getMethod clazz sb toString params if isAlive if getMethod getReturnType Boolean TYPE catch RuntimeException throw catch Exception log error property public interface IntrospectorCache void clear ClassMap get Class ClassMap put Class void addListener IntrospectorCacheListener listener void removeListener IntrospectorCacheListener listener public class VMReferenceMungeVisitor extends BaseVisitor private Map argmap null public VMReferenceMungeVisitor Map map argmap map public Object visit ASTReference node Object data String override String argmap get node literal substring if override null node setLiteral override data node childrenAccept this data return data public class Log4JLogSystem extends Log4JLogChute implements LogSystem public void logVelocityMessage int level String message log level message public abstract class MathUtils protected static final BigDecimal DECIMAL_ZERO new BigDecimal BigInteger ZERO protected static final int BASE_LONG protected static final int BASE_FLOAT protected static final int BASE_DOUBLE protected static final int BASE_BIGINTEGER protected static final int BASE_BIGDECIMAL protected static final Map ints new HashMap static ints put Byte class BigDecimal valueOf Byte MAX_VALUE ints put Short class BigDecimal valueOf Short MAX_VALUE ints put Integer class BigDecimal valueOf Integer MAX_VALUE ints put Long class BigDecimal valueOf Long MAX_VALUE ints put BigInteger class BigDecimal valueOf protected static final List typesBySize new ArrayList static typesBySize add Byte class typesBySize add Short class typesBySize add Integer class typesBySize add Long class typesBySize add Float class typesBySize add Double class public static BigDecimal toBigDecimal Number if instanceof BigDecimal return BigDecimal if instanceof BigInteger return new BigDecimal BigInteger return new BigDecimal doubleValue public static BigInteger toBigInteger Number if instanceof BigInteger return BigInteger return BigInteger valueOf longValue public static boolean isZero Number if isInteger if instanceof BigInteger return BigInteger compareTo BigInteger ZERO return doubleValue if instanceof Float return floatValue if instanceof Double return doubleValue return toBigDecimal compareTo DECIMAL_ZERO public static boolean isInteger Number return ints containsKey getClass public static Number wrapPrimitive long value Class type if type Byte class if value Byte MAX_VALUE value Byte MIN_VALUE type Short class else return new Byte byte value if type Short class if value Short MAX_VALUE value Short MIN_VALUE type Integer class else return new Short short value if type Integer class if value Integer MAX_VALUE value Integer MIN_VALUE type Long class else return new Integer int value if type Long class return new Long value return BigInteger valueOf value private static Number wrapPrimitive long value Number op1 Number op2 if typesBySize indexOf op1 getClass typesBySize indexOf op2 getClass return wrapPrimitive value op1 getClass return wrapPrimitive value op2 getClass private static int findCalculationBase Number op1 Number op2 boolean op1Int isInteger op1 boolean op2Int isInteger op2 if op1 instanceof BigDecimal op2 instanceof BigDecimal op1Int op2Int op1 instanceof BigInteger op2 instanceof BigInteger return BASE_BIGDECIMAL if op1Int op2Int if op1 instanceof BigInteger op2 instanceof BigInteger return BASE_BIGINTEGER return BASE_LONG if op1 instanceof Double op2 instanceof Double return BASE_DOUBLE return BASE_FLOAT public static Number add Number op1 Number op2 int calcBase findCalculationBase op1 op2 switch calcBase case BASE_BIGINTEGER return toBigInteger op1 add toBigInteger op2 case BASE_LONG long l1 op1 longValue long l2 op2 longValue long result l1 l2 if result l1 result l2 return toBigInteger op1 add toBigInteger op2 return wrapPrimitive result op1 op2 case BASE_FLOAT return new Float op1 floatValue op2 floatValue case BASE_DOUBLE return new Double op1 doubleValue op2 doubleValue default return toBigDecimal op1 add toBigDecimal op2 public static Number subtract Number op1 Number op2 int calcBase findCalculationBase op1 op2 switch calcBase case BASE_BIGINTEGER return toBigInteger op1 subtract toBigInteger op2 case BASE_LONG long l1 op1 longValue long l2 op2 longValue long result l1 l2 if result l1 result l2 return toBigInteger op1 subtract toBigInteger op2 return wrapPrimitive result op1 op2 case BASE_FLOAT return new Float op1 floatValue op2 floatValue case BASE_DOUBLE return new Double op1 doubleValue op2 doubleValue default return toBigDecimal op1 subtract toBigDecimal op2 public static Number multiply Number op1 Number op2 int calcBase findCalculationBase op1 op2 switch calcBase case BASE_BIGINTEGER return toBigInteger op1 multiply toBigInteger op2 case BASE_LONG long l1 op1 longValue long l2 op2 longValue long result l1 l2 if l2 result l2 l1 return toBigInteger op1 multiply toBigInteger op2 return wrapPrimitive result op1 op2 case BASE_FLOAT return new Float op1 floatValue op2 floatValue case BASE_DOUBLE return new Double op1 doubleValue op2 doubleValue default return toBigDecimal op1 multiply toBigDecimal op2 public static Number divide Number op1 Number op2 int calcBase findCalculationBase op1 op2 switch calcBase case BASE_BIGINTEGER BigInteger b1 toBigInteger op1 BigInteger b2 toBigInteger op2 return b1 divide b2 case BASE_LONG long l1 op1 longValue long l2 op2 longValue return wrapPrimitive l1 l2 op1 op2 case BASE_FLOAT return new Float op1 floatValue op2 floatValue case BASE_DOUBLE return new Double op1 doubleValue op2 doubleValue default return toBigDecimal op1 divide toBigDecimal op2 BigDecimal ROUND_HALF_DOWN public static Number modulo Number op1 Number op2 throws ArithmeticException int calcBase findCalculationBase op1 op2 switch calcBase case BASE_BIGINTEGER return toBigInteger op1 mod toBigInteger op2 case BASE_LONG return wrapPrimitive op1 longValue op2 longValue op1 op2 case BASE_FLOAT return new Float op1 floatValue op2 floatValue case BASE_DOUBLE return new Double op1 doubleValue op2 doubleValue default throw new ArithmeticException public static int compare Number op1 Number op2 int calcBase findCalculationBase op1 op2 switch calcBase case BASE_BIGINTEGER return toBigInteger op1 compareTo toBigInteger op2 case BASE_LONG long l1 op1 longValue long l2 op2 longValue if l1 l2 return if l1 l2 return return case BASE_FLOAT float f1 op1 floatValue float f2 op2 floatValue if f1 f2 return if f1 f2 return return case BASE_DOUBLE double d1 op1 doubleValue double d2 op2 doubleValue if d1 d2 return if d1 d2 return return default return toBigDecimal op1 compareTo toBigDecimal op2 public class NodeViewMode extends BaseVisitor private int indent private boolean showTokens true private String indentString StringBuffer sb new StringBuffer for int indent sb append return sb toString private Object showNode Node node Object data String tokens String special Token if showTokens node getFirstToken if specialToken null specialToken image startsWith special specialToken image tokens special image System out println indentString node tokens indent data node childrenAccept this data indent return data public Object visit SimpleNode node Object data return showNode node data public Object visit ASTprocess node Object data return showNode node data public Object visit ASTExpression node Object data return showNode node data public Object visit ASTAssignment node Object data return showNode node data public Object visit ASTOrNode node Object data return showNode node data public Object visit ASTAndNode node Object data return showNode node data public Object visit ASTEQNode node Object data return showNode node data public Object visit ASTNENode node Object data return showNode node data public Object visit ASTLTNode node Object data return showNode node data public Object visit ASTGTNode node Object data return showNode node data public Object visit ASTLENode node Object data return showNode node data public Object visit ASTGENode node Object data return showNode node data public Object visit ASTAddNode node Object data return showNode node data public Object visit ASTSubtractNode node Object data return showNode node data public Object visit ASTMulNode node Object data return showNode node data public Object visit ASTDivNode node Object data return showNode node data public Object visit ASTModNode node Object data return showNode node data public Object visit ASTNotNode node Object data return showNode node data public Object visit ASTFloatingPointLiteral node Object data return showNode node data public Object visit ASTIntegerLiteral node Object data return showNode node data public Object visit ASTStringLiteral node Object data return showNode node data public Object visit ASTIdentifier node Object data return showNode node data public Object visit ASTMethod node Object data return showNode node data public Object visit ASTReference node Object data return showNode node data public Object visit ASTTrue node Object data return showNode node data public Object visit ASTFalse node Object data return showNode node data public Object visit ASTBlock node Object data return showNode node data public Object visit ASTText node Object data return showNode node data public Object visit ASTIfStatement node Object data return showNode node data public Object visit ASTElseStatement node Object data return showNode node data public Object visit ASTElseIfStatement node Object data return showNode node data public Object visit ASTObjectArray node Object data return showNode node data public Object visit ASTDirective node Object data return showNode node data public Object visit ASTWord node Object data return showNode node data public Object visit ASTSetDirective node Object data return showNode node data public Object visit ASTEscapedDirective node Object data return showNode node data public Object visit ASTEscape node Object data return showNode node data public Object visit ASTMap node Object data return showNode node data public Object visit ASTIntegerRange node Object data return showNode node data public Object visit ASTStop node Object data return showNode node data public interface RuntimeServicesAware public void setRuntimeServices RuntimeServices rs public class ASTIntegerRange extends SimpleNode public ASTIntegerRange int id super id public ASTIntegerRange Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public Object value InternalContextAdapter context throws MethodInvocationException Object left jjtGetChild value context Object right jjtGetChild value context if left null right null log error left null context getCurrentTemplateName getLine getColumn return null if left instanceof Integer right instanceof Integer log error left instanceof Integer context getCurrentTemplateName getLine getColumn return null int Integer left intValue int Integer right intValue int nbrElements Math abs nbrElements int delta List elements new ArrayList nbrElements int value for int nbrElements elements add new Integer value value delta return elements public class VMProxyArg private static final int GENERALSTATIC private int type private SimpleNode nodeTree null private Object staticObject null private int numTreeChildren private String contextReference null private String callerReference null private String singleLevelRef null private boolean constant false private RuntimeServices rsvc null private Log log null public VMProxyArg RuntimeServices rs String contextRef String callerRef int rsvc rs log rsvc getLog contextReference contextRef callerReference callerRef type setup if nodeTree null numTreeChildren nodeTree jjtGetNumChildren if type ParserTreeConstants JJTREFERENCE if numTreeChildren singleLevelRef ASTReference nodeTree getRootString public boolean isConstant return constant public Object setObject InternalContextAdapter context Object if type ParserTreeConstants JJTREFERENCE if numTreeChildren try ASTReference nodeTree setValue context catch MethodInvocationException mie log error mie else context put singleLevelRef else type GENERALSTATIC staticObject log error contextReference callerReference return null public Object getObject InternalContextAdapter context throws MethodInvocationException try Object retObject null if type ParserTreeConstants JJTREFERENCE if numTreeChildren retObject context get singleLevelRef else retObject nodeTree execute null context else if type ParserTreeConstants JJTMAP retObject nodeTree value context else if type ParserTreeConstants JJTOBJECTARRAY retObject nodeTree value context else if type ParserTreeConstants JJTINTEGERRANGE retObject nodeTree value context else if type ParserTreeConstants JJTTRUE retObject staticObject else if type ParserTreeConstants JJTFALSE retObject staticObject else if type ParserTreeConstants JJTSTRINGLITERAL retObject nodeTree value context else if type ParserTreeConstants JJTINTEGERLITERAL retObject staticObject else if type ParserTreeConstants JJTFLOATINGPOINTLITERAL retObject staticObject else if type ParserTreeConstants JJTTEXT try StringWriter writer new StringWriter nodeTree render context writer retObject writer catch RuntimeException throw catch Exception log error else if type GENERALSTATIC retObject staticObject else log error callerReference type return retObject catch MethodInvocationException mie log error mie throw mie private void setup switch type case ParserTreeConstants JJTINTEGERRANGE case ParserTreeConstants JJTREFERENCE case ParserTreeConstants JJTOBJECTARRAY case ParserTreeConstants JJTMAP case ParserTreeConstants JJTSTRINGLITERAL case ParserTreeConstants JJTTEXT constant false try String buff callerReference BufferedReader br new BufferedReader new StringReader buff nodeTree rsvc parse br callerReference true nodeTree SimpleNode nodeTree jjtGetChild jjtGetChild if nodeTree null if nodeTree getType type log error InternalContextAdapter ica new InternalContextAdapterImpl new VelocityContext ica pushCurrentTemplateName ParserTreeConstants jjtNodeName type nodeTree init ica rsvc catch RuntimeException throw catch Exception log error callerReference break case ParserTreeConstants JJTTRUE constant true staticObject Boolean TRUE break case ParserTreeConstants JJTFALSE constant true staticObject Boolean FALSE break case ParserTreeConstants JJTINTEGERLITERAL constant true staticObject new Integer callerReference break case ParserTreeConstants JJTFLOATINGPOINTLITERAL constant true staticObject new Double callerReference break case ParserTreeConstants JJTWORD log error callerReference constant true staticObject callerReference break default log error callerReference public VMProxyArg VMProxyArg model InternalContextAdapter contextReference model getContextReference callerReference model getCallerReference nodeTree model getNodeTree staticObject model getStaticObject type model getType if nodeTree null numTreeChildren nodeTree jjtGetNumChildren if type ParserTreeConstants JJTREFERENCE if numTreeChildren singleLevelRef ASTReference nodeTree getRootString public String getCallerReference return callerReference public String getContextReference return contextReference public SimpleNode getNodeTree return nodeTree public Object getStaticObject return staticObject public int getType return type public interface EventHandlerMethodExecutor public void execute EventHandler handler throws Exception public boolean isDone public Object getReturnValue public interface VelMethod public Object invoke Object Object params throws Exception public boolean isCacheable public String getMethodName public Class getReturnType public abstract class SetExecutor protected Log log null private Method method null public abstract Object execute Object Object value throws IllegalAccessException InvocationTargetException public boolean isAlive return method null public Method getMethod return method protected void setMethod final Method method this method method public class RuntimeLoggerLog extends Log private RuntimeLogger rlog public RuntimeLoggerLog RuntimeLogger rlog if rlog null throw new NullPointerException this rlog rlog protected void setLogChute LogChute newLogChute throw new UnsupportedOperationException protected LogChute getLogChute throw new UnsupportedOperationException protected void setShowStackTraces boolean showStacks throw new UnsupportedOperationException public boolean getShowStackTraces throw new UnsupportedOperationException public boolean isTraceEnabled return true public void trace Object message debug message public void trace Object message Throwable debug message public boolean isDebugEnabled return true public void debug Object message rlog debug message public void debug Object message Throwable rlog debug message rlog debug public boolean isInfoEnabled return true public void info Object message rlog info message public void info Object message Throwable rlog info message rlog info public boolean isWarnEnabled return true public void warn Object message rlog warn message public void warn Object message Throwable rlog warn message rlog warn public boolean isErrorEnabled return true public void error Object message rlog error message public void error Object message Throwable rlog error message rlog error public class ASTEQNode extends SimpleNode public ASTEQNode int id super id public ASTEQNode Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public boolean evaluate InternalContextAdapter context throws MethodInvocationException Object left jjtGetChild value context Object right jjtGetChild value context if left null right null log error left null jjtGetChild left null literal context getCurrentTemplateName getLine getColumn return false if left instanceof TemplateNumber left TemplateNumber left getAsNumber if right instanceof TemplateNumber right TemplateNumber right getAsNumber if left instanceof Number right instanceof Number return MathUtils compare Number left Number right if left getClass isAssignableFrom right getClass right getClass isAssignableFrom left getClass return left equals right else if left toString null right toString null boolean culprit left toString null log error culprit jjtGetChild culprit literal context getCurrentTemplateName getLine getColumn return false else return left toString equals right toString public Object value InternalContextAdapter context throws MethodInvocationException return evaluate context Boolean TRUE Boolean FALSE public class WebMacro protected static final String VM_EXT protected static final String WM_EXT protected static String perLineREs public void convert String target File file new File target if file exists throw new RuntimeException if file isDirectory String basedir file getAbsolutePath String newBasedir basedir VM_EXT DirectoryScanner ds new DirectoryScanner ds setBasedir basedir ds addDefaultExcludes ds scan String files ds getIncludedFiles for int files length writeTemplate files basedir newBasedir else writeTemplate file getAbsolutePath private boolean writeTemplate String file String basedir String newBasedir if file indexOf WM_EXT return false System out println file String template file String newTemplate convertName file if basedir length String templateDir newBasedir extractPath file File outputDirectory new File templateDir template basedir File separator file if outputDirectory exists outputDirectory mkdirs newTemplate newBasedir File separator convertName file String convertedTemplate convertTemplate template FileWriter fw null try fw new FileWriter newTemplate fw write convertedTemplate catch Exception printStackTrace finally if fw null try fw close catch IOException io return true private final String extractPath String file int lastSepPos file lastIndexOf File separator return lastSepPos File separator file substring lastSepPos private String convertName String name return name indexOf WM_EXT name name substring name indexOf WM_EXT VM_EXT private static final void usage System err println public String convertTemplate String template String contents StringUtils fileContentsToString template if contents endsWith contents Perl5Util perl new Perl5Util for int perLineREs length contents perl substitute makeSubstRE contents if perl match contents contents perl substitute contents else contents perl substitute contents contents perl substitute contents return contents private final String makeSubstRE int return perLineREs perLineREs public static void main String args if args length for int args length WebMacro converter new WebMacro converter convert args else usage public class ParserPoolImpl implements ParserPool RuntimeServices rsvc null SimplePool pool null int max RuntimeConstants NUMBER_OF_PARSERS public void initialize RuntimeServices rsvc this rsvc rsvc max rsvc getInt RuntimeConstants PARSER_POOL_SIZE RuntimeConstants NUMBER_OF_PARSERS pool new SimplePool max for int max pool put rsvc createNewParser if rsvc getLog isDebugEnabled rsvc getLog debug max public Parser get Parser parser Parser pool get if parser null rsvc getLog debug parser rsvc createNewParser return parser public void put Parser parser pool put parser public class IncludeNotFound implements IncludeEventHandler RuntimeServicesAware private static final String DEFAULT_NOT_FOUND private static final String PROPERTY_NOT_FOUND private RuntimeServices rs null String notfound public String includeEvent String includeResourcePath String currentResourcePath String directiveName boolean exists rs getLoaderNameForResource includeResourcePath null if exists if rs getLoaderNameForResource notfound null return notfound else rs getLog error notfound return null else return includeResourcePath public void setRuntimeServices RuntimeServices rs this rs rs notfound StringUtils nullTrim rs getString PROPERTY_NOT_FOUND DEFAULT_NOT_FOUND public interface SecureIntrospectorControl public boolean checkObjectExecutePermission Class clazz String method public class ASTEscape extends SimpleNode public String val private char ctext public ASTEscape int id super id public ASTEscape Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public Object init InternalContextAdapter context Object data ctext val toCharArray return data public boolean render InternalContextAdapter context Writer writer throws IOException if context getAllowRendering writer write ctext return true public interface VelPropertyGet public Object invoke Object throws Exception public boolean isCacheable public String getMethodName public class ASTIncludeStatement extends SimpleNode public ASTIncludeStatement int id super id public ASTIncludeStatement Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public class VelocimacroProxy extends Directive private String macroName private String macroBody private String argArray null private SimpleNode nodeTree null private int numMacroArgs private String namespace private boolean init false private String callingArgs private int callingArgTypes private HashMap proxyArgHash new HashMap private boolean strictArguments public String getName return macroName public int getType return LINE public void setName String name macroName name public void setArgArray String arr argArray arr numMacroArgs argArray length public void setNodeTree SimpleNode tree nodeTree tree public int getNumArgs return numMacroArgs public void setMacrobody String mb macroBody mb public void setNamespace String ns this namespace ns public boolean render InternalContextAdapter context Writer writer Node node throws IOException MethodInvocationException try if nodeTree null if init nodeTree init context rsvc init true VMContext vmc new VMContext context rsvc for int argArray length VMProxyArg arg VMProxyArg proxyArgHash get argArray vmc addVMProxyArg arg nodeTree render vmc writer else rsvc getLog error macroName catch MethodInvocationException throw catch RuntimeException throw catch Exception rsvc getLog error macroName return true public void init RuntimeServices rs InternalContextAdapter context Node node throws TemplateInitException super init rs context node strictArguments rs getConfiguration getBoolean RuntimeConstants VM_ARGUMENTS_STRICT false int node jjtGetNumChildren if getNumArgs for Node parent node jjtGetParent parent null if parent instanceof ASTDirective StringUtils equals ASTDirective parent getDirectiveName return parent parent jjtGetParent String errormsg macroName getNumArgs getNumArgs if strictArguments throw new TemplateInitException errormsg context getCurrentTemplateName else rsvc getLog error errormsg return callingArgs getArgArray node setupMacro callingArgs callingArgTypes public boolean setupMacro String callArgs int callArgTypes setupProxyArgs callArgs callArgTypes parseTree callArgs return true private void parseTree String callArgs try BufferedReader br new BufferedReader new StringReader macroBody nodeTree rsvc parse br namespace false HashMap hm new HashMap for int argArray length String arg callArgs if arg charAt hm put argArray arg VMReferenceMungeVisitor new VMReferenceMungeVisitor hm nodeTree jjtAccept null catch RuntimeException throw catch Exception rsvc getLog error macroName private void setupProxyArgs String callArgs int callArgTypes for int argArray length VMProxyArg arg new VMProxyArg rsvc argArray callArgs callArgTypes proxyArgHash put argArray arg private String getArgArray Node node int numArgs node jjtGetNumChildren String args new String numArgs callingArgTypes new int numArgs int Token null Token tLast null while numArgs args callingArgTypes node jjtGetChild getType if false node jjtGetChild getType ParserTreeConstants JJTSTRINGLITERAL args node jjtGetChild getFirstToken image substring node jjtGetChild getFirstToken image length else node jjtGetChild getFirstToken tLast node jjtGetChild getLastToken while tLast args image next args image return args public class ASTAssignment extends SimpleNode public ASTAssignment int id super id public ASTAssignment Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public class EventCartridge private List referenceHandlers new ArrayList private List nullSetHandlers new ArrayList private List methodExceptionHandlers new ArrayList private List includeHandlers new ArrayList private List invalidReferenceHandlers new ArrayList Set initializedHandlers new HashSet public boolean addEventHandler EventHandler ev if ev null return false boolean found false if ev instanceof ReferenceInsertionEventHandler addReferenceInsertionEventHandler ReferenceInsertionEventHandler ev found true if ev instanceof NullSetEventHandler addNullSetEventHandler NullSetEventHandler ev found true if ev instanceof MethodExceptionEventHandler addMethodExceptionHandler MethodExceptionEventHandler ev found true if ev instanceof IncludeEventHandler addIncludeEventHandler IncludeEventHandler ev found true if ev instanceof InvalidReferenceEventHandler addInvalidReferenceEventHandler InvalidReferenceEventHandler ev found true return found public void addReferenceInsertionEventHandler ReferenceInsertionEventHandler ev referenceHandlers add ev public void addNullSetEventHandler NullSetEventHandler ev nullSetHandlers add ev public void addMethodExceptionHandler MethodExceptionEventHandler ev methodExceptionHandlers add ev public void addIncludeEventHandler IncludeEventHandler ev includeHandlers add ev public void addInvalidReferenceEventHandler InvalidReferenceEventHandler ev invalidReferenceHandlers add ev public boolean removeEventHandler EventHandler ev if ev null return false boolean found false if ev instanceof ReferenceInsertionEventHandler return referenceHandlers remove ev if ev instanceof NullSetEventHandler return nullSetHandlers remove ev if ev instanceof MethodExceptionEventHandler return methodExceptionHandlers remove ev if ev instanceof IncludeEventHandler return includeHandlers remove ev if ev instanceof InvalidReferenceEventHandler return invalidReferenceHandlers remove ev return found public Iterator getReferenceInsertionEventHandlers return referenceHandlers iterator public Iterator getNullSetEventHandlers return nullSetHandlers iterator public Iterator getMethodExceptionEventHandlers return methodExceptionHandlers iterator public Iterator getIncludeEventHandlers return includeHandlers iterator public Iterator getInvalidReferenceEventHandlers return invalidReferenceHandlers iterator public final boolean attachToContext Context context if context instanceof InternalEventContext InternalEventContext iec InternalEventContext context iec attachEventCartridge this return true else return false public void initialize RuntimeServices rs throws Exception for Iterator referenceHandlers iterator hasNext EventHandler eh EventHandler next if eh instanceof RuntimeServicesAware initializedHandlers contains eh RuntimeServicesAware eh setRuntimeServices rs initializedHandlers add eh for Iterator nullSetHandlers iterator hasNext EventHandler eh EventHandler next if eh instanceof RuntimeServicesAware initializedHandlers contains eh RuntimeServicesAware eh setRuntimeServices rs initializedHandlers add eh for Iterator methodExceptionHandlers iterator hasNext EventHandler eh EventHandler next if eh instanceof RuntimeServicesAware initializedHandlers contains eh RuntimeServicesAware eh setRuntimeServices rs initializedHandlers add eh for Iterator includeHandlers iterator hasNext EventHandler eh EventHandler next if eh instanceof RuntimeServicesAware initializedHandlers contains eh RuntimeServicesAware eh setRuntimeServices rs initializedHandlers add eh for Iterator invalidReferenceHandlers iterator hasNext EventHandler eh EventHandler next if eh instanceof RuntimeServicesAware initializedHandlers contains eh RuntimeServicesAware eh setRuntimeServices rs initializedHandlers add eh public class MethodInvocationException extends VelocityException implements ExtendedParseException private static final long serialVersionUID private String referenceName private final String methodName private final int lineNumber private final int columnNumber private final String templateName public MethodInvocationException final String message final Throwable final String methodName final String templateName final int lineNumber final int columnNumber super message this methodName methodName this templateName templateName this lineNumber lineNumber this columnNumber columnNumber public String getMethodName return methodName public void setReferenceName String ref referenceName ref public String getReferenceName return referenceName public int getColumnNumber return columnNumber public int getLineNumber return lineNumber public String getTemplateName return templateName public String getMessage StringBuffer message new StringBuffer message append super getMessage message append message append StringUtils isNotEmpty templateName templateName message append append lineNumber append append columnNumber append return message toString public interface NullSetEventHandler extends EventHandler public boolean shouldLogOnNullSet String lhs String rhs static class ShouldLogOnNullSetExecutor implements EventHandlerMethodExecutor private Context context private String lhs private String rhs private boolean result true private boolean executed false ShouldLogOnNullSetExecutor Context context String lhs String rhs this context context this lhs lhs this rhs rhs public void execute EventHandler handler NullSetEventHandler eh NullSetEventHandler handler if eh instanceof ContextAware ContextAware eh setContext context executed true result NullSetEventHandler handler shouldLogOnNullSet lhs rhs public Object getReturnValue return new Boolean result public boolean isDone return executed result public class Log private LogChute chute public Log setLogChute new HoldingLogChute public Log final LogChute chute setLogChute chute protected void setLogChute final LogChute chute if chute null throw new NullPointerException this chute chute protected LogChute getLogChute return this chute protected void log int level Object message getLogChute log level String valueOf message protected void log int level Object message Throwable getLogChute log level String valueOf message public boolean isTraceEnabled return getLogChute isLevelEnabled LogChute TRACE_ID public void trace Object message log LogChute TRACE_ID message public void trace Object message Throwable log LogChute TRACE_ID message public boolean isDebugEnabled return getLogChute isLevelEnabled LogChute DEBUG_ID public void debug Object message log LogChute DEBUG_ID message public void debug Object message Throwable log LogChute DEBUG_ID message public boolean isInfoEnabled return getLogChute isLevelEnabled LogChute INFO_ID public void info Object message log LogChute INFO_ID message public void info Object message Throwable log LogChute INFO_ID message public boolean isWarnEnabled return getLogChute isLevelEnabled LogChute WARN_ID public void warn Object message log LogChute WARN_ID message public void warn Object message Throwable log LogChute WARN_ID message public boolean isErrorEnabled return getLogChute isLevelEnabled LogChute ERROR_ID public void error Object message log LogChute ERROR_ID message public void error Object message Throwable log LogChute ERROR_ID message public class ClassMap private static final boolean debugReflection false private final Log log private final Class clazz private final MethodCache methodCache public ClassMap final Class clazz final Log log this clazz clazz this log log if debugReflection log isDebugEnabled log debug log debug clazz methodCache new MethodCache log populateMethodCache if debugReflection log isDebugEnabled log debug public Class getCachedClass return clazz public Method findMethod final String name final Object params throws MethodMap AmbiguousException return methodCache get name params private void populateMethodCache List classesToReflect new ArrayList for Class classToReflect getCachedClass classToReflect null classToReflect classToReflect getSuperclass if Modifier isPublic classToReflect getModifiers classesToReflect add classToReflect if debugReflection log isDebugEnabled log debug classToReflect Class interfaces classToReflect getInterfaces for int interfaces length if Modifier isPublic interfaces getModifiers classesToReflect add interfaces if debugReflection log isDebugEnabled log debug interfaces for Iterator it classesToReflect iterator it hasNext Class classToReflect Class it next if debugReflection log isDebugEnabled log debug classToReflect try Method methods classToReflect getMethods for int methods length int modifiers methods getModifiers if classToReflect isInterface Modifier isAbstract modifiers methodCache put methods if log isDebugEnabled log debug classToReflect se private static final class MethodCache private static final class CacheMiss private static final CacheMiss CACHE_MISS new CacheMiss private static final Object OBJECT new Object private static final Map convertPrimitives new HashMap static convertPrimitives put Boolean TYPE Boolean class getName convertPrimitives put Byte TYPE Byte class getName convertPrimitives put Character TYPE Character class getName convertPrimitives put Double TYPE Double class getName convertPrimitives put Float TYPE Float class getName convertPrimitives put Integer TYPE Integer class getName convertPrimitives put Long TYPE Long class getName convertPrimitives put Short TYPE Short class getName private final Log log private final Map cache new HashMap private final MethodMap methodMap new MethodMap private MethodCache Log log this log log public synchronized Method get final String name final Object params throws MethodMap AmbiguousException String methodKey makeMethodKey name params Object cacheEntry cache get methodKey if cacheEntry CACHE_MISS return null if cacheEntry null try cacheEntry methodMap find name params catch MethodMap AmbiguousException ae cache put methodKey CACHE_MISS throw ae cache put methodKey cacheEntry null cacheEntry CACHE_MISS return Method cacheEntry public synchronized void put Method method String methodKey makeMethodKey method if cache get methodKey null cache put methodKey method methodMap add method if debugReflection log isDebugEnabled log debug method private String makeMethodKey final Method method Class parameterTypes method getParameterTypes StringBuffer methodKey new StringBuffer method getName for int parameterTypes length if parameterTypes isPrimitive methodKey append String convertPrimitives get parameterTypes else methodKey append parameterTypes getName return methodKey toString private String makeMethodKey String method Object params StringBuffer methodKey new StringBuffer append method for int params length Object arg params if arg null arg OBJECT methodKey append arg getClass getName return methodKey toString public class ASTStop extends SimpleNode public ASTStop int id super id public ASTStop Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public boolean render InternalContextAdapter context Writer writer throws IOException MethodInvocationException ParseErrorException ResourceNotFoundException context setAllowRendering false return true public class StringUtils private static final String EOL System getProperty public String concat List list StringBuffer sb new StringBuffer int size list size for int size sb append list get toString return sb toString static public String getPackageAsPath String pckge return pckge replace File separator charAt File separator static public String removeUnderScores String data String temp null StringBuffer out new StringBuffer temp data StringTokenizer st new StringTokenizer temp while st hasMoreTokens String element String st nextElement out append firstLetterCaps element return out toString static public String removeAndHump String data return removeAndHump data static public String removeAndHump String data String replaceThis String temp null StringBuffer out new StringBuffer temp data StringTokenizer st new StringTokenizer temp replaceThis while st hasMoreTokens String element String st nextElement out append capitalizeFirstLetter element return out toString static public String firstLetterCaps String data String firstLetter data substring toUpperCase String restLetters data substring toLowerCase return firstLetter restLetters static public String capitalizeFirstLetter String data String firstLetter data substring toUpperCase String restLetters data substring return firstLetter restLetters public static String split String line String delim List list new ArrayList StringTokenizer new StringTokenizer line delim while hasMoreTokens list add nextToken return String list toArray new String list size public static String chop String int return chop EOL public static String chop String int String eol if null eol null return int length length if eol length endsWith eol length if length if length length return substring length public static StringBuffer stringSubstitution String argStr Hashtable vars return stringSubstitution argStr Map vars public static StringBuffer stringSubstitution String argStr Map vars StringBuffer argBuf new StringBuffer for int cIdx cIdx argStr length char ch argStr charAt cIdx switch ch case StringBuffer nameBuf new StringBuffer for cIdx cIdx argStr length cIdx ch argStr charAt cIdx if ch Character isLetterOrDigit ch nameBuf append ch else break if nameBuf length String value String vars get nameBuf toString if value null argBuf append value break default argBuf append ch cIdx break return argBuf public static String fileContentsToString String file String contents File null try new File file if exists FileReader fr null try fr new FileReader char template new char int length fr read template contents new String template catch Exception printStackTrace finally if fr null fr close catch Exception printStackTrace return contents public static String collapseNewlines String argStr char last argStr charAt StringBuffer argBuf new StringBuffer for int cIdx cIdx argStr length cIdx char ch argStr charAt cIdx if ch last argBuf append ch last ch return argBuf toString public static String collapseSpaces String argStr char last argStr charAt StringBuffer argBuf new StringBuffer for int cIdx cIdx argStr length cIdx char ch argStr charAt cIdx if ch last argBuf append ch last ch return argBuf toString public static final String sub String line String oldString String newString int if line indexOf oldString char line2 line toCharArray char newString2 newString toCharArray int oLength oldString length StringBuffer buf new StringBuffer line2 length buf append line2 append newString2 oLength int while line indexOf oldString buf append line2 append newString2 oLength buf append line2 line2 length return buf toString return line public static final String stackTrace Throwable String foo null try ByteArrayOutputStream ostr new ByteArrayOutputStream printStackTrace new PrintWriter ostr true foo ostr toString catch Exception return foo public static final String normalizePath String path String normalized path if normalized indexOf normalized normalized replace if normalized startsWith normalized normalized while true if index break normalized normalized substring index normalized substring index while true int index normalized indexOf if index break normalized normalized substring index normalized substring index while true int index normalized indexOf if index break normalized normalized substring index normalized substring index while true int index normalized indexOf if index break if index int index2 normalized lastIndexOf index normalized normalized substring index2 normalized substring index return normalized public String select boolean state String trueString String falseString if state return trueString else return falseString public boolean allEmpty List list int size list size for int size if list get null list get toString length return false return true public static List trimStrings List list if list null return null int sz list size for int sz list set nullTrim String list get return list public static String nullTrim String if null return null else return trim public class ASTBlock extends SimpleNode public ASTBlock int id super id public ASTBlock Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public boolean render InternalContextAdapter context Writer writer throws IOException MethodInvocationException ResourceNotFoundException ParseErrorException int jjtGetNumChildren for jjtGetChild render context writer return true public class ASTElseIfStatement extends SimpleNode public ASTElseIfStatement int id super id public ASTElseIfStatement Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public boolean evaluate InternalContextAdapter context throws MethodInvocationException return jjtGetChild evaluate context public boolean render InternalContextAdapter context Writer writer throws IOException MethodInvocationException ResourceNotFoundException ParseErrorException return jjtGetChild render context writer public class NodeUtils public static String specialText Token StringBuffer specialText new StringBuffer if specialToken null specialToken image startsWith return Token tmp_t specialToken while tmp_t specialToken null tmp_t tmp_t specialToken while tmp_t null String st tmp_t image StringBuffer sb new StringBuffer for int st length char st charAt if sb append if boolean ok true boolean term false int for ok true ok st length char cc st charAt if cc continue else if cc term true ok false else ok false if term String foo st substring sb append foo specialText append sb toString tmp_t tmp_t next return specialText toString public static String tokenLiteral Token return specialText image public static String interpolate String argStr Context vars throws MethodInvocationException StringBuffer argBuf new StringBuffer for int cIdx cIdx argStr length char ch argStr charAt cIdx switch ch case StringBuffer nameBuf new StringBuffer for cIdx cIdx argStr length cIdx ch argStr charAt cIdx if ch ch Character isLetterOrDigit ch nameBuf append ch else if ch ch continue else break if nameBuf length Object value vars get nameBuf toString if value null argBuf append append nameBuf toString else argBuf append value toString break default argBuf append ch cIdx break return argBuf toString public class Parse extends InputBase public String getName return public int getType return LINE public boolean render InternalContextAdapter context Writer writer Node node throws IOException ResourceNotFoundException ParseErrorException MethodInvocationException if context getAllowRendering return true if node jjtGetChild null rsvc getLog error return false Object value node jjtGetChild value context if value null rsvc getLog error return false String sourcearg value toString String arg EventHandlerUtil includeEvent rsvc context sourcearg context getCurrentTemplateName getName boolean blockinput false if arg null blockinput true Object templateStack context getTemplateNameStack if templateStack length rsvc getInt RuntimeConstants PARSE_DIRECTIVE_MAXDEPTH StringBuffer path new StringBuffer for int templateStack length path append templateStack rsvc getLog error templateStack length path return false Template null try if blockinput rsvc getTemplate arg getInputEncoding context catch ResourceNotFoundException rnfe rsvc getLog error arg context getCurrentTemplateName getLine getColumn throw rnfe catch ParseErrorException pee rsvc getLog error arg context getCurrentTemplateName getLine getColumn throw pee catch RuntimeException throw catch Exception rsvc getLog error arg return false try if blockinput context pushCurrentTemplateName arg SimpleNode getData render context writer catch MethodInvocationException throw catch RuntimeException throw catch Exception rsvc getLog error arg return false finally if blockinput context popCurrentTemplateName return true public interface LogChute String TRACE_PREFIX String DEBUG_PREFIX String INFO_PREFIX String WARN_PREFIX String ERROR_PREFIX int TRACE_ID int DEBUG_ID int INFO_ID int WARN_ID int ERROR_ID void init RuntimeServices rs throws Exception void log int level String message void log int level String message Throwable boolean isLevelEnabled int level public class LogManager private static LogChute createLogChute RuntimeServices rsvc throws Exception Log log rsvc getLog Object rsvc getProperty RuntimeConstants RUNTIME_LOG_LOGSYSTEM if null if instanceof LogChute try LogChute init rsvc return LogChute catch Exception log error else if instanceof LogSystem log info try LogChute chute new LogChuteSystem LogSystem chute init rsvc return chute catch Exception log error else log warn getClass getName List classes new ArrayList Object obj rsvc getProperty RuntimeConstants RUNTIME_LOG_LOGSYSTEM_CLASS if obj instanceof List classes List obj else if obj instanceof String classes add obj for Iterator ii classes iterator ii hasNext String claz String ii next if claz null claz length log debug claz try ClassUtils getNewInstance claz if instanceof LogChute LogChute init rsvc log debug claz return LogChute else if instanceof LogSystem log info LogChute chute new LogChuteSystem LogSystem chute init rsvc return chute else log error claz catch NoClassDefFoundError ncdfe log debug claz ncdfe catch Exception log info claz LogChute slc new SystemLogChute slc init rsvc log debug return slc public static void updateLog Log log RuntimeServices rsvc throws Exception LogChute newLogChute createLogChute rsvc LogChute oldLogChute log getLogChute if oldLogChute instanceof HoldingLogChute HoldingLogChute hlc HoldingLogChute oldLogChute hlc transferTo newLogChute log setLogChute newLogChute public interface ParserConstants int EOF int LBRACKET int RBRACKET int COMMA int DOUBLEDOT int COLON int LEFT_CURLEY int RIGHT_CURLEY int LPAREN int RPAREN int REFMOD2_RPAREN int ESCAPE_DIRECTIVE int SET_DIRECTIVE int DOLLAR int DOLLARBANG int HASH int SINGLE_LINE_COMMENT_START int DOUBLE_ESCAPE int ESCAPE int TEXT int SINGLE_LINE_COMMENT int FORMAL_COMMENT int MULTI_LINE_COMMENT int WHITESPACE int STRING_LITERAL int TRUE int FALSE int NEWLINE int MINUS int PLUS int MULTIPLY int DIVIDE int MODULUS int LOGICAL_AND int LOGICAL_OR int LOGICAL_LT int LOGICAL_LE int LOGICAL_GT int LOGICAL_GE int LOGICAL_EQUALS int LOGICAL_NOT_EQUALS int LOGICAL_NOT int EQUALS int END int IF_DIRECTIVE int ELSEIF_DIRECTIVE int ELSE_DIRECTIVE int STOP_DIRECTIVE int DIGIT int INTEGER_LITERAL int FLOATING_POINT_LITERAL int EXPONENT int LETTER int DIRECTIVE_CHAR int WORD int BRACKETED_WORD int ALPHA_CHAR int ALPHANUM_CHAR int IDENTIFIER_CHAR int IDENTIFIER int DOT int LCURLY int RCURLY int REFERENCE_TERMINATOR int DIRECTIVE_TERMINATOR int DIRECTIVE int REFMOD2 int REFMODIFIER int DEFAULT int PRE_DIRECTIVE int REFERENCE int IN_MULTI_LINE_COMMENT int IN_FORMAL_COMMENT int IN_SINGLE_LINE_COMMENT String tokenImage public class FieldMethodizer private HashMap fieldHash new HashMap private HashMap classHash new HashMap public FieldMethodizer public FieldMethodizer String try addObject catch Exception System err println getMessage public FieldMethodizer Object try addObject catch Exception System err println getMessage public void addObject String throws Exception inspect ClassUtils getClass public void addObject Object throws Exception inspect getClass public Object get String fieldName Object value null try Field Field fieldHash get fieldName if null value get classHash get fieldName catch IllegalAccessException System err println fieldName getMessage return value private void inspect Class clas Field fields clas getFields for int fields length int mod fields getModifiers if Modifier isStatic mod Modifier isPublic mod fieldHash put fields getName fields classHash put fields getName clas public class AvalonLogSystem extends AvalonLogChute implements LogSystem public void logVelocityMessage int level String message log level message public interface LogSystem public final static boolean DEBUG_ON true public final static int DEBUG_ID public final static int INFO_ID public final static int WARN_ID public final static int ERROR_ID public void init RuntimeServices rs throws Exception public void logVelocityMessage int level String message public class RuntimeInstance implements RuntimeConstants RuntimeServices private VelocimacroFactory vmFactory null private Log log new Log private ParserPool parserPool private boolean initializing false private boolean initialized false private ExtendedProperties overridingProperties null private Hashtable runtimeDirectives private ExtendedProperties configuration new ExtendedProperties private ResourceManager resourceManager null private EventCartridge eventCartridge null private Introspector introspector null private Map applicationAttributes null private Uberspect uberSpect public RuntimeInstance vmFactory new VelocimacroFactory this introspector new Introspector getLog applicationAttributes new HashMap public synchronized void init throws Exception if initialized initializing initializing true log trace log debug log trace initializeProperties initializeLog initializeResourceManager initializeDirectives initializeEventHandlers initializeParserPool initializeIntrospection vmFactory initVelocimacro log trace initialized true initializing false public boolean isInitialized return initialized private void initializeIntrospection throws Exception String rm getString RuntimeConstants UBERSPECT_CLASSNAME if rm null rm length Object null try ClassUtils getNewInstance rm catch ClassNotFoundException cnfe String err rm log error err throw new Exception err if instanceof Uberspect String err rm Uberspect class getName log error err throw new Exception err uberSpect Uberspect if uberSpect instanceof UberspectLoggable UberspectLoggable uberSpect setLog getLog if uberSpect instanceof RuntimeServicesAware RuntimeServicesAware uberSpect setRuntimeServices this uberSpect init else String err log error err throw new Exception err private void setDefaultProperties InputStream inputStream null try inputStream getClass getResourceAsStream DEFAULT_RUNTIME_PROPERTIES configuration load inputStream if log isDebugEnabled log debug new File DEFAULT_RUNTIME_PROPERTIES getPath catch IOException ioe log error ioe finally try if inputStream null inputStream close catch IOException ioe log error ioe public void setProperty String key Object value if overridingProperties null overridingProperties new ExtendedProperties overridingProperties setProperty key value public void setConfiguration ExtendedProperties configuration if overridingProperties null overridingProperties configuration else if overridingProperties configuration overridingProperties combine configuration public void addProperty String key Object value if overridingProperties null overridingProperties new ExtendedProperties overridingProperties addProperty key value public void clearProperty String key if overridingProperties null overridingProperties clearProperty key public Object getProperty String key Object null if initialized initializing overridingProperties null overridingProperties get key if null configuration getProperty key if instanceof String return StringUtils nullTrim String else return private void initializeProperties if configuration isInitialized false setDefaultProperties if overridingProperties null configuration combine overridingProperties public void init Properties throws Exception overridingProperties ExtendedProperties convertProperties init public void init String configurationFile throws Exception overridingProperties new ExtendedProperties configurationFile init private void initializeResourceManager throws Exception String rm getString RuntimeConstants RESOURCE_MANAGER_CLASS if rm null rm length Object null try ClassUtils getNewInstance rm catch ClassNotFoundException cnfe String err rm log error err throw new Exception err if instanceof ResourceManager String err rm ResourceManager class getName log error err throw new Exception err resourceManager ResourceManager resourceManager initialize this else String err log error err throw new Exception err private void initializeEventHandlers throws Exception eventCartridge new EventCartridge String referenceinsertion configuration getStringArray RuntimeConstants EVENTHANDLER_REFERENCEINSERTION if referenceinsertion null for int referenceinsertion length EventHandler ev initializeSpecificEventHandler referenceinsertion RuntimeConstants EVENTHANDLER_REFERENCEINSERTION ReferenceInsertionEventHandler class if ev null eventCartridge addReferenceInsertionEventHandler ReferenceInsertionEventHandler ev String nullset configuration getStringArray RuntimeConstants EVENTHANDLER_NULLSET if nullset null for int nullset length EventHandler ev initializeSpecificEventHandler nullset RuntimeConstants EVENTHANDLER_NULLSET NullSetEventHandler class if ev null eventCartridge addNullSetEventHandler NullSetEventHandler ev String methodexception configuration getStringArray RuntimeConstants EVENTHANDLER_METHODEXCEPTION if methodexception null for int methodexception length EventHandler ev initializeSpecificEventHandler methodexception RuntimeConstants EVENTHANDLER_METHODEXCEPTION MethodExceptionEventHandler class if ev null eventCartridge addMethodExceptionHandler MethodExceptionEventHandler ev String includeHandler configuration getStringArray RuntimeConstants EVENTHANDLER_INCLUDE if includeHandler null for int includeHandler length EventHandler ev initializeSpecificEventHandler includeHandler RuntimeConstants EVENTHANDLER_INCLUDE IncludeEventHandler class if ev null eventCartridge addIncludeEventHandler IncludeEventHandler ev String invalidReferenceSet configuration getStringArray RuntimeConstants EVENTHANDLER_INVALIDREFERENCES if invalidReferenceSet null for int invalidReferenceSet length EventHandler ev initializeSpecificEventHandler invalidReferenceSet RuntimeConstants EVENTHANDLER_INVALIDREFERENCES InvalidReferenceEventHandler class if ev null eventCartridge addInvalidReferenceEventHandler InvalidReferenceEventHandler ev private EventHandler initializeSpecificEventHandler String classname String paramName Class EventHandlerInterface throws Exception if classname null classname length Object null try ClassUtils getNewInstance classname catch ClassNotFoundException cnfe String err paramName classname log error err throw new Exception err if EventHandlerInterface isAssignableFrom EventHandlerInterface String err paramName classname EventHandlerInterface getName log error err throw new Exception err EventHandler ev EventHandler if ev instanceof RuntimeServicesAware RuntimeServicesAware ev setRuntimeServices this return ev else return null private void initializeLog throws Exception LogManager updateLog this log this private void initializeDirectives throws Exception runtimeDirectives new Hashtable Properties directiveProperties new Properties InputStream inputStream null try inputStream getClass getResourceAsStream DEFAULT_RUNTIME_DIRECTIVES if inputStream null throw new Exception directiveProperties load inputStream catch IOException ioe log error ioe finally try if inputStream null inputStream close catch IOException ioe log error ioe Enumeration directiveClasses directiveProperties elements while directiveClasses hasMoreElements String directiveClass String directiveClasses nextElement loadDirective directiveClass log debug directiveClass String userdirective configuration getStringArray for int userdirective length loadDirective userdirective if log isInfoEnabled log info userdirective private void loadDirective String directiveClass try Object ClassUtils getNewInstance directiveClass if instanceof Directive Directive directive Directive runtimeDirectives put directive getName directive else log error directiveClass Directive class getName catch Exception log error directiveClass private void initializeParserPool throws Exception String pp getString RuntimeConstants PARSER_POOL_CLASS if pp null pp length Object null try ClassUtils getNewInstance pp catch ClassNotFoundException cnfe String err pp log error err throw new Exception err if instanceof ParserPool String err pp ParserPool class log error err throw new Exception err parserPool ParserPool parserPool initialize this else String err log error err throw new Exception err public Parser createNewParser if initialized initializing log debug try init catch Exception getLog error throw new IllegalStateException Parser parser new Parser this parser setDirectives runtimeDirectives return parser public SimpleNode parse Reader reader String templateName throws ParseException return parse reader templateName true public SimpleNode parse Reader reader String templateName boolean dumpNamespace throws ParseException if initialized initializing log debug try init catch Exception getLog error throw new IllegalStateException SimpleNode ast null Parser parser Parser parserPool get if parser null if log isInfoEnabled log info parser createNewParser if parser null try if dumpNamespace dumpVMNamespace templateName ast parser parse reader templateName finally parserPool put parser else log error return ast public Template getTemplate String name throws ResourceNotFoundException ParseErrorException Exception return getTemplate name getString INPUT_ENCODING ENCODING_DEFAULT public Template getTemplate String name String encoding throws ResourceNotFoundException ParseErrorException Exception if initialized initializing log info init return Template resourceManager getResource name ResourceManager RESOURCE_TEMPLATE encoding public ContentResource getContent String name throws ResourceNotFoundException ParseErrorException Exception return getContent name getString INPUT_ENCODING ENCODING_DEFAULT public ContentResource getContent String name String encoding throws ResourceNotFoundException ParseErrorException Exception if initialized initializing log info init return ContentResource resourceManager getResource name ResourceManager RESOURCE_CONTENT encoding public String getLoaderNameForResource String resourceName if initialized initializing log debug try init catch Exception getLog error throw new IllegalStateException return resourceManager getLoaderNameForResource resourceName public Log getLog return log public void warn Object message getLog warn message public void info Object message getLog info message public void error Object message getLog error message public void debug Object message getLog debug message public String getString String key String defaultValue return configuration getString key defaultValue public Directive getVelocimacro String vmName String templateName return vmFactory getVelocimacro vmName templateName public boolean addVelocimacro String name String macro String argArray String sourceTemplate return vmFactory addVelocimacro name macro argArray sourceTemplate public boolean isVelocimacro String vmName String templateName return vmFactory isVelocimacro vmName templateName public boolean dumpVMNamespace String namespace return vmFactory dumpVMNamespace namespace public String getString String key return StringUtils nullTrim configuration getString key public int getInt String key return configuration getInt key public int getInt String key int defaultValue return configuration getInt key defaultValue public boolean getBoolean String key boolean def return configuration getBoolean key def public ExtendedProperties getConfiguration return configuration public Introspector getIntrospector return introspector public EventCartridge getApplicationEventCartridge return eventCartridge public Object getApplicationAttribute Object key return applicationAttributes get key public Object setApplicationAttribute Object key Object return applicationAttributes put key public Uberspect getUberspect return uberSpect public class JarResourceLoader extends ResourceLoader private Map entryDirectory new HashMap private Map jarfiles new HashMap public void init ExtendedProperties configuration log trace Vector paths configuration getVector StringUtils trimStrings paths if paths null paths size paths configuration getVector StringUtils trimStrings paths if paths null paths size log info if paths null log debug paths size for int paths size loadJar String paths get log trace private void loadJar String path if log isDebugEnabled log debug path if path null log error if path startsWith log error if path endsWith path closeJar path JarHolder temp new JarHolder rsvc path addEntries temp getEntries jarfiles put temp getUrlPath temp private void closeJar String path if jarfiles containsKey path JarHolder theJar JarHolder jarfiles get path theJar close private void addEntries Hashtable entries entryDirectory putAll entries public InputStream getResourceStream String source throws ResourceNotFoundException InputStream results null if org apache commons lang StringUtils isEmpty source throw new ResourceNotFoundException String normalizedPath StringUtils normalizePath source if normalizedPath null normalizedPath length String msg normalizedPath log error msg throw new ResourceNotFoundException msg if normalizedPath startsWith normalizedPath normalizedPath substring if entryDirectory containsKey normalizedPath String jarurl String entryDirectory get normalizedPath if jarfiles containsKey jarurl JarHolder holder JarHolder jarfiles get jarurl results holder getResource normalizedPath return results throw new ResourceNotFoundException source public boolean isSourceModified Resource resource return true public long getLastModified Resource resource return public class FileUtil static public String mkdir String try if new File mkdirs return else return catch Exception return toString public static File file String File new File return public static File file String base String File new File base return public class VMContext implements InternalContextAdapter HashMap vmproxyhash new HashMap HashMap localcontext new HashMap InternalContextAdapter innerContext null InternalContextAdapter wrappedContext null private boolean localcontextscope false public VMContext InternalContextAdapter inner RuntimeServices rsvc localcontextscope rsvc getBoolean RuntimeConstants VM_CONTEXT_LOCALSCOPE false wrappedContext inner innerContext inner getBaseContext public Context getInternalUserContext return innerContext getInternalUserContext public InternalContextAdapter getBaseContext return innerContext getBaseContext public void addVMProxyArg VMProxyArg vmpa throws MethodInvocationException String key vmpa getContextReference if vmpa isConstant localcontext put key vmpa getObject wrappedContext else vmproxyhash put key vmpa public Object put final String key final Object value return put key value localcontextscope public Object localPut final String key final Object value return put key value true protected Object put final String key final Object value final boolean forceLocal VMProxyArg vmpa VMProxyArg vmproxyhash get key if vmpa null return vmpa setObject wrappedContext value else if forceLocal return localcontext put key value else if localcontext containsKey key return localcontext put key value else return innerContext put key value public Object get String key Object null VMProxyArg vmpa VMProxyArg vmproxyhash get key if vmpa null vmpa getObject wrappedContext else localcontext get key if null innerContext get key return public boolean containsKey Object key return false public Object getKeys return vmproxyhash keySet toArray public Object remove Object key return vmproxyhash remove key public void pushCurrentTemplateName String innerContext pushCurrentTemplateName public void popCurrentTemplateName innerContext popCurrentTemplateName public String getCurrentTemplateName return innerContext getCurrentTemplateName public Object getTemplateNameStack return innerContext getTemplateNameStack public IntrospectionCacheData icacheGet Object key return innerContext icacheGet key public void icachePut Object key IntrospectionCacheData innerContext icachePut key public boolean getAllowRendering return innerContext getAllowRendering public void setAllowRendering boolean innerContext setAllowRendering public EventCartridge attachEventCartridge EventCartridge ec EventCartridge cartridge innerContext attachEventCartridge ec return cartridge public EventCartridge getEventCartridge return innerContext getEventCartridge public void setCurrentResource Resource innerContext setCurrentResource public Resource getCurrentResource return innerContext getCurrentResource public class PropertiesUtil public Properties load final String propertiesFile Properties properties null String templatePath Generator getInstance getTemplatePath try if templatePath null properties loadFromTemplatePath propertiesFile else properties loadFromClassPath propertiesFile catch RuntimeException throw catch Exception throw new RuntimeException getMessage return properties protected Properties loadFromTemplatePath final String propertiesFile throws Exception Properties properties new Properties String templatePath Generator getInstance getTemplatePath StringTokenizer st new StringTokenizer templatePath while st hasMoreTokens String templateDir st nextToken InputStream stream null try String fullPath propertiesFile if fullPath startsWith templateDir fullPath templateDir propertiesFile stream new FileInputStream fullPath properties load stream break finally if stream null stream close return properties protected Properties loadFromClassPath final String propertiesName throws Exception Properties properties new Properties ClassLoader classLoader this getClass getClassLoader InputStream inputStream null try String propertiesFile propertiesName startsWith propertiesName substring length propertiesName inputStream classLoader getResourceAsStream propertiesFile properties load inputStream finally if inputStream null inputStream close return properties public interface ParserTreeConstants public int JJTPROCESS public int JJTVOID public int JJTESCAPEDDIRECTIVE public int JJTESCAPE public int JJTCOMMENT public int JJTFLOATINGPOINTLITERAL public int JJTINTEGERLITERAL public int JJTSTRINGLITERAL public int JJTIDENTIFIER public int JJTWORD public int JJTDIRECTIVE public int JJTBLOCK public int JJTMAP public int JJTOBJECTARRAY public int JJTINTEGERRANGE public int JJTMETHOD public int JJTREFERENCE public int JJTTRUE public int JJTFALSE public int JJTTEXT public int JJTIFSTATEMENT public int JJTELSESTATEMENT public int JJTELSEIFSTATEMENT public int JJTSETDIRECTIVE public int JJTSTOP public int JJTEXPRESSION public int JJTASSIGNMENT public int JJTORNODE public int JJTANDNODE public int JJTEQNODE public int JJTNENODE public int JJTLTNODE public int JJTGTNODE public int JJTLENODE public int JJTGENODE public int JJTADDNODE public int JJTSUBTRACTNODE public int JJTMULNODE public int JJTDIVNODE public int JJTMODNODE public int JJTNOTNODE public String jjtNodeName public class ASTEscapedDirective extends SimpleNode public ASTEscapedDirective int id super id public ASTEscapedDirective Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public boolean render InternalContextAdapter context Writer writer throws IOException if context getAllowRendering writer write getFirstToken image return true public class ParserTokenManager implements ParserConstants private int fileDepth private int lparen private int rparen Stack stateStack new Stack public boolean debugPrint false private boolean inReference public boolean inDirective private boolean inComment public boolean inSet public boolean stateStackPop Hashtable try Hashtable stateStack pop catch EmptyStackException lparen SwitchTo DEFAULT return false if debugPrint System out println stateStack size Integer get intValue Integer get intValue lparen Integer get intValue rparen Integer get intValue SwitchTo Integer get intValue return true public boolean stateStackPush if debugPrint System out println stateStack size curLexState Hashtable new Hashtable put new Integer curLexState put new Integer lparen put new Integer rparen lparen stateStack push return true public void clearStateVars stateStack clear lparen rparen inReference false inDirective false inComment false inSet false return private void RPARENHandler boolean closed false if inComment closed true while closed if lparen if lparen rparen stateStackPop else rparen closed true else if stateStackPop break public java io PrintStream debugStream System out public void setDebugStream java io PrintStream ds debugStream ds private final int jjStopStringLiteralDfa_0 int pos long active0 switch pos case if active0 return if active0 jjmatchedKind return if active0 return if active0 return if active0 return if active0 return return case if active0 jjmatchedKind jjmatchedPos return if active0 return return case if active0 jjmatchedKind jjmatchedPos return return case if active0 return if active0 jjmatchedKind jjmatchedPos return return default return private final int jjStartNfa_0 int pos long active0 return jjMoveNfa_0 jjStopStringLiteralDfa_0 pos active0 pos private final int jjStopAtPos int pos int kind jjmatchedKind kind jjmatchedPos pos return pos private final int jjStartNfaWithStates_0 int pos int kind int state jjmatchedKind kind jjmatchedPos pos try curChar input_stream readChar catch java io IOException return pos return jjMoveNfa_0 state pos private final int jjMoveStringLiteralDfa0_0 switch curChar case jjmatchedKind return jjMoveStringLiteralDfa1_0 case return jjStopAtPos case return jjStopAtPos case return jjStopAtPos case return jjStopAtPos case return jjStopAtPos case return jjStartNfaWithStates_0 case return jjMoveStringLiteralDfa1_0 case return jjStopAtPos case return jjStopAtPos case return jjStartNfaWithStates_0 case return jjStopAtPos case return jjStopAtPos case return jjMoveStringLiteralDfa1_0 case return jjMoveStringLiteralDfa1_0 case return jjStartNfaWithStates_0 case return jjStopAtPos default return jjMoveNfa_0 private final int jjMoveStringLiteralDfa1_0 long active0 try curChar input_stream readChar catch java io IOException jjStopStringLiteralDfa_0 active0 return switch curChar case if active0 return jjStopAtPos break case if active0 return jjStartNfaWithStates_0 break case if active0 return jjStopAtPos break case return jjMoveStringLiteralDfa2_0 active0 case return jjMoveStringLiteralDfa2_0 active0 default break return jjStartNfa_0 active0 private final int jjMoveStringLiteralDfa2_0 long old0 long active0 if active0 old0 return jjStartNfa_0 old0 try curChar input_stream readChar catch java io IOException jjStopStringLiteralDfa_0 active0 return switch curChar case return jjMoveStringLiteralDfa3_0 active0 case return jjMoveStringLiteralDfa3_0 active0 default break return jjStartNfa_0 active0 private final int jjMoveStringLiteralDfa3_0 long old0 long active0 if active0 old0 return jjStartNfa_0 old0 try curChar input_stream readChar catch java io IOException jjStopStringLiteralDfa_0 active0 return switch curChar case if active0 return jjStartNfaWithStates_0 break case return jjMoveStringLiteralDfa4_0 active0 default break return jjStartNfa_0 active0 private final int jjMoveStringLiteralDfa4_0 long old0 long active0 if active0 old0 return jjStartNfa_0 old0 try curChar input_stream readChar catch java io IOException jjStopStringLiteralDfa_0 active0 return switch curChar case if active0 return jjStartNfaWithStates_0 break default break return jjStartNfa_0 active0 private final void jjCheckNAdd int state if jjrounds state jjround jjstateSet jjnewStateCnt state jjrounds state jjround private final void jjAddStates int start int end do jjstateSet jjnewStateCnt jjnextStates start while start end private final void jjCheckNAddTwoStates int state1 int state2 jjCheckNAdd state1 jjCheckNAdd state2 private final void jjCheckNAddStates int start int end do jjCheckNAdd jjnextStates start while start end private final void jjCheckNAddStates int start jjCheckNAdd jjnextStates start jjCheckNAdd jjnextStates start static final long jjbitVec0 static final long jjbitVec2 private final int jjMoveNfa_0 int startState int curPos int nextStates int startsAt jjnewStateCnt int jjstateSet startState int kind for if jjround ReInitRounds if curChar long curChar MatchLoop do switch jjstateSet case if if kind kind jjCheckNAddStates else if if kind kind jjCheckNAdd else if curChar jjCheckNAddStates else if curChar if kind kind jjCheckNAddTwoStates else if curChar jjCheckNAdd else if curChar if kind kind else if curChar jjstateSet jjnewStateCnt else if curChar jjstateSet jjnewStateCnt else if curChar jjstateSet jjnewStateCnt else if curChar jjstateSet jjnewStateCnt else if curChar jjCheckNAddStates else if curChar jjCheckNAddStates else if curChar jjstateSet jjnewStateCnt else if curChar if kind kind jjCheckNAddStates if if kind kind else if curChar jjstateSet jjnewStateCnt else if curChar if kind kind else if curChar if kind kind if curChar jjstateSet jjnewStateCnt break case if jjCheckNAddTwoStates else if curChar jjCheckNAdd if jjCheckNAddTwoStates if if kind kind jjCheckNAddTwoStates break case if jjCheckNAddStates break case if kind kind break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if break if kind kind jjCheckNAdd break case if curChar jjCheckNAddStates break case if jjCheckNAddStates break case if curChar kind kind break case if jjCheckNAddStates break case if jjCheckNAddStates break case if jjCheckNAddStates break case if jjstateSet jjnewStateCnt break case if jjCheckNAdd break case if curChar jjAddStates break case if curChar jjCheckNAddStates break case if curChar jjCheckNAddStates break case if jjCheckNAddStates break case if curChar jjAddStates break case if curChar jjCheckNAddStates break case if curChar kind kind break case if kind kind break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjCheckNAdd break case if break if kind kind jjCheckNAddTwoStates break case if jjCheckNAdd break case if break if kind kind jjCheckNAdd break case if break if kind kind jjstateSet jjnewStateCnt break case if jjAddStates break case if curChar kind kind break case if curChar jjCheckNAddTwoStates break case if curChar kind kind break case if curChar break if kind kind jjCheckNAddTwoStates break case if curChar jjCheckNAddStates break case if break if kind kind jjCheckNAddTwoStates break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if jjCheckNAddTwoStates break case if curChar break if kind kind jjCheckNAddTwoStates break case if break if kind kind jjCheckNAddTwoStates break case if jjCheckNAdd break case if break if kind kind jjCheckNAdd break case if jjCheckNAddTwoStates break case if jjCheckNAdd break case if break if kind kind jjCheckNAdd break case if break if kind kind jjCheckNAddStates break default break while startsAt else if curChar long curChar MatchLoop do switch jjstateSet case if if kind kind jjCheckNAdd else if curChar jjCheckNAddStates else if curChar jjstateSet jjnewStateCnt else if curChar jjstateSet jjnewStateCnt if curChar jjAddStates else if curChar jjAddStates else if curChar jjAddStates else if curChar jjstateSet jjnewStateCnt else if curChar jjstateSet jjnewStateCnt else if curChar jjstateSet jjnewStateCnt break case if kind kind break case if jjCheckNAddStates break case if curChar jjAddStates break case if jjCheckNAddStates break case jjAddStates break case if curChar jjAddStates break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if jjAddStates break case case if break if kind kind jjCheckNAdd break case if curChar jjstateSet jjnewStateCnt break case case if jjCheckNAddTwoStates break case if curChar kind kind break case if curChar jjCheckNAddStates break case if curChar jjCheckNAddTwoStates break case if curChar jjCheckNAddTwoStates break case if curChar jjAddStates break case if curChar jjAddStates break case if curChar kind kind break case if curChar kind kind break case if curChar jjAddStates break case if curChar kind kind break case if curChar kind kind break case if curChar jjAddStates break case if curChar kind kind break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if jjAddStates break case if jjAddStates break default break while startsAt else int hiByte int curChar int i1 hiByte long l1 hiByte int i2 curChar long l2 curChar MatchLoop do switch jjstateSet case if jjCanMove_0 hiByte i1 i2 l1 l2 kind kind break case if jjCanMove_0 hiByte i1 i2 l1 l2 jjAddStates break case if jjCanMove_0 hiByte i1 i2 l1 l2 jjAddStates break default break while startsAt if kind jjmatchedKind kind jjmatchedPos curPos kind curPos if jjnewStateCnt startsAt jjnewStateCnt startsAt return curPos try curChar input_stream readChar catch java io IOException return curPos private final int jjStopStringLiteralDfa_6 int pos long active0 switch pos case if active0 return return default return private final int jjStartNfa_6 int pos long active0 return jjMoveNfa_6 jjStopStringLiteralDfa_6 pos active0 pos private final int jjStartNfaWithStates_6 int pos int kind int state jjmatchedKind kind jjmatchedPos pos try curChar input_stream readChar catch java io IOException return pos return jjMoveNfa_6 state pos private final int jjMoveStringLiteralDfa0_6 switch curChar case jjmatchedKind return jjMoveStringLiteralDfa1_6 case return jjMoveStringLiteralDfa1_6 default return jjMoveNfa_6 private final int jjMoveStringLiteralDfa1_6 long active0 try curChar input_stream readChar catch java io IOException jjStopStringLiteralDfa_6 active0 return switch curChar case if active0 return jjStopAtPos else if active0 return jjStopAtPos break case if active0 return jjStartNfaWithStates_6 break default break return jjStartNfa_6 active0 private final int jjMoveNfa_6 int startState int curPos int nextStates int startsAt jjnewStateCnt int jjstateSet startState int kind for if jjround ReInitRounds if curChar long curChar MatchLoop do switch jjstateSet case if curChar if kind kind jjCheckNAddTwoStates else if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjCheckNAddTwoStates break case if curChar kind kind break case if curChar break if kind kind jjCheckNAddTwoStates break default break while startsAt else if curChar long curChar MatchLoop do switch jjstateSet case if curChar jjCheckNAddStates break case if kind kind break case if curChar jjCheckNAddTwoStates break case if curChar jjCheckNAddTwoStates break case if curChar jjAddStates break default break while startsAt else int hiByte int curChar int i1 hiByte long l1 hiByte int i2 curChar long l2 curChar MatchLoop do switch jjstateSet case if jjCanMove_0 hiByte i1 i2 l1 l2 kind kind break default break while startsAt if kind jjmatchedKind kind jjmatchedPos curPos kind curPos if jjnewStateCnt startsAt jjnewStateCnt startsAt return curPos try curChar input_stream readChar catch java io IOException return curPos private final int jjStopStringLiteralDfa_4 int pos long active0 switch pos case if active0 return return default return private final int jjStartNfa_4 int pos long active0 return jjMoveNfa_4 jjStopStringLiteralDfa_4 pos active0 pos private final int jjStartNfaWithStates_4 int pos int kind int state jjmatchedKind kind jjmatchedPos pos try curChar input_stream readChar catch java io IOException return pos return jjMoveNfa_4 state pos private final int jjMoveStringLiteralDfa0_4 switch curChar case jjmatchedKind return jjMoveStringLiteralDfa1_4 default return jjMoveNfa_4 private final int jjMoveStringLiteralDfa1_4 long active0 try curChar input_stream readChar catch java io IOException jjStopStringLiteralDfa_4 active0 return switch curChar case if active0 return jjStopAtPos break case if active0 return jjStartNfaWithStates_4 break default break return jjStartNfa_4 active0 private final int jjMoveNfa_4 int startState int curPos int nextStates int startsAt jjnewStateCnt int jjstateSet startState int kind for if jjround ReInitRounds if curChar long curChar MatchLoop do switch jjstateSet case if if kind kind jjCheckNAddStates else if curChar jjCheckNAddStates else if curChar if kind kind jjCheckNAddTwoStates else if curChar jjCheckNAdd else if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar jjCheckNAdd break case if break if kind kind jjCheckNAddTwoStates break case if jjCheckNAdd break case if break if kind kind jjCheckNAdd break case if break if kind kind jjstateSet jjnewStateCnt break case if jjAddStates break case if curChar kind kind break case if curChar jjCheckNAddTwoStates break case if curChar kind kind break case if curChar break if kind kind jjCheckNAddTwoStates break case if jjCheckNAddStates break case if kind kind break case if curChar kind kind break case case if curChar jjCheckNAdd break case if jjCheckNAddStates break case if kind kind break case if curChar kind kind break case case if curChar jjCheckNAdd break case if jjCheckNAddStates break case if jjCheckNAddStates break case if curChar jjCheckNAddStates break case if break if kind kind jjCheckNAddTwoStates break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if jjCheckNAddTwoStates break case if curChar break if kind kind jjCheckNAddTwoStates break case if break if kind kind jjCheckNAddTwoStates break case if jjCheckNAdd break case if break if kind kind jjCheckNAdd break case if jjCheckNAddTwoStates break case if jjCheckNAdd break case if break if kind kind jjCheckNAdd break case if break if kind kind jjCheckNAddStates break default break while startsAt else if curChar long curChar MatchLoop do switch jjstateSet case if if kind kind jjCheckNAdd else if curChar jjAddStates else if curChar jjCheckNAddStates if curChar jjAddStates else if curChar jjstateSet jjnewStateCnt else if curChar jjstateSet jjnewStateCnt else if curChar jjstateSet jjnewStateCnt break case if kind kind break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if jjAddStates break case case if break if kind kind jjCheckNAdd break case if curChar jjstateSet jjnewStateCnt break case case if jjCheckNAddTwoStates break case if curChar kind kind break case if curChar jjCheckNAddStates break case if curChar jjCheckNAddTwoStates break case if curChar jjCheckNAddTwoStates break case if curChar jjAddStates break case if curChar jjAddStates break case if curChar break if kind kind jjCheckNAddStates break case if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar break if kind kind jjCheckNAddStates break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar jjAddStates break case if curChar break if kind kind jjCheckNAddStates break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar break if kind kind jjCheckNAddStates break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if jjAddStates break case if jjAddStates break default break while startsAt else int hiByte int curChar int i1 hiByte long l1 hiByte int i2 curChar long l2 curChar MatchLoop do switch jjstateSet case if jjCanMove_0 hiByte i1 i2 l1 l2 kind kind break default break while startsAt if kind jjmatchedKind kind jjmatchedPos curPos kind curPos if jjnewStateCnt startsAt jjnewStateCnt startsAt return curPos try curChar input_stream readChar catch java io IOException return curPos private final int jjStopStringLiteralDfa_3 int pos long active0 switch pos case if active0 return if active0 return return default return private final int jjStartNfa_3 int pos long active0 return jjMoveNfa_3 jjStopStringLiteralDfa_3 pos active0 pos private final int jjStartNfaWithStates_3 int pos int kind int state jjmatchedKind kind jjmatchedPos pos try curChar input_stream readChar catch java io IOException return pos return jjMoveNfa_3 state pos private final int jjMoveStringLiteralDfa0_3 switch curChar case jjmatchedKind return jjMoveStringLiteralDfa1_3 case jjmatchedKind return jjMoveStringLiteralDfa1_3 default return jjMoveNfa_3 private final int jjMoveStringLiteralDfa1_3 long active0 try curChar input_stream readChar catch java io IOException jjStopStringLiteralDfa_3 active0 return switch curChar case if active0 return jjStopAtPos break case if active0 return jjStartNfaWithStates_3 break case if active0 return jjStartNfaWithStates_3 break default break return jjStartNfa_3 active0 private final int jjMoveNfa_3 int startState int curPos int nextStates int startsAt jjnewStateCnt int jjstateSet startState int kind for if jjround ReInitRounds if curChar long curChar MatchLoop do switch jjstateSet case if curChar jjstateSet jjnewStateCnt break case if if kind kind jjCheckNAdd else if curChar jjCheckNAddStates else if curChar if kind kind jjCheckNAddTwoStates if jjCheckNAddTwoStates break case if curChar jjCheckNAddTwoStates if curChar if kind kind break case if curChar jjCheckNAddTwoStates else if curChar jjstateSet jjnewStateCnt if curChar if kind kind break case if jjCheckNAddTwoStates break case if curChar jjCheckNAddTwoStates break case if curChar jjAddStates break case if curChar kind kind break case if break if kind kind jjCheckNAdd break case if curChar jjstateSet jjnewStateCnt break case if break if kind kind jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjCheckNAddTwoStates break case if curChar kind kind break case if curChar break if kind kind jjCheckNAddTwoStates break case if curChar jjCheckNAddStates break case if curChar jjstateSet jjnewStateCnt break case if kind kind break default break while startsAt else if curChar long curChar MatchLoop do switch jjstateSet case if curChar jjstateSet jjnewStateCnt else if curChar jjstateSet jjnewStateCnt break case if if kind kind jjCheckNAdd else if curChar jjCheckNAddStates if curChar jjAddStates break case if curChar jjAddStates if curChar jjCheckNAddTwoStates if curChar jjCheckNAddTwoStates break case if curChar jjCheckNAddTwoStates if curChar jjCheckNAddTwoStates if curChar jjstateSet jjnewStateCnt break case if curChar jjCheckNAddTwoStates break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar jjCheckNAddTwoStates break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if break if kind kind jjCheckNAdd break case if curChar jjAddStates break case case if break if kind kind jjCheckNAdd break case if curChar jjCheckNAddTwoStates break case if curChar jjCheckNAddTwoStates break case if curChar jjAddStates break case if kind kind break default break while startsAt else int hiByte int curChar int i1 hiByte long l1 hiByte int i2 curChar long l2 curChar MatchLoop do switch jjstateSet case case if jjCanMove_0 hiByte i1 i2 l1 l2 break if kind kind jjCheckNAdd break case if jjCanMove_0 hiByte i1 i2 l1 l2 kind kind break default break while startsAt if kind jjmatchedKind kind jjmatchedPos curPos kind curPos if jjnewStateCnt startsAt jjnewStateCnt startsAt return curPos try curChar input_stream readChar catch java io IOException return curPos private final int jjStopStringLiteralDfa_7 int pos long active0 switch pos case if active0 return return default return private final int jjStartNfa_7 int pos long active0 return jjMoveNfa_7 jjStopStringLiteralDfa_7 pos active0 pos private final int jjStartNfaWithStates_7 int pos int kind int state jjmatchedKind kind jjmatchedPos pos try curChar input_stream readChar catch java io IOException return pos return jjMoveNfa_7 state pos private final int jjMoveStringLiteralDfa0_7 switch curChar case jjmatchedKind return jjMoveStringLiteralDfa1_7 case return jjMoveStringLiteralDfa1_7 default return jjMoveNfa_7 private final int jjMoveStringLiteralDfa1_7 long active0 try curChar input_stream readChar catch java io IOException jjStopStringLiteralDfa_7 active0 return switch curChar case if active0 return jjStopAtPos else if active0 return jjStopAtPos break case if active0 return jjStartNfaWithStates_7 break default break return jjStartNfa_7 active0 private final int jjMoveNfa_7 int startState int curPos int nextStates int startsAt jjnewStateCnt int jjstateSet startState int kind for if jjround ReInitRounds if curChar long curChar MatchLoop do switch jjstateSet case if curChar if kind kind jjCheckNAddTwoStates else if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjCheckNAddTwoStates break case if curChar kind kind break case if curChar break if kind kind jjCheckNAddTwoStates break default break while startsAt else if curChar long curChar MatchLoop do switch jjstateSet case if curChar jjCheckNAddStates break case if kind kind break case if curChar jjCheckNAddTwoStates break case if curChar jjCheckNAddTwoStates break case if curChar jjAddStates break default break while startsAt else int hiByte int curChar int i1 hiByte long l1 hiByte int i2 curChar long l2 curChar MatchLoop do switch jjstateSet case if jjCanMove_0 hiByte i1 i2 l1 l2 kind kind break default break while startsAt if kind jjmatchedKind kind jjmatchedPos curPos kind curPos if jjnewStateCnt startsAt jjnewStateCnt startsAt return curPos try curChar input_stream readChar catch java io IOException return curPos private final int jjStopStringLiteralDfa_8 int pos long active0 switch pos case if active0 return return default return private final int jjStartNfa_8 int pos long active0 return jjMoveNfa_8 jjStopStringLiteralDfa_8 pos active0 pos private final int jjStartNfaWithStates_8 int pos int kind int state jjmatchedKind kind jjmatchedPos pos try curChar input_stream readChar catch java io IOException return pos return jjMoveNfa_8 state pos private final int jjMoveStringLiteralDfa0_8 switch curChar case jjmatchedKind return jjMoveStringLiteralDfa1_8 default return jjMoveNfa_8 private final int jjMoveStringLiteralDfa1_8 long active0 try curChar input_stream readChar catch java io IOException jjStopStringLiteralDfa_8 active0 return switch curChar case if active0 return jjStopAtPos break case if active0 return jjStartNfaWithStates_8 break default break return jjStartNfa_8 active0 private final int jjMoveNfa_8 int startState int curPos int nextStates int startsAt jjnewStateCnt int jjstateSet startState int kind for if jjround ReInitRounds if curChar long curChar MatchLoop do switch jjstateSet case if if kind kind else if curChar if kind kind jjCheckNAddTwoStates else if curChar jjstateSet jjnewStateCnt if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if kind kind break case if curChar jjstateSet jjnewStateCnt break case if kind kind break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjCheckNAddTwoStates break case if curChar kind kind break case if curChar break if kind kind jjCheckNAddTwoStates break default break while startsAt else if curChar long curChar MatchLoop do switch jjstateSet case if curChar jjCheckNAddStates break case if kind kind break case if curChar jjCheckNAddTwoStates break case if curChar jjCheckNAddTwoStates break case if curChar jjAddStates break default break while startsAt else int hiByte int curChar int i1 hiByte long l1 hiByte int i2 curChar long l2 curChar MatchLoop do switch jjstateSet case if jjCanMove_0 hiByte i1 i2 l1 l2 kind kind break default break while startsAt if kind jjmatchedKind kind jjmatchedPos curPos kind curPos if jjnewStateCnt startsAt jjnewStateCnt startsAt return curPos try curChar input_stream readChar catch java io IOException return curPos private final int jjStopStringLiteralDfa_5 int pos long active0 long active1 switch pos case if active0 return if active0 jjmatchedKind return return case if active0 return if active0 jjmatchedKind jjmatchedPos return return case if active0 jjmatchedKind jjmatchedPos return return case if active0 jjmatchedKind jjmatchedPos return if active0 return return default return private final int jjStartNfa_5 int pos long active0 long active1 return jjMoveNfa_5 jjStopStringLiteralDfa_5 pos active0 active1 pos private final int jjStartNfaWithStates_5 int pos int kind int state jjmatchedKind kind jjmatchedPos pos try curChar input_stream readChar catch java io IOException return pos return jjMoveNfa_5 state pos private final int jjMoveStringLiteralDfa0_5 switch curChar case jjmatchedKind return jjMoveStringLiteralDfa1_5 case return jjMoveStringLiteralDfa1_5 case return jjMoveStringLiteralDfa1_5 case return jjStopAtPos case return jjStopAtPos default return jjMoveNfa_5 private final int jjMoveStringLiteralDfa1_5 long active0 try curChar input_stream readChar catch java io IOException jjStopStringLiteralDfa_5 active0 return switch curChar case if active0 return jjStopAtPos break case if active0 return jjStartNfaWithStates_5 break case return jjMoveStringLiteralDfa2_5 active0 case return jjMoveStringLiteralDfa2_5 active0 default break return jjStartNfa_5 active0 private final int jjMoveStringLiteralDfa2_5 long old0 long active0 if active0 old0 return jjStartNfa_5 old0 try curChar input_stream readChar catch java io IOException jjStopStringLiteralDfa_5 active0 return switch curChar case return jjMoveStringLiteralDfa3_5 active0 case return jjMoveStringLiteralDfa3_5 active0 default break return jjStartNfa_5 active0 private final int jjMoveStringLiteralDfa3_5 long old0 long active0 if active0 old0 return jjStartNfa_5 old0 try curChar input_stream readChar catch java io IOException jjStopStringLiteralDfa_5 active0 return switch curChar case if active0 return jjStartNfaWithStates_5 break case return jjMoveStringLiteralDfa4_5 active0 default break return jjStartNfa_5 active0 private final int jjMoveStringLiteralDfa4_5 long old0 long active0 if active0 old0 return jjStartNfa_5 old0 try curChar input_stream readChar catch java io IOException jjStopStringLiteralDfa_5 active0 return switch curChar case if active0 return jjStartNfaWithStates_5 break default break return jjStartNfa_5 active0 private final int jjMoveNfa_5 int startState int curPos int nextStates int startsAt jjnewStateCnt int jjstateSet startState int kind for if jjround ReInitRounds if curChar long curChar MatchLoop do switch jjstateSet case if curChar if kind kind jjCheckNAddTwoStates else if curChar jjstateSet jjnewStateCnt else if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if kind kind break case if curChar jjstateSet jjnewStateCnt break case if break if kind kind jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjCheckNAddTwoStates break case if curChar kind kind break case if curChar break if kind kind jjCheckNAddTwoStates break default break while startsAt else if curChar long curChar MatchLoop do switch jjstateSet case if if kind kind jjCheckNAdd else if curChar jjCheckNAddStates break case if kind kind break case case if break if kind kind jjCheckNAdd break case if kind kind break case if curChar jjCheckNAddStates break case if curChar jjCheckNAddTwoStates break case if curChar jjCheckNAddTwoStates break case if curChar jjAddStates break default break while startsAt else int hiByte int curChar int i1 hiByte long l1 hiByte int i2 curChar long l2 curChar MatchLoop do switch jjstateSet case if jjCanMove_0 hiByte i1 i2 l1 l2 kind kind break default break while startsAt if kind jjmatchedKind kind jjmatchedPos curPos kind curPos if jjnewStateCnt startsAt jjnewStateCnt startsAt return curPos try curChar input_stream readChar catch java io IOException return curPos private final int jjStopStringLiteralDfa_1 int pos long active0 switch pos case if active0 return if active0 return if active0 jjmatchedKind return return case if active0 return if active0 jjmatchedKind jjmatchedPos return return case if active0 jjmatchedKind jjmatchedPos return return case if active0 return if active0 jjmatchedKind jjmatchedPos return return default return private final int jjStartNfa_1 int pos long active0 return jjMoveNfa_1 jjStopStringLiteralDfa_1 pos active0 pos private final int jjStartNfaWithStates_1 int pos int kind int state jjmatchedKind kind jjmatchedPos pos try curChar input_stream readChar catch java io IOException return pos return jjMoveNfa_1 state pos private final int jjMoveStringLiteralDfa0_1 switch curChar case jjmatchedKind return jjMoveStringLiteralDfa1_1 case return jjStopAtPos case return jjStopAtPos case return jjMoveStringLiteralDfa1_1 case return jjStopAtPos case return jjStopAtPos case return jjStopAtPos case return jjMoveStringLiteralDfa1_1 case return jjMoveStringLiteralDfa1_1 case return jjStopAtPos case return jjStopAtPos default return jjMoveNfa_1 private final int jjMoveStringLiteralDfa1_1 long active0 try curChar input_stream readChar catch java io IOException jjStopStringLiteralDfa_1 active0 return switch curChar case if active0 return jjStopAtPos break case if active0 return jjStartNfaWithStates_1 break case if active0 return jjStopAtPos break case return jjMoveStringLiteralDfa2_1 active0 case return jjMoveStringLiteralDfa2_1 active0 default break return jjStartNfa_1 active0 private final int jjMoveStringLiteralDfa2_1 long old0 long active0 if active0 old0 return jjStartNfa_1 old0 try curChar input_stream readChar catch java io IOException jjStopStringLiteralDfa_1 active0 return switch curChar case return jjMoveStringLiteralDfa3_1 active0 case return jjMoveStringLiteralDfa3_1 active0 default break return jjStartNfa_1 active0 private final int jjMoveStringLiteralDfa3_1 long old0 long active0 if active0 old0 return jjStartNfa_1 old0 try curChar input_stream readChar catch java io IOException jjStopStringLiteralDfa_1 active0 return switch curChar case if active0 return jjStartNfaWithStates_1 break case return jjMoveStringLiteralDfa4_1 active0 default break return jjStartNfa_1 active0 private final int jjMoveStringLiteralDfa4_1 long old0 long active0 if active0 old0 return jjStartNfa_1 old0 try curChar input_stream readChar catch java io IOException jjStopStringLiteralDfa_1 active0 return switch curChar case if active0 return jjStartNfaWithStates_1 break default break return jjStartNfa_1 active0 private final int jjMoveNfa_1 int startState int curPos int nextStates int startsAt jjnewStateCnt int jjstateSet startState int kind for if jjround ReInitRounds if curChar long curChar MatchLoop do switch jjstateSet case if if kind kind jjCheckNAddStates else if if kind kind jjCheckNAdd else if curChar jjCheckNAddTwoStates else if curChar jjCheckNAddStates else if curChar if kind kind jjCheckNAddTwoStates else if curChar jjCheckNAddStates else if curChar jjCheckNAddStates else if curChar jjstateSet jjnewStateCnt break case case if break if kind kind jjCheckNAddTwoStates break case if curChar jjstateSet jjnewStateCnt break case if kind kind break case if curChar jjstateSet jjnewStateCnt break case if break if kind kind jjCheckNAdd break case if curChar jjCheckNAddStates break case if jjCheckNAddStates break case if curChar kind kind break case if jjCheckNAddStates break case if jjCheckNAddStates break case if jjCheckNAddStates break case if jjstateSet jjnewStateCnt break case if jjCheckNAdd break case if curChar jjAddStates break case if curChar jjCheckNAddStates break case if curChar jjCheckNAddStates break case if jjCheckNAddStates break case if curChar jjAddStates break case if curChar jjCheckNAddStates break case if curChar kind kind break case if break if kind kind jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjCheckNAddTwoStates break case if curChar kind kind break case if curChar break if kind kind jjCheckNAddTwoStates break case if curChar jjCheckNAddStates break case if break if kind kind jjCheckNAddTwoStates break case if curChar kind kind break case if curChar jjstateSet jjnewStateCnt break case if jjCheckNAddTwoStates break case if curChar break if kind kind jjCheckNAddTwoStates break case if break if kind kind jjCheckNAddTwoStates break case if jjCheckNAdd break case if break if kind kind jjCheckNAdd break case if curChar jjCheckNAdd break case if jjCheckNAdd break case if break if kind kind jjCheckNAdd break case if jjCheckNAddTwoStates break case if jjCheckNAdd break case if break if kind kind jjCheckNAdd break case if break if kind kind jjCheckNAddStates break case if curChar jjCheckNAddTwoStates break default break while startsAt else if curChar long curChar MatchLoop do switch jjstateSet case if if kind kind jjCheckNAdd else if curChar jjCheckNAddStates break case if kind kind break case if kind kind break case if jjCheckNAddStates break case if curChar jjAddStates break case if jjCheckNAddStates break case jjAddStates break case if curChar jjAddStates break case case if break if kind kind jjCheckNAdd break case if curChar jjCheckNAddStates break case if curChar jjCheckNAddTwoStates break case if curChar jjCheckNAddTwoStates break case if curChar jjAddStates break case if jjAddStates break case if jjAddStates break case if jjAddStates break default break while startsAt else int hiByte int curChar int i1 hiByte long l1 hiByte int i2 curChar long l2 curChar MatchLoop do switch jjstateSet case if jjCanMove_0 hiByte i1 i2 l1 l2 kind kind break case if jjCanMove_0 hiByte i1 i2 l1 l2 jjAddStates break case if jjCanMove_0 hiByte i1 i2 l1 l2 jjAddStates break default break while startsAt if kind jjmatchedKind kind jjmatchedPos curPos kind curPos if jjnewStateCnt startsAt jjnewStateCnt startsAt return curPos try curChar input_stream readChar catch java io IOException return curPos private final int jjStopStringLiteralDfa_2 int pos long active0 long active1 switch pos case if active0 return if active0 jjmatchedKind return return case if active0 return if active0 jjmatchedKind jjmatchedPos return return case if active0 jjmatchedKind jjmatchedPos return return case if active0 jjmatchedKind jjmatchedPos return if active0 return return default return private final int jjStartNfa_2 int pos long active0 long active1 return jjMoveNfa_2 jjStopStringLiteralDfa_2 pos active0 active1 pos private final int jjStartNfaWithStates_2 int pos int kind int state jjmatchedKind kind jjmatchedPos pos try curChar input_stream readChar catch java io IOException return pos return jjMoveNfa_2 state pos private final int jjMoveStringLiteralDfa0_2 switch curChar case jjmatchedKind return jjMoveStringLiteralDfa1_2 case return jjStopAtPos case return jjMoveStringLiteralDfa1_2 case return jjMoveStringLiteralDfa1_2 case return jjStopAtPos case return jjStopAtPos default return jjMoveNfa_2 private final int jjMoveStringLiteralDfa1_2 long active0 try curChar input_stream readChar catch java io IOException jjStopStringLiteralDfa_2 active0 return switch curChar case if active0 return jjStopAtPos break case if active0 return jjStartNfaWithStates_2 break case return jjMoveStringLiteralDfa2_2 active0 case return jjMoveStringLiteralDfa2_2 active0 default break return jjStartNfa_2 active0 private final int jjMoveStringLiteralDfa2_2 long old0 long active0 if active0 old0 return jjStartNfa_2 old0 try curChar input_stream readChar catch java io IOException jjStopStringLiteralDfa_2 active0 return switch curChar case return jjMoveStringLiteralDfa3_2 active0 case return jjMoveStringLiteralDfa3_2 active0 default break return jjStartNfa_2 active0 private final int jjMoveStringLiteralDfa3_2 long old0 long active0 if active0 old0 return jjStartNfa_2 old0 try curChar input_stream readChar catch java io IOException jjStopStringLiteralDfa_2 active0 return switch curChar case if active0 return jjStartNfaWithStates_2 break case return jjMoveStringLiteralDfa4_2 active0 default break return jjStartNfa_2 active0 private final int jjMoveStringLiteralDfa4_2 long old0 long active0 if active0 old0 return jjStartNfa_2 old0 try curChar input_stream readChar catch java io IOException jjStopStringLiteralDfa_2 active0 return switch curChar case if active0 return jjStartNfaWithStates_2 break default break return jjStartNfa_2 active0 private final int jjMoveNfa_2 int startState int curPos int nextStates int startsAt jjnewStateCnt int jjstateSet startState int kind for if jjround ReInitRounds if curChar long curChar MatchLoop do switch jjstateSet case if curChar if kind kind jjCheckNAddTwoStates else if curChar jjstateSet jjnewStateCnt else if curChar jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if kind kind break case if curChar jjstateSet jjnewStateCnt break case if break if kind kind jjstateSet jjnewStateCnt break case if curChar jjstateSet jjnewStateCnt break case if curChar kind kind break case if curChar jjCheckNAddTwoStates break case if curChar kind kind break case if curChar break if kind kind jjCheckNAddTwoStates break default break while startsAt else if curChar long curChar MatchLoop do switch jjstateSet case if if kind kind jjCheckNAdd else if curChar jjCheckNAddStates break case if kind kind break case case if break if kind kind jjCheckNAdd break case if kind kind break case if curChar jjCheckNAddStates break case if curChar jjCheckNAddTwoStates break case if curChar jjCheckNAddTwoStates break case if curChar jjAddStates break default break while startsAt else int hiByte int curChar int i1 hiByte long l1 hiByte int i2 curChar long l2 curChar MatchLoop do switch jjstateSet case if jjCanMove_0 hiByte i1 i2 l1 l2 kind kind break default break while startsAt if kind jjmatchedKind kind jjmatchedPos curPos kind curPos if jjnewStateCnt startsAt jjnewStateCnt startsAt return curPos try curChar input_stream readChar catch java io IOException return curPos static final int jjnextStates private static final boolean jjCanMove_0 int hiByte int i1 int i2 long l1 long l2 switch hiByte case return jjbitVec2 i2 l2 default if jjbitVec0 i1 l1 return true return false public static final String jjstrLiteralImages null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null null public static final String lexStateNames public static final int jjnewLexState static final long jjtoToken static final long jjtoSkip static final long jjtoSpecial static final long jjtoMore protected CharStream input_stream private final int jjrounds new int private final int jjstateSet new int StringBuffer image int jjimageLen int lengthOfMatch protected char curChar public ParserTokenManager CharStream stream input_stream stream public ParserTokenManager CharStream stream int lexState this stream SwitchTo lexState public void ReInit CharStream stream jjmatchedPos jjnewStateCnt curLexState defaultLexState input_stream stream ReInitRounds private final void ReInitRounds int jjround for jjrounds public void ReInit CharStream stream int lexState ReInit stream SwitchTo lexState public void SwitchTo int lexState if lexState lexState throw new TokenMgrError lexState TokenMgrError INVALID_LEXICAL_STATE else curLexState lexState protected Token jjFillToken Token Token newToken jjmatchedKind kind jjmatchedKind String im jjstrLiteralImages jjmatchedKind image im null input_stream GetImage im beginLine input_stream getBeginLine beginColumn input_stream getBeginColumn endLine input_stream getEndLine endColumn input_stream getEndColumn return int curLexState int defaultLexState int jjnewStateCnt int jjround int jjmatchedPos int jjmatchedKind public Token getNextToken int kind Token specialToken null Token matchedToken int curPos EOFLoop for try curChar input_stream BeginToken catch java io IOException jjmatchedKind matchedToken jjFillToken matchedToken specialToken specialToken return matchedToken image null jjimageLen for switch curLexState case jjmatchedKind jjmatchedPos curPos jjMoveStringLiteralDfa0_0 break case jjmatchedKind jjmatchedPos curPos jjMoveStringLiteralDfa0_1 if jjmatchedPos jjmatchedKind jjmatchedKind break case jjmatchedKind jjmatchedPos curPos jjMoveStringLiteralDfa0_2 if jjmatchedPos jjmatchedKind jjmatchedKind break case jjmatchedKind jjmatchedPos curPos jjMoveStringLiteralDfa0_3 break case jjmatchedKind jjmatchedPos curPos jjMoveStringLiteralDfa0_4 if jjmatchedPos jjmatchedKind jjmatchedKind break case jjmatchedKind jjmatchedPos curPos jjMoveStringLiteralDfa0_5 if jjmatchedPos jjmatchedKind jjmatchedKind break case jjmatchedKind jjmatchedPos curPos jjMoveStringLiteralDfa0_6 if jjmatchedPos jjmatchedKind jjmatchedKind break case jjmatchedKind jjmatchedPos curPos jjMoveStringLiteralDfa0_7 if jjmatchedPos jjmatchedKind jjmatchedKind break case jjmatchedKind jjmatchedPos curPos jjMoveStringLiteralDfa0_8 if jjmatchedPos jjmatchedKind jjmatchedKind break if jjmatchedKind if jjmatchedPos curPos input_stream backup curPos jjmatchedPos if jjtoToken jjmatchedKind jjmatchedKind matchedToken jjFillToken matchedToken specialToken specialToken TokenLexicalActions matchedToken if jjnewLexState jjmatchedKind curLexState jjnewLexState jjmatchedKind return matchedToken else if jjtoSkip jjmatchedKind jjmatchedKind if jjtoSpecial jjmatchedKind jjmatchedKind matchedToken jjFillToken if specialToken null specialToken matchedToken else matchedToken specialToken specialToken specialToken specialToken next matchedToken SkipLexicalActions matchedToken else SkipLexicalActions null if jjnewLexState jjmatchedKind curLexState jjnewLexState jjmatchedKind continue EOFLoop MoreLexicalActions if jjnewLexState jjmatchedKind curLexState jjnewLexState jjmatchedKind curPos jjmatchedKind try curChar input_stream readChar continue catch java io IOException e1 int error_line input_stream getEndLine int error_column input_stream getEndColumn String error_after null boolean EOFSeen false try input_stream readChar input_stream backup catch java io IOException e1 EOFSeen true error_after curPos input_stream GetImage if curChar curChar error_line error_column else error_column if EOFSeen input_stream backup error_after curPos input_stream GetImage throw new TokenMgrError EOFSeen curLexState error_line error_column error_after curChar TokenMgrError LEXICAL_ERROR void SkipLexicalActions Token matchedToken switch jjmatchedKind case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen lengthOfMatch jjmatchedPos input_stream backup inReference false if debugPrint System out print stateStackPop break case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen lengthOfMatch jjmatchedPos if debugPrint System out print input_stream backup inDirective false stateStackPop break default break void MoreLexicalActions jjimageLen lengthOfMatch jjmatchedPos switch jjmatchedKind case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen jjimageLen if inComment if curLexState REFERENCE inReference false stateStackPop inReference true if debugPrint System out print REFERENCE stateStackPush SwitchTo REFERENCE break case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen jjimageLen if inComment if curLexState REFERENCE inReference false stateStackPop inReference true if debugPrint System out print REFERENCE stateStackPush SwitchTo REFERENCE break case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen jjimageLen input_stream backup inComment true stateStackPush SwitchTo IN_FORMAL_COMMENT break case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen jjimageLen inComment true stateStackPush SwitchTo IN_MULTI_LINE_COMMENT break case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen jjimageLen if inComment if curLexState REFERENCE curLexState REFMODIFIER inReference false stateStackPop inDirective true if debugPrint System out print DIRECTIVE stateStackPush SwitchTo PRE_DIRECTIVE break default break void TokenLexicalActions Token matchedToken switch jjmatchedKind case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen lengthOfMatch jjmatchedPos if inComment lparen if curLexState REFMODIFIER SwitchTo REFMOD2 break case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen lengthOfMatch jjmatchedPos RPARENHandler break case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen lengthOfMatch jjmatchedPos SwitchTo REFERENCE break case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen lengthOfMatch jjmatchedPos if inComment inDirective true if debugPrint System out print DIRECTIVE stateStackPush inSet true SwitchTo DIRECTIVE if inComment lparen if curLexState REFMODIFIER SwitchTo REFMOD2 break case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen lengthOfMatch jjmatchedPos if inComment if curLexState REFERENCE inReference false stateStackPop inComment true stateStackPush SwitchTo IN_SINGLE_LINE_COMMENT break case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen lengthOfMatch jjmatchedPos inComment false stateStackPop break case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen lengthOfMatch jjmatchedPos inComment false stateStackPop break case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen lengthOfMatch jjmatchedPos inComment false stateStackPop break case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen lengthOfMatch jjmatchedPos if curLexState DIRECTIVE inSet lparen stateStackPop break case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen lengthOfMatch jjmatchedPos if debugPrint System out println stateStackPop if inSet inSet false if inDirective inDirective false break case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen lengthOfMatch jjmatchedPos inDirective false stateStackPop break case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen lengthOfMatch jjmatchedPos SwitchTo DIRECTIVE break case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen lengthOfMatch jjmatchedPos SwitchTo DIRECTIVE break case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen lengthOfMatch jjmatchedPos inDirective false stateStackPop break case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen lengthOfMatch jjmatchedPos inDirective false stateStackPop break case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen lengthOfMatch jjmatchedPos if matchedToken image endsWith input_stream backup matchedToken image matchedToken image substring matchedToken image length if lparen inSet curLexState REFMOD2 stateStackPop break case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen lengthOfMatch jjmatchedPos if lparen inSet curLexState REFMOD2 stateStackPop break case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen lengthOfMatch jjmatchedPos input_stream backup matchedToken image if debugPrint System out print REFMODIFIER SwitchTo REFMODIFIER break case if image null image new StringBuffer image append input_stream GetSuffix jjimageLen lengthOfMatch jjmatchedPos stateStackPop break default break public class LogChuteSystem implements LogChute private LogSystem logSystem protected LogChuteSystem LogSystem wrapMe this logSystem wrapMe public void init RuntimeServices rs throws Exception logSystem init rs public void log int level String message logSystem logVelocityMessage level message public void log int level String message Throwable logSystem logVelocityMessage level message logSystem logVelocityMessage level StringUtils stackTrace public boolean isLevelEnabled int level return true public class ASTDivNode extends SimpleNode public ASTDivNode int id super id public ASTDivNode Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public Object value InternalContextAdapter context throws MethodInvocationException Object left jjtGetChild value context Object right jjtGetChild value context if left null right null log error left null jjtGetChild left null literal context getCurrentTemplateName getLine getColumn return null if left instanceof TemplateNumber left TemplateNumber left getAsNumber if right instanceof TemplateNumber right TemplateNumber right getAsNumber if left instanceof Number right instanceof Number log error left instanceof Number context getCurrentTemplateName getLine getColumn return null if MathUtils isZero Number right log error context getCurrentTemplateName getLine getColumn return null return MathUtils divide Number left Number right public class ASTMethod extends SimpleNode private String methodName private int paramCount protected Info uberInfo public ASTMethod int id super id public ASTMethod Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public Object init InternalContextAdapter context Object data throws TemplateInitException super init context data uberInfo new Info context getCurrentTemplateName getLine getColumn methodName getFirstToken image paramCount jjtGetNumChildren return data public Object execute Object InternalContextAdapter context throws MethodInvocationException VelMethod method null Object params new Object paramCount try final Class paramClasses paramCount new Class paramCount ArrayUtils EMPTY_CLASS_ARRAY for int paramCount params jjtGetChild value context if params null paramClasses params getClass MethodCacheKey mck new MethodCacheKey methodName paramClasses IntrospectionCacheData icd context icacheGet mck if icd null null icd contextData getClass method VelMethod icd thingy else method rsvc getUberspect getMethod methodName params new Info context getCurrentTemplateName getLine getColumn if method null null icd new IntrospectionCacheData icd contextData getClass icd thingy method context icachePut mck icd if method null return null catch MethodInvocationException mie throw mie catch RuntimeException throw catch Exception log error return null try Object obj method invoke params if obj null if method getReturnType Void TYPE return return obj catch InvocationTargetException ite Throwable ite getTargetException if instanceof Exception try return EventHandlerUtil methodException rsvc context getClass methodName Exception catch Exception throw new MethodInvocationException methodName getClass toString methodName context getCurrentTemplateName this getLine this getColumn else throw new MethodInvocationException methodName getClass ite getTargetException toString ite getTargetException methodName context getCurrentTemplateName this getLine this getColumn catch RuntimeException throw catch Exception log error methodName getClass return null public static class MethodCacheKey private final String methodName private final Class params public MethodCacheKey String methodName Class params this methodName methodName null methodName StringUtils EMPTY this params params null params ArrayUtils EMPTY_CLASS_ARRAY public boolean equals Object if instanceof MethodCacheKey final MethodCacheKey other MethodCacheKey if params length other params length methodName equals other methodName for int params length if params null if params other params return false else if params equals other params return false return true return false public int hashCode int result for int params length final Class param params if param null result result param hashCode result result methodName hashCode return result public String getMethodName return methodName public class VelocityContext extends AbstractContext implements Cloneable private static final long serialVersionUID private Map context null public VelocityContext this null null public VelocityContext Map context this context null public VelocityContext Context innerContext this null innerContext public VelocityContext Map context Context innerContext super innerContext this context context null new HashMap context public Object internalGet String key return context get key public Object internalPut String key Object value return context put key value public boolean internalContainsKey Object key return context containsKey key public Object internalGetKeys return context keySet toArray public Object internalRemove Object key return context remove key public Object clone VelocityContext clone null try clone VelocityContext super clone clone context new HashMap context catch CloneNotSupportedException ignored return clone public class Template extends Resource private VelocityException errorCondition null public Template public boolean process throws ResourceNotFoundException ParseErrorException IOException data null InputStream is null errorCondition null try is resourceLoader getResourceStream name catch ResourceNotFoundException rnfe errorCondition rnfe throw rnfe if is null try BufferedReader br new BufferedReader new InputStreamReader is encoding data rsvc parse br name initDocument return true catch UnsupportedEncodingException uce String msg encoding name errorCondition new ParseErrorException msg throw errorCondition catch ParseException pex errorCondition new ParseErrorException pex throw errorCondition catch TemplateInitException pex errorCondition new ParseErrorException pex throw errorCondition catch RuntimeException throw finally is close else errorCondition new ResourceNotFoundException name throw errorCondition public void initDocument throws TemplateInitException InternalContextAdapterImpl ica new InternalContextAdapterImpl new VelocityContext try ica pushCurrentTemplateName name SimpleNode data init ica rsvc finally ica popCurrentTemplateName public void merge Context context Writer writer throws ResourceNotFoundException ParseErrorException MethodInvocationException IOException if errorCondition null throw errorCondition if data null InternalContextAdapterImpl ica new InternalContextAdapterImpl context try ica pushCurrentTemplateName name ica setCurrentResource this SimpleNode data render ica writer finally ica popCurrentTemplateName ica setCurrentResource null else String msg throw new RuntimeException msg public class ParseErrorException extends VelocityException private static final long serialVersionUID private int columnNumber private int lineNumber private String templateName private String invalidSyntax public ParseErrorException String exceptionMessage super exceptionMessage public ParseErrorException ParseException pex super pex getMessage if pex instanceof ExtendedParseException ExtendedParseException xpex ExtendedParseException pex columnNumber xpex getColumnNumber lineNumber xpex getLineNumber templateName xpex getTemplateName else if pex currentToken null pex currentToken next null columnNumber pex currentToken next beginColumn lineNumber pex currentToken next beginLine public ParseErrorException VelocityException pex super pex getMessage if pex instanceof ExtendedParseException ExtendedParseException xpex ExtendedParseException pex columnNumber xpex getColumnNumber lineNumber xpex getLineNumber templateName xpex getTemplateName else if pex getWrappedThrowable instanceof ParseException ParseException pex2 ParseException pex getWrappedThrowable if pex2 currentToken null pex2 currentToken next null columnNumber pex2 currentToken next beginColumn lineNumber pex2 currentToken next beginLine public ParseErrorException String exceptionMessage Info info super exceptionMessage columnNumber info getColumn lineNumber info getLine templateName info getTemplateName public ParseErrorException String exceptionMessage Info info String invalidSyntax super exceptionMessage columnNumber info getColumn lineNumber info getLine templateName info getTemplateName this invalidSyntax invalidSyntax public int getColumnNumber return columnNumber public int getLineNumber return lineNumber public String getTemplateName return templateName public String getInvalidSyntax return invalidSyntax public class SetPropertyExecutor extends SetExecutor private final Introspector introspector public SetPropertyExecutor final Log log final Introspector introspector final Class clazz final String property final Object arg this log log this introspector introspector if StringUtils isNotEmpty property discover clazz property arg protected Introspector getIntrospector return this introspector protected void discover final Class clazz final String property final Object arg Object params new Object arg try StringBuffer sb new StringBuffer sb append property setMethod introspector getMethod clazz sb toString params if isAlive char sb charAt if Character isLowerCase sb setCharAt Character toUpperCase else sb setCharAt Character toLowerCase setMethod introspector getMethod clazz sb toString params catch RuntimeException throw catch Exception log error property public Object execute final Object final Object value throws IllegalAccessException InvocationTargetException Object params new Object value return isAlive getMethod invoke params null public interface ReferenceInsertionEventHandler extends EventHandler public Object referenceInsert String reference Object value static class referenceInsertExecutor implements EventHandlerMethodExecutor private Context context private String reference private Object value referenceInsertExecutor Context context String reference Object value this context context this reference reference this value value public void execute EventHandler handler ReferenceInsertionEventHandler eh ReferenceInsertionEventHandler handler if eh instanceof ContextAware ContextAware eh setContext context value ReferenceInsertionEventHandler handler referenceInsert reference value public Object getReturnValue return value public boolean isDone return false public class SecureUberspector extends UberspectImpl implements RuntimeServicesAware RuntimeServices runtimeServices public SecureUberspector super public void init String badPackages runtimeServices getConfiguration getStringArray RuntimeConstants INTROSPECTOR_RESTRICT_PACKAGES String badClasses runtimeServices getConfiguration getStringArray RuntimeConstants INTROSPECTOR_RESTRICT_CLASSES introspector new SecureIntrospectorImpl badClasses badPackages log public Iterator getIterator Object obj Info throws Exception if obj null SecureIntrospectorControl introspector checkObjectExecutePermission obj getClass null log warn obj getClass getName return null else return super getIterator obj public void setRuntimeServices RuntimeServices rs this runtimeServices rs public class AvalonLogChute implements LogChute public static final String AVALON_LOGGER public static final String AVALON_LOGGER_FORMAT public static final String AVALON_LOGGER_LEVEL private Logger logger null private RuntimeServices rsvc null private static final Map logLevels new HashMap static logLevels put Priority DEBUG logLevels put Priority DEBUG logLevels put Priority INFO logLevels put Priority WARN logLevels put Priority ERROR public void init RuntimeServices rs throws Exception this rsvc rs String name String rsvc getProperty AVALON_LOGGER if name null this logger Hierarchy getDefaultHierarchy getLoggerFor name else logger Hierarchy getDefaultHierarchy getLoggerFor rsvc toString String file String rsvc getProperty RuntimeConstants RUNTIME_LOG if StringUtils isNotEmpty file initTarget file rsvc private void initTarget final String file final RuntimeServices rsvc throws Exception try String format null Priority level null if rsvc null format rsvc getString AVALON_LOGGER_FORMAT level Priority logLevels get rsvc getString AVALON_LOGGER_LEVEL VelocityFormatter vf new VelocityFormatter format FileTarget target new FileTarget new File file false vf logger setPriority level logger setLogTargets new LogTarget target log DEBUG_ID file catch IOException ioe rsvc getLog warn ioe throw new Exception ioe public void init String file throws Exception logger Hierarchy getDefaultHierarchy getLoggerFor rsvc toString initTarget file null log WARN_ID public void log int level String message switch level case WARN_ID logger warn WARN_PREFIX message break case INFO_ID logger info INFO_PREFIX message break case DEBUG_ID logger debug DEBUG_PREFIX message break case TRACE_ID logger debug TRACE_PREFIX message break case ERROR_ID logger error ERROR_PREFIX message break default logger info message break public void log int level String message Throwable switch level case WARN_ID logger warn WARN_PREFIX message break case INFO_ID logger info INFO_PREFIX message break case DEBUG_ID logger debug DEBUG_PREFIX message break case TRACE_ID logger debug TRACE_PREFIX message break case ERROR_ID logger error ERROR_PREFIX message break default logger info message break public boolean isLevelEnabled int level switch level case TRACE_ID case DEBUG_ID return logger isDebugEnabled case INFO_ID return logger isInfoEnabled case WARN_ID return logger isWarnEnabled case ERROR_ID return logger isErrorEnabled default return true protected void finalize throws Throwable shutdown public void shutdown logger unsetLogTargets public class TexenTask extends Task private final static String ERR_MSG_FRAGMENT protected String controlTemplate protected String templatePath protected String outputDirectory protected String outputFile protected String outputEncoding protected String inputEncoding protected ExtendedProperties contextProperties protected boolean useClasspath protected String logFile protected String useResourceLoaderCache protected String resourceLoaderModificationCheckInterval public void setControlTemplate String controlTemplate this controlTemplate controlTemplate public String getControlTemplate return controlTemplate public void setTemplatePath String templatePath throws Exception StringBuffer resolvedPath new StringBuffer StringTokenizer st new StringTokenizer templatePath while st hasMoreTokens File fullPath project resolveFile st nextToken resolvedPath append fullPath getCanonicalPath if st hasMoreTokens resolvedPath append this templatePath resolvedPath toString System out println templatePath public String getTemplatePath return templatePath public void setOutputDirectory File outputDirectory try this outputDirectory outputDirectory getCanonicalPath catch java io IOException ioe throw new BuildException ioe public String getOutputDirectory return outputDirectory public void setOutputFile String outputFile this outputFile outputFile public void setOutputEncoding String outputEncoding this outputEncoding outputEncoding public void setInputEncoding String inputEncoding this inputEncoding inputEncoding public String getOutputFile return outputFile public void setLogFile String log this logFile log public String getLogFile return this logFile public void setContextProperties String file String sources StringUtils split file contextProperties new ExtendedProperties for int sources length ExtendedProperties source new ExtendedProperties try File fullPath project resolveFile sources log fullPath source load new FileInputStream fullPath catch IOException ClassLoader classLoader this getClass getClassLoader try InputStream inputStream classLoader getResourceAsStream sources if inputStream null throw new BuildException sources else source load inputStream catch IOException ioe source null if source null for Iterator source getKeys hasNext String name String next String value StringUtils nullTrim source getString name contextProperties setProperty name value public ExtendedProperties getContextProperties return contextProperties public void setUseClasspath boolean useClasspath this useClasspath useClasspath public void setUseResourceLoaderCache String useResourceLoaderCache this useResourceLoaderCache useResourceLoaderCache public void setResourceLoaderModificationCheckInterval String resourceLoaderModificationCheckInterval this resourceLoaderModificationCheckInterval resourceLoaderModificationCheckInterval public Context initControlContext throws Exception return new VelocityContext public void execute throws BuildException if templatePath null useClasspath false throw new BuildException if controlTemplate null throw new BuildException if outputDirectory null throw new BuildException if outputFile null throw new BuildException VelocityEngine ve new VelocityEngine try if templatePath null log templatePath Project MSG_VERBOSE ve setProperty RuntimeConstants FILE_RESOURCE_LOADER_PATH templatePath if useClasspath log ve addProperty VelocityEngine RESOURCE_LOADER ve setProperty VelocityEngine RESOURCE_LOADER ve setProperty VelocityEngine RESOURCE_LOADER useResourceLoaderCache ve setProperty VelocityEngine RESOURCE_LOADER resourceLoaderModificationCheckInterval if this logFile null ve setProperty RuntimeConstants RUNTIME_LOG this logFile ve init Generator generator Generator getInstance generator setVelocityEngine ve generator setOutputPath outputDirectory generator setInputEncoding inputEncoding generator setOutputEncoding outputEncoding if templatePath null generator setTemplatePath templatePath File file new File outputDirectory if file exists file mkdirs String path outputDirectory File separator outputFile log path Project MSG_INFO Writer writer generator getWriter path outputEncoding Context initControlContext populateInitialContext if contextProperties null Iterator contextProperties getKeys while hasNext String property String next String value StringUtils nullTrim contextProperties getString property try put property new Integer value catch NumberFormatException nfe String booleanString contextProperties testBoolean value if booleanString null put property Boolean valueOf booleanString else if property endsWith value StringUtils fileContentsToString project resolveFile value getCanonicalPath property property substring property indexOf put property value writer write generator parse controlTemplate writer flush writer close generator shutdown cleanup catch BuildException throw catch MethodInvocationException throw new BuildException getReferenceName getMethodName ERR_MSG_FRAGMENT getWrappedThrowable catch ParseErrorException throw new BuildException ERR_MSG_FRAGMENT catch ResourceNotFoundException throw new BuildException ERR_MSG_FRAGMENT catch Exception throw new BuildException ERR_MSG_FRAGMENT protected void populateInitialContext Context context throws Exception context put new Date toString protected void cleanup throws Exception public class PrimordialLogSystem extends HoldingLogChute implements LogSystem public void logVelocityMessage int level String message log level message public void dumpLogMessages LogSystem newLogger transferTo new LogChuteSystem newLogger public interface UberspectLoggable public void setLog Log log public void setRuntimeLogger RuntimeLogger logger public class ASTGTNode extends SimpleNode public ASTGTNode int id super id public ASTGTNode Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public boolean evaluate InternalContextAdapter context throws MethodInvocationException Object left jjtGetChild value context Object right jjtGetChild value context if left null right null log error left null jjtGetChild left null literal context getCurrentTemplateName getLine getColumn return false if left instanceof TemplateNumber left TemplateNumber left getAsNumber if right instanceof TemplateNumber right TemplateNumber right getAsNumber if left instanceof Number right instanceof Number log error left instanceof Number context getCurrentTemplateName getLine getColumn return false return MathUtils compare Number left Number right public Object value InternalContextAdapter context throws MethodInvocationException boolean val evaluate context return val Boolean TRUE Boolean FALSE public class IncludeRelativePath implements IncludeEventHandler public String includeEvent String includeResourcePath String currentResourcePath String directiveName if includeResourcePath startsWith includeResourcePath startsWith return includeResourcePath int lastslashpos Math max currentResourcePath lastIndexOf currentResourcePath lastIndexOf if lastslashpos return includeResourcePath return currentResourcePath substring lastslashpos includeResourcePath class HoldingLogChute implements LogChute private Vector pendingMessages new Vector public void init RuntimeServices rs throws Exception public void log int level String message synchronized this Object data new Object data new Integer level data message pendingMessages addElement data public void log int level String message Throwable synchronized this Object data new Object data new Integer level data message data pendingMessages addElement data public boolean isLevelEnabled int level return true public void transferTo LogChute newChute synchronized this if pendingMessages isEmpty for Iterator pendingMessages iterator hasNext Object data Object next int level Integer data intValue String message String data if data length newChute log level message else newChute log level message Throwable data public class Foreach extends Directive protected static class NullHolderContext implements InternalContextAdapter private InternalContextAdapter innerContext null private String loopVariableKey private boolean active true private NullHolderContext String key InternalContextAdapter context innerContext context if key null loopVariableKey key public Object get String key throws MethodInvocationException return active loopVariableKey equals key null innerContext get key public Object put String key Object value if loopVariableKey equals key value null active true return innerContext put key value public Object localPut final String key final Object value return put key value public boolean containsKey Object key return innerContext containsKey key public Object getKeys return innerContext getKeys public Object remove Object key if loopVariableKey equals key active false return innerContext remove key public void pushCurrentTemplateName String innerContext pushCurrentTemplateName public void popCurrentTemplateName innerContext popCurrentTemplateName public String getCurrentTemplateName return innerContext getCurrentTemplateName public Object getTemplateNameStack return innerContext getTemplateNameStack public IntrospectionCacheData icacheGet Object key return innerContext icacheGet key public void icachePut Object key IntrospectionCacheData innerContext icachePut key public void setCurrentResource Resource innerContext setCurrentResource public Resource getCurrentResource return innerContext getCurrentResource public InternalContextAdapter getBaseContext return innerContext getBaseContext public Context getInternalUserContext return innerContext getInternalUserContext public EventCartridge attachEventCartridge EventCartridge ec EventCartridge cartridge innerContext attachEventCartridge ec return cartridge public EventCartridge getEventCartridge return innerContext getEventCartridge public boolean getAllowRendering return innerContext getAllowRendering public void setAllowRendering boolean innerContext setAllowRendering public String getName return public int getType return BLOCK private String counterName private int counterInitialValue private int maxNbrLoops private String elementKey protected Info uberInfo public void init RuntimeServices rs InternalContextAdapter context Node node throws TemplateInitException super init rs context node counterName rsvc getString RuntimeConstants COUNTER_NAME counterInitialValue rsvc getInt RuntimeConstants COUNTER_INITIAL_VALUE maxNbrLoops rsvc getInt RuntimeConstants MAX_NUMBER_LOOPS Integer MAX_VALUE if maxNbrLoops maxNbrLoops Integer MAX_VALUE SimpleNode sn SimpleNode node jjtGetChild if sn instanceof ASTReference elementKey ASTReference sn getRootString else elementKey sn getFirstToken image substring uberInfo new Info context getCurrentTemplateName getLine getColumn public boolean render InternalContextAdapter context Writer writer Node node throws IOException MethodInvocationException ResourceNotFoundException ParseErrorException Object listObject node jjtGetChild value context if listObject null return false Iterator null try rsvc getUberspect getIterator listObject uberInfo catch RuntimeException throw catch Exception ee rsvc getLog error ee if null return false int counter counterInitialValue boolean maxNbrLoopsExceeded false Object context get elementKey Object savedCounter context get counterName NullHolderContext nullHolderContext null while maxNbrLoopsExceeded hasNext context localPut counterName new Integer counter Object value next context localPut elementKey value if value null if nullHolderContext null nullHolderContext new NullHolderContext elementKey context node jjtGetChild render nullHolderContext writer else node jjtGetChild render context writer counter maxNbrLoopsExceeded counter counterInitialValue maxNbrLoops if savedCounter null context put counterName savedCounter else context remove counterName if null context put elementKey else context remove elementKey return true public interface ExtendedParseException String getTemplateName int getLineNumber int getColumnNumber public class ASTIntegerLiteral extends SimpleNode private Number value null public ASTIntegerLiteral int id super id public ASTIntegerLiteral Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public Object init InternalContextAdapter context Object data throws TemplateInitException super init context data String str getFirstToken image try value new Integer str catch NumberFormatException E1 try value new Long str catch NumberFormatException E2 value new BigInteger str return data public Object value InternalContextAdapter context return value public class Runtime implements RuntimeConstants public synchronized static void init throws Exception RuntimeSingleton init public static void setProperty String key Object value RuntimeSingleton setProperty key value public static void setConfiguration ExtendedProperties configuration RuntimeSingleton setConfiguration configuration public static void addProperty String key Object value RuntimeSingleton addProperty key value public static void clearProperty String key RuntimeSingleton clearProperty key public static Object getProperty String key return RuntimeSingleton getProperty key public static void init Properties throws Exception RuntimeSingleton init public static void init String configurationFile throws Exception RuntimeSingleton init configurationFile public static SimpleNode parse Reader reader String templateName throws ParseException return RuntimeSingleton parse reader templateName public static SimpleNode parse Reader reader String templateName boolean dumpNamespace throws ParseException return RuntimeSingleton parse reader templateName dumpNamespace public static Template getTemplate String name throws ResourceNotFoundException ParseErrorException Exception return RuntimeSingleton getTemplate name public static Template getTemplate String name String encoding throws ResourceNotFoundException ParseErrorException Exception return RuntimeSingleton getTemplate name encoding public static ContentResource getContent String name throws ResourceNotFoundException ParseErrorException Exception return RuntimeSingleton getContent name public static ContentResource getContent String name String encoding throws ResourceNotFoundException ParseErrorException Exception return RuntimeSingleton getContent name encoding public static String getLoaderNameForResource String resourceName return RuntimeSingleton getLoaderNameForResource resourceName public static void warn Object message RuntimeSingleton warn message public static void info Object message RuntimeSingleton info message public static void error Object message RuntimeSingleton error message public static void debug Object message RuntimeSingleton debug message public static String getString String key String defaultValue return RuntimeSingleton getString key defaultValue public static Directive getVelocimacro String vmName String templateName return RuntimeSingleton getVelocimacro vmName templateName public static boolean addVelocimacro String name String macro String argArray String sourceTemplate return RuntimeSingleton addVelocimacro name macro argArray sourceTemplate public static boolean isVelocimacro String vmName String templateName return RuntimeSingleton isVelocimacro vmName templateName public static boolean dumpVMNamespace String namespace return RuntimeSingleton dumpVMNamespace namespace public static String getString String key return RuntimeSingleton getString key public static int getInt String key return RuntimeSingleton getInt key public static int getInt String key int defaultValue return RuntimeSingleton getInt key defaultValue public static boolean getBoolean String key boolean def return RuntimeSingleton getBoolean key def public static ExtendedProperties getConfiguration return RuntimeSingleton getConfiguration public class MethodMap private static final int MORE_SPECIFIC private static final int LESS_SPECIFIC private static final int INCOMPARABLE Map methodByNameMap new Hashtable public void add Method method String methodName method getName List get methodName if null new ArrayList methodByNameMap put methodName add method public List get String key return List methodByNameMap get key public Method find String methodName Object args throws AmbiguousException List methodList get methodName if methodList null return null int args length Class classes new Class for int Object arg args classes arg null null arg getClass return getMostSpecific methodList classes public static class AmbiguousException extends RuntimeException private static final long serialVersionUID private static Method getMostSpecific List methods Class classes throws AmbiguousException LinkedList applicables getApplicables methods classes if applicables isEmpty return null if applicables size return Method applicables getFirst LinkedList maximals new LinkedList for Iterator applicable applicables iterator applicable hasNext Method app Method applicable next Class appArgs app getParameterTypes boolean lessSpecific false for Iterator maximal maximals iterator lessSpecific maximal hasNext Method max Method maximal next switch moreSpecific appArgs max getParameterTypes case MORE_SPECIFIC maximal remove break case LESS_SPECIFIC lessSpecific true break if lessSpecific maximals addLast app if maximals size throw new AmbiguousException return Method maximals getFirst private static int moreSpecific Class c1 Class c2 boolean c1MoreSpecific false boolean c2MoreSpecific false for int c1 length if c1 c2 c1MoreSpecific c1MoreSpecific isStrictMethodInvocationConvertible c2 c1 c2MoreSpecific c2MoreSpecific isStrictMethodInvocationConvertible c1 c2 if c1MoreSpecific if c2MoreSpecific return INCOMPARABLE return MORE_SPECIFIC if c2MoreSpecific return LESS_SPECIFIC return INCOMPARABLE private static LinkedList getApplicables List methods Class classes LinkedList list new LinkedList for Iterator imethod methods iterator imethod hasNext Method method Method imethod next if isApplicable method classes list add method return list private static boolean isApplicable Method method Class classes Class methodArgs method getParameterTypes if methodArgs length classes length return false for int classes length if isMethodInvocationConvertible methodArgs classes return false return true private static boolean isMethodInvocationConvertible Class formal Class actual if actual null formal isPrimitive return true if actual null formal isAssignableFrom actual return true if formal isPrimitive if formal Boolean TYPE actual Boolean class return true if formal Character TYPE actual Character class return true if formal Byte TYPE actual Byte class return true if formal Short TYPE actual Short class actual Byte class return true if formal Integer TYPE actual Integer class actual Short class actual Byte class return true if formal Long TYPE actual Long class actual Integer class actual Short class actual Byte class return true if formal Float TYPE actual Float class actual Long class actual Integer class actual Short class actual Byte class return true if formal Double TYPE actual Double class actual Float class actual Long class actual Integer class actual Short class actual Byte class return true return false private static boolean isStrictMethodInvocationConvertible Class formal Class actual if actual null formal isPrimitive return true if formal isAssignableFrom actual return true if formal isPrimitive if formal Short TYPE actual Byte TYPE return true if formal Integer TYPE actual Short TYPE actual Byte TYPE return true if formal Long TYPE actual Integer TYPE actual Short TYPE actual Byte TYPE return true if formal Float TYPE actual Long TYPE actual Integer TYPE actual Short TYPE actual Byte TYPE return true if formal Double TYPE actual Float TYPE actual Long TYPE actual Integer TYPE actual Short TYPE actual Byte TYPE return true return false public class UberspectImpl implements Uberspect UberspectLoggable protected Log log protected Introspector introspector public void init introspector new Introspector log public void setLog Log log this log log public void setRuntimeLogger RuntimeLogger runtimeLogger setLog new RuntimeLoggerLog runtimeLogger public Iterator getIterator Object obj Info throws Exception if obj getClass isArray return new ArrayIterator obj else if obj instanceof Collection return Collection obj iterator else if obj instanceof Map return Map obj values iterator else if obj instanceof Iterator if log isDebugEnabled log debug return Iterator obj else if obj instanceof Enumeration if log isDebugEnabled log debug return new EnumerationIterator Enumeration obj log info return null public VelMethod getMethod Object obj String methodName Object args Info throws Exception if obj null return null Method introspector getMethod obj getClass methodName args return null new VelMethodImpl null public VelPropertyGet getPropertyGet Object obj String identifier Info throws Exception if obj null return null Class claz obj getClass AbstractExecutor executor new PropertyExecutor log introspector claz identifier if executor isAlive executor new MapGetExecutor log claz identifier if executor isAlive executor new GetExecutor log introspector claz identifier if executor isAlive executor new BooleanPropertyExecutor log introspector claz identifier return executor isAlive new VelGetterImpl executor null public VelPropertySet getPropertySet Object obj String identifier Object arg Info throws Exception if obj null return null Class claz obj getClass SetExecutor executor new SetPropertyExecutor log introspector claz identifier arg if executor isAlive executor new MapSetExecutor log claz identifier if executor isAlive executor new PutExecutor log introspector claz arg identifier return executor isAlive new VelSetterImpl executor null public static class VelMethodImpl implements VelMethod final Method method public VelMethodImpl Method method private VelMethodImpl method null public Object invoke Object Object params throws Exception return method invoke params public boolean isCacheable return true public String getMethodName return method getName public Class getReturnType return method getReturnType public static class VelGetterImpl implements VelPropertyGet final AbstractExecutor getExecutor public VelGetterImpl AbstractExecutor exec getExecutor exec private VelGetterImpl getExecutor null public Object invoke Object throws Exception return getExecutor execute public boolean isCacheable return true public String getMethodName return getExecutor isAlive getExecutor getMethod getName null public static class VelSetterImpl implements VelPropertySet private final SetExecutor setExecutor public VelSetterImpl final SetExecutor setExecutor this setExecutor setExecutor private VelSetterImpl setExecutor null public Object invoke final Object final Object value throws Exception return setExecutor execute value public boolean isCacheable return true public String getMethodName return setExecutor isAlive setExecutor getMethod getName null public abstract class InputBase extends Directive protected String getInputEncoding InternalContextAdapter context Resource current context getCurrentResource if current null return current getEncoding else return String rsvc getProperty RuntimeConstants INPUT_ENCODING public class UnicodeInputStream extends InputStream public static final UnicodeBOM UTF8_BOM new UnicodeBOM new byte byte byte byte public static final UnicodeBOM UTF16LE_BOM new UnicodeBOM new byte byte byte public static final UnicodeBOM UTF16BE_BOM new UnicodeBOM new byte byte byte public static final UnicodeBOM UTF32LE_BOM new UnicodeBOM new byte byte byte byte byte public static final UnicodeBOM UTF32BE_BOM new UnicodeBOM new byte byte byte byte byte private static final int MAX_BOM_SIZE private byte buf new byte MAX_BOM_SIZE private int pos private final String encoding private final boolean skipBOM private final PushbackInputStream inputStream public UnicodeInputStream final InputStream inputStream throws IllegalStateException IOException this inputStream true public UnicodeInputStream final InputStream inputStream boolean skipBOM throws IllegalStateException IOException super this skipBOM skipBOM this inputStream new PushbackInputStream inputStream MAX_BOM_SIZE try this encoding readEncoding catch IOException ioe IllegalStateException ex new IllegalStateException ExceptionUtils setCause ex ioe throw ex public boolean isSkipBOM return skipBOM public String getEncodingFromStream return encoding protected String readEncoding throws IOException pos UnicodeBOM encoding null if readByte switch buf encoding match UTF32BE_BOM null break encoding match UTF8_BOM null break encoding match UTF16BE_BOM null break encoding match UTF16LE_BOM null if encoding null encoding match UTF32LE_BOM encoding break default encoding null break pushback encoding return encoding null encoding getEncoding null private final UnicodeBOM match final UnicodeBOM matchEncoding final UnicodeBOM noMatchEncoding throws IOException byte bom matchEncoding getBytes for int bom length if readByte return noMatchEncoding if bom buf return noMatchEncoding return matchEncoding private final boolean readByte throws IOException int res inputStream read if res return false if pos buf length throw new IOException buf pos byte res return true private final void pushback final UnicodeBOM matchBOM throws IOException int start if matchBOM null skipBOM start matchBOM getBytes length count pos start if count throw new IllegalStateException inputStream unread buf start count public void close throws IOException inputStream close public int available throws IOException return inputStream available public void mark final int readlimit inputStream mark readlimit public boolean markSupported return inputStream markSupported public int read throws IOException return inputStream read public int read final byte throws IOException return inputStream read public int read final byte final int off final int len throws IOException return inputStream read off len public void reset throws IOException inputStream reset public long skip final long throws IOException return inputStream skip static final class UnicodeBOM private final String encoding private final byte bytes private UnicodeBOM final String encoding final byte bytes this encoding encoding this bytes bytes String getEncoding return encoding byte getBytes return bytes public class ASTElseStatement extends SimpleNode public ASTElseStatement int id super id public ASTElseStatement Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public boolean evaluate InternalContextAdapter context return true public class ASTTrue extends SimpleNode private static Boolean value Boolean TRUE public ASTTrue int id super id public ASTTrue Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public boolean evaluate InternalContextAdapter context return true public Object value InternalContextAdapter context return value public interface IntrospectorCacheListener void triggerClear void triggerGet Class ClassMap classMap void triggerPut Class ClassMap classMap public interface CharStream char readChar throws java io IOException int getColumn int getLine int getEndColumn int getEndLine int getBeginColumn int getBeginLine void backup int amount char BeginToken throws java io IOException String GetImage char GetSuffix int len void Done public class Token public int kind public int beginLine beginColumn endLine endColumn public String image public Token next public Token specialToken public String toString return image public static final Token newToken int ofKind switch ofKind default return new Token public interface EventHandler public interface ParserPool void initialize RuntimeServices svc Parser get void put Parser parser public final class VelocityCharStream implements CharStream public static final boolean staticFlag false int bufsize int available int tokenBegin public int bufpos private int bufline private int bufcolumn private int column private int line private boolean prevCharIsCR false private boolean prevCharIsLF false private java io Reader inputStream private char buffer private int maxNextCharInd private int inBuf private final void ExpandBuff boolean wrapAround char newbuffer new char bufsize int newbufline new int bufsize int newbufcolumn new int bufsize try if wrapAround System arraycopy buffer tokenBegin newbuffer bufsize tokenBegin System arraycopy buffer newbuffer bufsize tokenBegin bufpos buffer newbuffer System arraycopy bufline tokenBegin newbufline bufsize tokenBegin System arraycopy bufline newbufline bufsize tokenBegin bufpos bufline newbufline System arraycopy bufcolumn tokenBegin newbufcolumn bufsize tokenBegin System arraycopy bufcolumn newbufcolumn bufsize tokenBegin bufpos bufcolumn newbufcolumn maxNextCharInd bufpos bufsize tokenBegin else System arraycopy buffer tokenBegin newbuffer bufsize tokenBegin buffer newbuffer System arraycopy bufline tokenBegin newbufline bufsize tokenBegin bufline newbufline System arraycopy bufcolumn tokenBegin newbufcolumn bufsize tokenBegin bufcolumn newbufcolumn maxNextCharInd bufpos tokenBegin catch Throwable throw new Error getMessage bufsize available bufsize tokenBegin private final void FillBuff throws java io IOException if maxNextCharInd available if available bufsize if tokenBegin bufpos maxNextCharInd available tokenBegin else if tokenBegin bufpos maxNextCharInd else ExpandBuff false else if available tokenBegin available bufsize else if tokenBegin available ExpandBuff true else available tokenBegin int try if inputStream read buffer maxNextCharInd available maxNextCharInd inputStream close throw new java io IOException else maxNextCharInd return catch java io IOException bufpos backup if tokenBegin tokenBegin bufpos throw public final char BeginToken throws java io IOException tokenBegin char readChar tokenBegin bufpos return private final void UpdateLineColumn char column if prevCharIsLF prevCharIsLF false line column else if prevCharIsCR prevCharIsCR false if prevCharIsLF true else line column switch case prevCharIsCR true break case prevCharIsLF true break case column column column break default break bufline bufpos line bufcolumn bufpos column public final char readChar throws java io IOException if inBuf inBuf return buffer bufpos bufsize bufpos bufpos if bufpos maxNextCharInd FillBuff char buffer bufpos UpdateLineColumn return public final int getColumn return bufcolumn bufpos public final int getLine return bufline bufpos public final int getEndColumn return bufcolumn bufpos public final int getEndLine return bufline bufpos public final int getBeginColumn return bufcolumn tokenBegin public final int getBeginLine return bufline tokenBegin public final void backup int amount inBuf amount if bufpos amount bufpos bufsize public VelocityCharStream java io Reader dstream int startline int startcolumn int buffersize inputStream dstream line startline column startcolumn available bufsize buffersize buffer new char buffersize bufline new int buffersize bufcolumn new int buffersize public VelocityCharStream java io Reader dstream int startline int startcolumn this dstream startline startcolumn public void ReInit java io Reader dstream int startline int startcolumn int buffersize inputStream dstream line startline column startcolumn if buffer null buffersize buffer length available bufsize buffersize buffer new char buffersize bufline new int buffersize bufcolumn new int buffersize prevCharIsLF prevCharIsCR false tokenBegin inBuf maxNextCharInd bufpos public void ReInit java io Reader dstream int startline int startcolumn ReInit dstream startline startcolumn public VelocityCharStream java io InputStream dstream int startline int startcolumn int buffersize this new java io InputStreamReader dstream startline startcolumn public VelocityCharStream java io InputStream dstream int startline int startcolumn this dstream startline startcolumn public void ReInit java io InputStream dstream int startline int startcolumn int buffersize ReInit new java io InputStreamReader dstream startline startcolumn public void ReInit java io InputStream dstream int startline int startcolumn ReInit dstream startline startcolumn public final String GetImage if bufpos tokenBegin return new String buffer tokenBegin bufpos tokenBegin else return new String buffer tokenBegin bufsize tokenBegin new String buffer bufpos public final char GetSuffix int len char ret new char len if bufpos len System arraycopy buffer bufpos len ret len else System arraycopy buffer bufsize len bufpos ret len bufpos System arraycopy buffer ret len bufpos bufpos return ret public void Done buffer null bufline null bufcolumn null public void adjustBeginLineColumn int newLine int newCol int start tokenBegin int len if bufpos tokenBegin len bufpos tokenBegin inBuf else len bufsize tokenBegin bufpos inBuf int int nextColDiff columnDiff while len bufline start bufsize bufline start bufsize bufline newLine nextColDiff columnDiff bufcolumn bufcolumn bufcolumn newCol columnDiff columnDiff nextColDiff if len bufline newLine bufcolumn newCol columnDiff while len if bufline start bufsize bufline start bufsize bufline newLine else bufline newLine line bufline column bufcolumn public class TemplateParseException extends ParseException implements ExtendedParseException private static final long serialVersionUID private final String templateName public TemplateParseException Token currentTokenVal int expectedTokenSequencesVal String tokenImageVal String templateNameVal super currentTokenVal expectedTokenSequencesVal tokenImageVal this templateName templateNameVal public TemplateParseException Token currentTokenVal int expectedTokenSequencesVal String tokenImageVal super currentTokenVal expectedTokenSequencesVal tokenImageVal templateName public TemplateParseException super templateName public TemplateParseException String message super message templateName public String getTemplateName return templateName public int getLineNumber if currentToken null currentToken next null return currentToken next beginLine else return public int getColumnNumber if currentToken null currentToken next null return currentToken next beginColumn else return public String getMessage if specialConstructor StringBuffer sb new StringBuffer super getMessage appendTemplateInfo sb return sb toString int maxSize StringBuffer expected new StringBuffer for int expectedTokenSequences length if maxSize expectedTokenSequences length maxSize expectedTokenSequences length for int expectedTokenSequences length expected append tokenImage expectedTokenSequences append if expectedTokenSequences expectedTokenSequences length expected append expected append eol append StringBuffer retval new StringBuffer Token tok currentToken next for int maxSize if retval append if tok kind retval append tokenImage break retval append add_escapes tok image tok tok next retval append appendTemplateInfo retval if expectedTokenSequences length retval append append eol append else retval append append eol append retval append expected toString return retval toString protected void appendTemplateInfo final StringBuffer sb sb append append getLineNumber append append getColumnNumber if getTemplateName null sb append append getTemplateName else sb append sb append eol public interface RuntimeLogger public void warn Object message public void info Object message public void error Object message public void debug Object message public class ASTIdentifier extends SimpleNode private String identifier protected Info uberInfo public ASTIdentifier int id super id public ASTIdentifier Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public Object init InternalContextAdapter context Object data throws TemplateInitException super init context data identifier getFirstToken image uberInfo new Info context getCurrentTemplateName getLine getColumn return data public Object execute Object InternalContextAdapter context throws MethodInvocationException VelPropertyGet vg null try IntrospectionCacheData icd context icacheGet this if icd null null icd contextData getClass vg VelPropertyGet icd thingy else vg rsvc getUberspect getPropertyGet identifier uberInfo if vg null vg isCacheable null icd new IntrospectionCacheData icd contextData getClass icd thingy vg context icachePut this icd catch RuntimeException throw catch Exception log error identifier if vg null return null try return vg invoke catch InvocationTargetException ite Throwable ite getTargetException if instanceof Exception try return EventHandlerUtil methodException rsvc context getClass vg getMethodName Exception catch Exception throw new MethodInvocationException vg getMethodName getClass ite getTargetException toString ite getTargetException vg getMethodName context getCurrentTemplateName this getLine this getColumn else throw new MethodInvocationException vg getMethodName getClass ite getTargetException toString ite getTargetException vg getMethodName context getCurrentTemplateName this getLine this getColumn catch IllegalArgumentException iae return null catch RuntimeException throw catch Exception log error identifier getClass return null public class JarHolder private String urlpath null private JarFile theJar null private JarURLConnection conn null private Log log null public JarHolder RuntimeServices rs String urlpath this log rs getLog this urlpath urlpath init if log isDebugEnabled log debug urlpath public void init try if log isDebugEnabled log debug urlpath URL url new URL urlpath conn JarURLConnection url openConnection conn setAllowUserInteraction false conn setDoInput true conn setDoOutput false conn connect theJar conn getJarFile catch IOException ioe log error urlpath ioe public void close try theJar close catch Exception log error theJar null conn null log trace public InputStream getResource String theentry throws ResourceNotFoundException InputStream data null try JarEntry entry theJar getJarEntry theentry if entry null data theJar getInputStream entry catch Exception fnfe log error fnfe throw new ResourceNotFoundException fnfe return data public Hashtable getEntries Hashtable allEntries new Hashtable Enumeration all theJar entries while all hasMoreElements JarEntry je JarEntry all nextElement if je isDirectory allEntries put je getName this urlpath return allEntries public String getUrlPath return urlpath public class ASTObjectArray extends SimpleNode public ASTObjectArray int id super id public ASTObjectArray Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public Object value InternalContextAdapter context throws MethodInvocationException int size jjtGetNumChildren List objectArray new ArrayList for int size objectArray add jjtGetChild value context return objectArray public class VelocimacroManager private final RuntimeServices rsvc private static String GLOBAL_NAMESPACE private boolean registerFromLib false private final Hashtable namespaceHash new Hashtable private final Hashtable libraryMap new Hashtable private boolean namespacesOn true private boolean inlineLocalMode false VelocimacroManager RuntimeServices rsvc this rsvc rsvc addNamespace GLOBAL_NAMESPACE public boolean addVM final String vmName final String macroBody final String argArray final String namespace MacroEntry me new MacroEntry vmName macroBody argArray namespace me setFromLibrary registerFromLib boolean isLib true if registerFromLib libraryMap put namespace namespace else isLib libraryMap containsKey namespace if isLib usingNamespaces namespace Hashtable local getNamespace namespace true local put vmName me return true else MacroEntry exist MacroEntry getNamespace GLOBAL_NAMESPACE get vmName if exist null me setFromLibrary exist getFromLibrary getNamespace GLOBAL_NAMESPACE put vmName me return true public VelocimacroProxy get final String vmName final String namespace if usingNamespaces namespace Hashtable local getNamespace namespace false if local null MacroEntry me MacroEntry local get vmName if me null return me createVelocimacro namespace MacroEntry me MacroEntry getNamespace GLOBAL_NAMESPACE get vmName if me null return me createVelocimacro namespace return null public boolean dumpNamespace final String namespace synchronized this if usingNamespaces namespace Hashtable Hashtable namespaceHash remove namespace if null return false clear return true return false public void setNamespaceUsage final boolean namespaceOn this namespacesOn namespaceOn public void setRegisterFromLib final boolean registerFromLib this registerFromLib registerFromLib public void setTemplateLocalInlineVM final boolean inlineLocalMode this inlineLocalMode inlineLocalMode private Hashtable getNamespace final String namespace return getNamespace namespace false private Hashtable getNamespace final String namespace final boolean addIfNew Hashtable Hashtable namespaceHash get namespace if null addIfNew addNamespace namespace return private Hashtable addNamespace final String namespace Hashtable new Hashtable Object oh if oh namespaceHash put namespace null namespaceHash put namespace oh return null return private boolean usingNamespaces final String namespace if namespacesOn return false if inlineLocalMode return true return false public String getLibraryName final String vmName final String namespace if usingNamespaces namespace Hashtable local getNamespace namespace false if local null MacroEntry me MacroEntry local get vmName if me null return null MacroEntry me MacroEntry getNamespace GLOBAL_NAMESPACE get vmName if me null return me getSourceTemplate return null private class MacroEntry private final String vmName private final String argArray private final String macroBody private final String sourceTemplate private SimpleNode nodeTree null private boolean fromLibrary false private MacroEntry final String vmName final String macroBody final String argArray final String sourceTemplate this vmName vmName this argArray argArray this macroBody macroBody this sourceTemplate sourceTemplate public void setFromLibrary final boolean fromLibrary this fromLibrary fromLibrary public boolean getFromLibrary return fromLibrary public SimpleNode getNodeTree return nodeTree public String getSourceTemplate return sourceTemplate VelocimacroProxy createVelocimacro final String namespace VelocimacroProxy vp new VelocimacroProxy vp setName this vmName vp setArgArray this argArray vp setMacrobody this macroBody vp setNodeTree this nodeTree vp setNamespace namespace return vp void setup final InternalContextAdapter ica if nodeTree null parseTree ica void parseTree final InternalContextAdapter ica try BufferedReader br new BufferedReader new StringReader macroBody nodeTree rsvc parse br vmName true nodeTree init ica null catch Exception rsvc getLog error vmName public interface IncludeEventHandler extends EventHandler public String includeEvent String includeResourcePath String currentResourcePath String directiveName static class IncludeEventExecutor implements EventHandlerMethodExecutor private Context context private String includeResourcePath private String currentResourcePath private String directiveName private boolean executed false IncludeEventExecutor Context context String includeResourcePath String currentResourcePath String directiveName this context context this includeResourcePath includeResourcePath this currentResourcePath currentResourcePath this directiveName directiveName public void execute EventHandler handler IncludeEventHandler eh IncludeEventHandler handler if eh instanceof ContextAware ContextAware eh setContext context executed true includeResourcePath IncludeEventHandler handler includeEvent includeResourcePath currentResourcePath directiveName public Object getReturnValue return includeResourcePath public boolean isDone return executed includeResourcePath null public interface RuntimeServices extends RuntimeLogger public void init throws Exception public void setProperty String key Object value public void setConfiguration ExtendedProperties configuration public void addProperty String key Object value public void clearProperty String key public Object getProperty String key public void init Properties throws Exception public void init String configurationFile throws Exception public SimpleNode parse Reader reader String templateName throws ParseException public SimpleNode parse Reader reader String templateName boolean dumpNamespace throws ParseException public Template getTemplate String name throws ResourceNotFoundException ParseErrorException Exception public Template getTemplate String name String encoding throws ResourceNotFoundException ParseErrorException Exception public ContentResource getContent String name throws ResourceNotFoundException ParseErrorException Exception public ContentResource getContent String name String encoding throws ResourceNotFoundException ParseErrorException Exception public String getLoaderNameForResource String resourceName public String getString String key String defaultValue public Directive getVelocimacro String vmName String templateName public boolean addVelocimacro String name String macro String argArray String sourceTemplate public boolean isVelocimacro String vmName String templateName public boolean dumpVMNamespace String namespace public String getString String key public int getInt String key public int getInt String key int defaultValue public boolean getBoolean String key boolean def public ExtendedProperties getConfiguration public Object getApplicationAttribute Object key public Object setApplicationAttribute Object key Object value public Uberspect getUberspect public Log getLog public EventCartridge getApplicationEventCartridge public Introspector getIntrospector public boolean isInitialized public Parser createNewParser public class ContentResource extends Resource public ContentResource public boolean process throws ResourceNotFoundException BufferedReader reader null try StringWriter sw new StringWriter reader new BufferedReader new InputStreamReader resourceLoader getResourceStream name encoding char buf new char int len while len reader read buf sw write buf len setData sw toString return true catch ResourceNotFoundException throw catch Exception rsvc getLog error return false finally if reader null try reader close catch Exception ignored public abstract class Directive implements DirectiveConstants Cloneable private int line private int column protected RuntimeServices rsvc null public abstract String getName public abstract int getType public void setLocation int line int column this line line this column column public int getLine return line public int getColumn return column public void init RuntimeServices rs InternalContextAdapter context Node node throws TemplateInitException rsvc rs public abstract boolean render InternalContextAdapter context Writer writer Node node throws IOException ResourceNotFoundException ParseErrorException MethodInvocationException public abstract class VelocityServlet extends HttpServlet public static final String REQUEST public static final String RESPONSE public static final String CONTENT_TYPE public static final String DEFAULT_CONTENT_TYPE public static final String DEFAULT_OUTPUT_ENCODING private static String defaultContentType protected static final String INIT_PROPS_KEY private static final String OLD_INIT_PROPS_KEY private static SimplePool writerPool new SimplePool public void init ServletConfig config throws ServletException super init config initVelocity config VelocityServlet defaultContentType RuntimeSingleton getString CONTENT_TYPE DEFAULT_CONTENT_TYPE protected void initVelocity ServletConfig config throws ServletException try Properties props loadConfiguration config Velocity init props catch Exception throw new ServletException protected Properties loadConfiguration ServletConfig config throws IOException FileNotFoundException String propsFile config getInitParameter INIT_PROPS_KEY if propsFile null propsFile length ServletContext sc config getServletContext propsFile config getInitParameter OLD_INIT_PROPS_KEY if propsFile null propsFile length propsFile sc getInitParameter INIT_PROPS_KEY if propsFile null propsFile length propsFile sc getInitParameter OLD_INIT_PROPS_KEY if propsFile null propsFile length sc log OLD_INIT_PROPS_KEY INIT_PROPS_KEY else sc log OLD_INIT_PROPS_KEY INIT_PROPS_KEY Properties new Properties if propsFile null load getServletContext getResourceAsStream propsFile return public void doGet HttpServletRequest request HttpServletResponse response throws ServletException IOException doRequest request response public void doPost HttpServletRequest request HttpServletResponse response throws ServletException IOException doRequest request response protected void doRequest HttpServletRequest request HttpServletResponse response throws ServletException IOException Context context null try context createContext request response setContentType request response Template template handleRequest request response context if template null return mergeTemplate template context response catch Exception error request response finally requestCleanup request response context protected void requestCleanup HttpServletRequest request HttpServletResponse response Context context protected void mergeTemplate Template template Context context HttpServletResponse response throws ResourceNotFoundException ParseErrorException MethodInvocationException IOException UnsupportedEncodingException Exception ServletOutputStream output response getOutputStream VelocityWriter vw null String encoding response getCharacterEncoding try vw VelocityWriter writerPool get if vw null vw new VelocityWriter new OutputStreamWriter output encoding true else vw recycle new OutputStreamWriter output encoding template merge context vw finally if vw null try vw flush catch IOException vw recycle null writerPool put vw protected void setContentType HttpServletRequest request HttpServletResponse response String contentType VelocityServlet defaultContentType int index contentType lastIndexOf if index index contentType length contentType indexOf index String encoding chooseCharacterEncoding request if DEFAULT_OUTPUT_ENCODING equalsIgnoreCase encoding contentType encoding response setContentType contentType protected String chooseCharacterEncoding HttpServletRequest request return RuntimeSingleton getString RuntimeConstants OUTPUT_ENCODING DEFAULT_OUTPUT_ENCODING protected Context createContext HttpServletRequest request HttpServletResponse response VelocityContext context new VelocityContext context put REQUEST request context put RESPONSE response return context public Template getTemplate String name throws ResourceNotFoundException ParseErrorException Exception return RuntimeSingleton getTemplate name public Template getTemplate String name String encoding throws ResourceNotFoundException ParseErrorException Exception return RuntimeSingleton getTemplate name encoding protected Template handleRequest HttpServletRequest request HttpServletResponse response Context ctx throws Exception Template handleRequest ctx if null throw new Exception return protected Template handleRequest Context ctx throws Exception throw new Exception protected void error HttpServletRequest request HttpServletResponse response Exception cause throws ServletException IOException StringBuffer html new StringBuffer html append html append html append html append html append String why cause getMessage if why null why trim length html append why html append StringWriter sw new StringWriter cause printStackTrace new PrintWriter sw html append sw toString html append html append html append response getOutputStream print html toString public class NullLogSystem extends NullLogChute implements LogSystem public void logVelocityMessage int level String message public class LogDisplayWrapper extends Log private final String prefix private final boolean outputMessages private final Log log public LogDisplayWrapper final Log log final String prefix final boolean outputMessages super log getLogChute this log log this prefix prefix this outputMessages outputMessages protected LogChute getLogChute return log getLogChute protected void log final int level final Object message log outputMessages level message protected void log final boolean doLogging final int level final Object message if doLogging getLogChute log level prefix String valueOf message protected void log final int level final Object message final Throwable log outputMessages level message protected void log final boolean doLogging final int level final Object message final Throwable if doLogging getLogChute log level prefix String valueOf message public void trace final boolean doLogging final Object message log doLogging LogChute TRACE_ID message public void trace final boolean doLogging final Object message final Throwable log doLogging LogChute TRACE_ID message public void debug final boolean doLogging final Object message log doLogging LogChute DEBUG_ID message public void debug final boolean doLogging final Object message final Throwable log doLogging LogChute DEBUG_ID message public void info final boolean doLogging final Object message log doLogging LogChute INFO_ID message public void info final boolean doLogging final Object message final Throwable log doLogging LogChute INFO_ID message public void warn final boolean doLogging final Object message log doLogging LogChute WARN_ID message public void warn final boolean doLogging final Object message final Throwable log doLogging LogChute WARN_ID message public void error final boolean doLogging final Object message log doLogging LogChute ERROR_ID message public void error final boolean doLogging final Object message final Throwable log doLogging LogChute ERROR_ID message public class Literal extends Directive String literalText public String getName return public int getType return BLOCK public void init RuntimeServices rs InternalContextAdapter context Node node throws TemplateInitException super init rs context node literalText node jjtGetChild literal public boolean render InternalContextAdapter context Writer writer Node node throws IOException writer write literalText return true public final class SimplePool private Object pool private int max private int current public SimplePool int max this max max pool new Object max public void put Object int idx synchronized this if current max idx current if idx pool idx public Object get synchronized this if current Object pool current pool current null current return return null public int getMax return max Object getPool return pool public class MapSetExecutor extends SetExecutor private final String property public MapSetExecutor final Log log final Class clazz final String property this log log this property property discover clazz protected void discover final Class clazz Class interfaces clazz getInterfaces for int interfaces length if interfaces equals Map class try if property null setMethod Map class getMethod new Class Object class Object class catch RuntimeException throw catch Exception log error property break public Object execute final Object final Object arg return Map put property arg public class TreeWalker public TreeWalker public NodeList allElements Element ArrayList theElements new ArrayList treeWalk theElements return new NodeList theElements false private final void treeWalk Element Collection theElements for Iterator getChildren iterator hasNext Element child Element next theElements add child treeWalk child theElements public class XPathTool public XPathTool public NodeList applyTo String xpathSpec Document doc return new NodeList XPathCache getXPath xpathSpec applyTo doc false public NodeList applyTo String xpathSpec Element elem return new NodeList XPathCache getXPath xpathSpec applyTo elem false public NodeList applyTo String xpathSpec List nodeSet return new NodeList XPathCache getXPath xpathSpec applyTo nodeSet false public class EnumerationIterator implements Iterator private Enumeration enumeration null public EnumerationIterator Enumeration enumeration this enumeration enumeration public Object next return enumeration nextElement public boolean hasNext return enumeration hasMoreElements public void remove public class ASTSubtractNode extends SimpleNode public ASTSubtractNode int id super id public ASTSubtractNode Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public Object value InternalContextAdapter context throws MethodInvocationException Object left jjtGetChild value context Object right jjtGetChild value context if left null right null log error left null jjtGetChild left null literal context getCurrentTemplateName getLine getColumn return null if left instanceof TemplateNumber left TemplateNumber left getAsNumber if right instanceof TemplateNumber right TemplateNumber right getAsNumber if left instanceof Number right instanceof Number log error left instanceof Number context getCurrentTemplateName getLine getColumn return null return MathUtils subtract Number left Number right public abstract class ResourceLoader protected boolean isCachingOn false protected long modificationCheckInterval protected String className null protected RuntimeServices rsvc null protected Log log null public void commonInit RuntimeServices rs ExtendedProperties configuration this rsvc rs this log rsvc getLog try isCachingOn configuration getBoolean false catch Exception isCachingOn false log error isCachingOn try modificationCheckInterval configuration getLong catch Exception modificationCheckInterval log error modificationCheckInterval className ResourceCacheImpl class getName try className configuration getString className catch Exception log error className public abstract void init ExtendedProperties configuration public abstract InputStream getResourceStream String source throws ResourceNotFoundException public abstract boolean isSourceModified Resource resource public abstract long getLastModified Resource resource public String getClassName return className public void setCachingOn boolean value isCachingOn value public boolean isCachingOn return isCachingOn public void setModificationCheckInterval long modificationCheckInterval this modificationCheckInterval modificationCheckInterval public long getModificationCheckInterval return modificationCheckInterval public class Info private int line private int column private String templateName public Info String source int line int column this templateName source this line line this column column private Info public String getTemplateName return templateName public int getLine return line public int getColumn return column public String toString return getTemplateName getLine getColumn class InternalContextBase implements InternalHousekeepingContext InternalEventContext private static final long serialVersionUID private HashMap introspectionCache new HashMap private Stack templateNameStack new Stack private EventCartridge eventCartridge null private Resource currentResource null private boolean allowRendering true public void pushCurrentTemplateName String templateNameStack push public void popCurrentTemplateName templateNameStack pop public String getCurrentTemplateName if templateNameStack empty return else return String templateNameStack peek public Object getTemplateNameStack return templateNameStack toArray public IntrospectionCacheData icacheGet Object key return IntrospectionCacheData introspectionCache get key public void icachePut Object key IntrospectionCacheData introspectionCache put key public void setCurrentResource Resource currentResource public Resource getCurrentResource return currentResource public boolean getAllowRendering return allowRendering public void setAllowRendering boolean allowRendering public EventCartridge attachEventCartridge EventCartridge ec EventCartridge temp eventCartridge eventCartridge ec return temp public EventCartridge getEventCartridge return eventCartridge public abstract class BaseVisitor implements ParserVisitor protected InternalContextAdapter context protected Writer writer public void setWriter Writer writer this writer writer public void setContext InternalContextAdapter context this context context public Object visit SimpleNode node Object data data node childrenAccept this data return data public Object visit ASTprocess node Object data data node childrenAccept this data return data public Object visit ASTExpression node Object data data node childrenAccept this data return data public Object visit ASTAssignment node Object data data node childrenAccept this data return data public Object visit ASTOrNode node Object data data node childrenAccept this data return data public Object visit ASTAndNode node Object data data node childrenAccept this data return data public Object visit ASTEQNode node Object data data node childrenAccept this data return data public Object visit ASTNENode node Object data data node childrenAccept this data return data public Object visit ASTLTNode node Object data data node childrenAccept this data return data public Object visit ASTGTNode node Object data data node childrenAccept this data return data public Object visit ASTLENode node Object data data node childrenAccept this data return data public Object visit ASTGENode node Object data data node childrenAccept this data return data public Object visit ASTAddNode node Object data data node childrenAccept this data return data public Object visit ASTSubtractNode node Object data data node childrenAccept this data return data public Object visit ASTMulNode node Object data data node childrenAccept this data return data public Object visit ASTDivNode node Object data data node childrenAccept this data return data public Object visit ASTModNode node Object data data node childrenAccept this data return data public Object visit ASTNotNode node Object data data node childrenAccept this data return data public Object visit ASTIntegerLiteral node Object data data node childrenAccept this data return data public Object visit ASTFloatingPointLiteral node Object data data node childrenAccept this data return data public Object visit ASTStringLiteral node Object data data node childrenAccept this data return data public Object visit ASTIdentifier node Object data data node childrenAccept this data return data public Object visit ASTMethod node Object data data node childrenAccept this data return data public Object visit ASTReference node Object data data node childrenAccept this data return data public Object visit ASTTrue node Object data data node childrenAccept this data return data public Object visit ASTFalse node Object data data node childrenAccept this data return data public Object visit ASTBlock node Object data data node childrenAccept this data return data public Object visit ASTText node Object data data node childrenAccept this data return data public Object visit ASTIfStatement node Object data data node childrenAccept this data return data public Object visit ASTElseStatement node Object data data node childrenAccept this data return data public Object visit ASTElseIfStatement node Object data data node childrenAccept this data return data public Object visit ASTComment node Object data data node childrenAccept this data return data public Object visit ASTObjectArray node Object data data node childrenAccept this data return data public Object visit ASTWord node Object data data node childrenAccept this data return data public Object visit ASTSetDirective node Object data data node childrenAccept this data return data public Object visit ASTDirective node Object data data node childrenAccept this data return data public Object visit ASTEscapedDirective node Object data data node childrenAccept this data return data public Object visit ASTEscape node Object data data node childrenAccept this data return data public Object visit ASTMap node Object data data node childrenAccept this data return data public Object visit ASTIntegerRange node Object data data node childrenAccept this data return data public Object visit ASTStop node Object data data node childrenAccept this data return data public class ASTReference extends SimpleNode private static final int NORMAL_REFERENCE private static final int FORMAL_REFERENCE private static final int QUIET_REFERENCE private static final int RUNT private int referenceType private String nullString private String rootString private boolean escaped false private boolean computableReference true private boolean logOnNull true private String escPrefix private String morePrefix private String identifier private String literal null private int numChildren protected Info uberInfo public ASTReference int id super id public ASTReference Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public Object init InternalContextAdapter context Object data throws TemplateInitException super init context data rootString getRoot numChildren jjtGetNumChildren if numChildren identifier jjtGetChild numChildren getFirstToken image uberInfo new Info context getCurrentTemplateName getLine getColumn logOnNull rsvc getBoolean RuntimeConstants RUNTIME_LOG_REFERENCE_LOG_INVALID true return data public String getRootString return rootString public Object execute Object InternalContextAdapter context throws MethodInvocationException if referenceType RUNT return null Object result getVariableValue context rootString if result null return EventHandlerUtil invalidGetMethod rsvc context rootString null null uberInfo try Object previousResult result int failedChild for int numChildren previousResult result result jjtGetChild execute result context if result null failedChild break if result null if failedChild result EventHandlerUtil invalidGetMethod rsvc context rootString previousResult null uberInfo else StringBuffer name new StringBuffer append rootString for int failedChild Node node jjtGetChild if node instanceof ASTMethod name append append ASTMethod node getMethodName append else name append append node getFirstToken image if jjtGetChild failedChild instanceof ASTMethod String methodName ASTMethod jjtGetChild failedChild getMethodName result EventHandlerUtil invalidMethod rsvc context name toString previousResult methodName uberInfo else String property jjtGetChild failedChild getFirstToken image result EventHandlerUtil invalidGetMethod rsvc context name toString previousResult property uberInfo return result catch MethodInvocationException mie log error mie getMethodName rootString context getCurrentTemplateName this getLine this getColumn mie setReferenceName rootString throw mie public boolean render InternalContextAdapter context Writer writer throws IOException MethodInvocationException if referenceType RUNT if context getAllowRendering writer write rootString return true Object value execute null context if escaped if value null if context getAllowRendering writer write escPrefix writer write writer write nullString else if context getAllowRendering writer write escPrefix writer write nullString return true value EventHandlerUtil referenceInsert rsvc context literal value String toString null if value null toString value toString if value null toString null if context getAllowRendering writer write escPrefix writer write escPrefix writer write morePrefix writer write nullString if logOnNull referenceType QUIET_REFERENCE log isInfoEnabled log info context getCurrentTemplateName this getLine this getColumn this literal return true else if context getAllowRendering writer write escPrefix writer write morePrefix writer write toString return true public boolean evaluate InternalContextAdapter context throws MethodInvocationException Object value execute null context if value null return false else if value instanceof Boolean if Boolean value booleanValue return true else return false else return true public Object value InternalContextAdapter context throws MethodInvocationException return computableReference execute null context null public boolean setValue InternalContextAdapter context Object value throws MethodInvocationException if jjtGetNumChildren context put rootString value return true Object result getVariableValue context rootString if result null String msg context getCurrentTemplateName getLine getColumn literal log error msg return false for int numChildren result jjtGetChild execute result context if result null String msg context getCurrentTemplateName getLine getColumn literal log error msg return false try VelPropertySet vs rsvc getUberspect getPropertySet result identifier value uberInfo if vs null return false vs invoke result value catch InvocationTargetException ite throw new MethodInvocationException identifier result getClass ite getTargetException toString ite getTargetException identifier context getCurrentTemplateName this getLine this getColumn catch RuntimeException throw catch Exception log error context getCurrentTemplateName this getLine this getColumn return false return true private String getRoot Token getFirstToken int slashbang image indexOf if slashbang int int len image length image indexOf if log error computableReference false nullString image return nullString while len image charAt int start int count while len image charAt count computableReference false return nullString escaped false if image startsWith int int len image length while len image charAt if escaped true if escPrefix image substring image image substring int loc1 image lastIndexOf if loc1 morePrefix morePrefix image substring loc1 image image substring loc1 nullString literal if image startsWith referenceType QUIET_REFERENCE if escaped nullString if image startsWith return next image else return image substring else if image equals referenceType FORMAL_REFERENCE return next image else if image startsWith referenceType NORMAL_REFERENCE return image substring else referenceType RUNT return image public Object getVariableValue Context context String variable throws MethodInvocationException return context get variable public void setLiteral String literal if this literal null this literal literal public String literal if literal null return literal return super literal public class MacroParseException extends ParseException implements ExtendedParseException private final String templateName private static final long serialVersionUID public MacroParseException final String msg final String templateName final Token currentToken super msg this currentToken currentToken this templateName templateName public String getTemplateName return templateName public int getLineNumber if currentToken null currentToken next null return currentToken next beginLine else return public int getColumnNumber if currentToken null currentToken next null return currentToken next beginColumn else return public String getMessage if specialConstructor StringBuffer sb new StringBuffer super getMessage appendTemplateInfo sb return sb toString int maxSize StringBuffer expected new StringBuffer for int expectedTokenSequences length if maxSize expectedTokenSequences length maxSize expectedTokenSequences length for int expectedTokenSequences length expected append tokenImage expectedTokenSequences append if expectedTokenSequences expectedTokenSequences length expected append expected append eol append StringBuffer retval new StringBuffer Token tok currentToken next for int maxSize if retval append if tok kind retval append tokenImage break retval append add_escapes tok image tok tok next retval append appendTemplateInfo retval if expectedTokenSequences length retval append append eol append else retval append append eol append retval append expected toString return retval toString protected void appendTemplateInfo final StringBuffer sb sb append append getLineNumber append append getColumnNumber if getTemplateName null sb append append getTemplateName else sb append sb append eol public interface MethodExceptionEventHandler extends EventHandler public Object methodException Class claz String method Exception throws Exception static class MethodExceptionExecutor implements EventHandlerMethodExecutor private Context context private Class claz private String method private Exception private Object result private boolean executed false MethodExceptionExecutor Context context Class claz String method Exception this context context this claz claz this method method this public void execute EventHandler handler throws Exception MethodExceptionEventHandler eh MethodExceptionEventHandler handler if eh instanceof ContextAware ContextAware eh setContext context executed true result MethodExceptionEventHandler handler methodException claz method public Object getReturnValue return result public boolean isDone return executed public class GetExecutor extends AbstractExecutor private final Introspector introspector private Object params public GetExecutor final Log log final Introspector introspector final Class clazz final String property this log log this introspector introspector if property null this params new Object property discover clazz public GetExecutor final RuntimeLogger rlog final Introspector introspector final Class clazz final String property this new RuntimeLoggerLog rlog introspector clazz property protected void discover final Class clazz try setMethod introspector getMethod clazz params catch RuntimeException throw catch Exception log error params public Object execute final Object throws IllegalAccessException InvocationTargetException return isAlive getMethod invoke params null public class ASTOrNode extends SimpleNode public ASTOrNode int id super id public ASTOrNode Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public Object value InternalContextAdapter context throws MethodInvocationException return new Boolean evaluate context public boolean evaluate InternalContextAdapter context throws MethodInvocationException Node left jjtGetChild Node right jjtGetChild if left null left evaluate context return true if right null right evaluate context return true return false public final class StringResource private String body private String encoding private long lastModified public StringResource final String body final String encoding setBody body setEncoding encoding public String getBody return body public long getLastModified return lastModified public void setBody final String body this body body this lastModified System currentTimeMillis public void setLastModified final long lastModified this lastModified lastModified public String getEncoding return this encoding public void setEncoding final String encoding this encoding encoding public class NullLogChute implements LogChute public void init RuntimeServices rs throws Exception public void log int level String message public void log int level String message Throwable public boolean isLevelEnabled int level return false public class ResourceNotFoundException extends VelocityException private static final long serialVersionUID public ResourceNotFoundException final String exceptionMessage super exceptionMessage public ResourceNotFoundException final String exceptionMessage final Throwable super exceptionMessage public ResourceNotFoundException final Throwable super public final class InternalContextAdapterImpl implements InternalContextAdapter Context context null InternalHousekeepingContext icb null InternalEventContext iec null public InternalContextAdapterImpl Context context if instanceof InternalHousekeepingContext icb new InternalContextBase else icb InternalHousekeepingContext context if instanceof InternalEventContext iec InternalEventContext context public void pushCurrentTemplateName String icb pushCurrentTemplateName public void popCurrentTemplateName icb popCurrentTemplateName public String getCurrentTemplateName return icb getCurrentTemplateName public Object getTemplateNameStack return icb getTemplateNameStack public IntrospectionCacheData icacheGet Object key return icb icacheGet key public void icachePut Object key IntrospectionCacheData icb icachePut key public void setCurrentResource Resource icb setCurrentResource public Resource getCurrentResource return icb getCurrentResource public boolean getAllowRendering return icb getAllowRendering public void setAllowRendering boolean icb setAllowRendering public Object put String key Object value return context put key value public Object localPut final String key final Object value return put key value public Object get String key return context get key public boolean containsKey Object key return context containsKey key public Object getKeys return context getKeys public Object remove Object key return context remove key public Context getInternalUserContext return context public InternalContextAdapter getBaseContext return this public EventCartridge attachEventCartridge EventCartridge ec if iec null return iec attachEventCartridge ec return null public EventCartridge getEventCartridge if iec null return iec getEventCartridge return null public abstract class EscapeReference implements ReferenceInsertionEventHandler RuntimeServicesAware private Perl5Util perl new Perl5Util private RuntimeServices rs private String matchRegExp null protected abstract String escape Object text protected abstract String getMatchAttribute public Object referenceInsert String reference Object value if value null return value if matchRegExp null return escape value else if perl match matchRegExp reference return escape value else return value public void setRuntimeServices RuntimeServices rs this rs rs matchRegExp StringUtils nullTrim rs getConfiguration getString getMatchAttribute if matchRegExp null matchRegExp length matchRegExp null if matchRegExp null try perl match matchRegExp catch MalformedPerl5PatternException rs getLog error matchRegExp matchRegExp null protected RuntimeServices getRuntimeServices return rs public interface DirectiveConstants public static final int BLOCK public static final int LINE public class ResourceManagerImpl implements ResourceManager public static final int RESOURCE_TEMPLATE public static final int RESOURCE_CONTENT private static final String RESOURCE_LOADER_IDENTIFIER protected ResourceCache globalCache null protected final List resourceLoaders new ArrayList private final List sourceInitializerList new ArrayList private boolean isInit false private boolean logWhenFound true protected RuntimeServices rsvc null protected Log log null public synchronized void initialize final RuntimeServices rsvc throws Exception if isInit log warn return ResourceLoader resourceLoader null this rsvc rsvc log rsvc getLog log debug this getClass assembleResourceLoaderInitializers for Iterator it sourceInitializerList iterator it hasNext ExtendedProperties configuration ExtendedProperties it next String loaderClass StringUtils nullTrim configuration getString ResourceLoader loaderInstance ResourceLoader configuration get if loaderInstance null resourceLoader loaderInstance else if loaderClass null resourceLoader ResourceLoaderFactory getLoader rsvc loaderClass else log error configuration getString RESOURCE_LOADER_IDENTIFIER resourceLoader commonInit rsvc configuration resourceLoader init configuration resourceLoaders add resourceLoader logWhenFound rsvc getBoolean RuntimeConstants RESOURCE_MANAGER_LOGWHENFOUND true String cacheClassName rsvc getString RuntimeConstants RESOURCE_MANAGER_CACHE_CLASS Object cacheObject null if org apache commons lang StringUtils isNotEmpty cacheClassName try cacheObject ClassUtils getNewInstance cacheClassName catch ClassNotFoundException cnfe log error cacheClassName cacheObject null if cacheObject instanceof ResourceCache log error cacheClassName ResourceCache class getName cacheObject null if cacheObject null cacheObject new ResourceCacheImpl globalCache ResourceCache cacheObject globalCache initialize rsvc log trace private void assembleResourceLoaderInitializers Vector resourceLoaderNames rsvc getConfiguration getVector RuntimeConstants RESOURCE_LOADER StringUtils trimStrings resourceLoaderNames for Iterator it resourceLoaderNames iterator it hasNext String loaderName String it next StringBuffer loaderID new StringBuffer loaderName loaderID append append RuntimeConstants RESOURCE_LOADER ExtendedProperties loaderConfiguration rsvc getConfiguration subset loaderID toString if loaderConfiguration null log warn loaderName continue loaderConfiguration setProperty RESOURCE_LOADER_IDENTIFIER loaderName sourceInitializerList add loaderConfiguration public synchronized Resource getResource final String resourceName final int resourceType final String encoding throws ResourceNotFoundException ParseErrorException Exception String resourceKey resourceType resourceName Resource resource globalCache get resourceKey if resource null try refreshResource resource encoding catch ResourceNotFoundException rnfe globalCache remove resourceKey return getResource resourceName resourceType encoding catch ParseErrorException pee log error pee throw pee catch RuntimeException re throw re catch Exception log error throw else try resource loadResource resourceName resourceType encoding if resource getResourceLoader isCachingOn globalCache put resourceKey resource catch ResourceNotFoundException rnfe log error resourceName throw rnfe catch ParseErrorException pee log error pee throw pee catch RuntimeException re throw re catch Exception log error throw return resource protected Resource loadResource String resourceName int resourceType String encoding throws ResourceNotFoundException ParseErrorException Exception Resource resource ResourceFactory getResource resourceName resourceType resource setRuntimeServices rsvc resource setName resourceName resource setEncoding encoding long howOldItWas for Iterator it resourceLoaders iterator it hasNext ResourceLoader resourceLoader ResourceLoader it next resource setResourceLoader resourceLoader try if resource process if logWhenFound log isDebugEnabled log debug resourceName resourceLoader getClassName howOldItWas resourceLoader getLastModified resource break catch ResourceNotFoundException rnfe if resource getData null throw new ResourceNotFoundException resourceName resource setLastModified howOldItWas resource setModificationCheckInterval resource getResourceLoader getModificationCheckInterval resource touch return resource protected void refreshResource final Resource resource final String encoding throws ResourceNotFoundException ParseErrorException Exception if resource requiresChecking resource touch if resource isSourceModified if org apache commons lang StringUtils equals resource getEncoding encoding log warn resource getName resource getEncoding encoding resource setEncoding encoding long howOldItWas resource getResourceLoader getLastModified resource resource process resource setLastModified howOldItWas public Resource getResource String resourceName int resourceType throws ResourceNotFoundException ParseErrorException Exception return getResource resourceName resourceType RuntimeConstants ENCODING_DEFAULT public String getLoaderNameForResource String resourceName for Iterator it resourceLoaders iterator it hasNext ResourceLoader resourceLoader ResourceLoader it next InputStream is null try is resourceLoader getResourceStream resourceName if is null return resourceLoader getClass toString catch ResourceNotFoundException rnfe finally if is null try is close catch IOException supressed return null public class ParseException extends Exception private static final long serialVersionUID public ParseException Token currentTokenVal int expectedTokenSequencesVal String tokenImageVal super specialConstructor true currentToken currentTokenVal expectedTokenSequences expectedTokenSequencesVal tokenImage tokenImageVal public ParseException super specialConstructor false public ParseException String message super message specialConstructor false protected boolean specialConstructor public Token currentToken public int expectedTokenSequences public String tokenImage public String getMessage if specialConstructor return super getMessage String expected int maxSize for int expectedTokenSequences length if maxSize expectedTokenSequences length maxSize expectedTokenSequences length for int expectedTokenSequences length expected tokenImage expectedTokenSequences if expectedTokenSequences expectedTokenSequences length expected expected eol String retval Token tok currentToken next for int maxSize if retval if tok kind retval tokenImage break retval add_escapes tok image tok tok next retval currentToken next beginLine currentToken next beginColumn retval eol if expectedTokenSequences length retval eol else retval eol retval expected return retval protected String eol System getProperty protected String add_escapes String str StringBuffer retval new StringBuffer char ch for int str length switch str charAt case continue case retval append continue case retval append continue case retval append continue case retval append continue case retval append continue case retval append continue case retval append continue case retval append continue default if ch str charAt ch String Integer toString ch retval append substring length length else retval append ch continue return retval toString public abstract class AbstractExecutor protected Log log null private Method method null public abstract Object execute Object throws IllegalAccessException InvocationTargetException public boolean isAlive return method null public Method getMethod return method protected void setMethod final Method method this method method public class PutExecutor extends SetExecutor private final Introspector introspector private final String property public PutExecutor final Log log final Introspector introspector final Class clazz final Object arg final String property this log log this introspector introspector this property property discover clazz arg protected void discover final Class clazz final Object arg Object params if property null params new Object arg else params new Object property arg try setMethod introspector getMethod clazz params catch RuntimeException throw catch Exception log error params public Object execute final Object final Object value throws IllegalAccessException InvocationTargetException Object params if isAlive if property null params new Object value else params new Object property value return getMethod invoke params return null public class ResourceFactory public static Resource getResource String resourceName int resourceType Resource resource null switch resourceType case ResourceManager RESOURCE_TEMPLATE resource new Template break case ResourceManager RESOURCE_CONTENT resource new ContentResource break return resource public class ASTParameters extends SimpleNode public ASTParameters int id super id public ASTParameters Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public class Velocity implements RuntimeConstants public static void init throws Exception RuntimeSingleton init public static void init String propsFilename throws Exception RuntimeSingleton init propsFilename public static void init Properties throws Exception RuntimeSingleton init public static void setProperty String key Object value RuntimeSingleton setProperty key value public static void addProperty String key Object value RuntimeSingleton addProperty key value public static void clearProperty String key RuntimeSingleton clearProperty key public static void setExtendedProperties ExtendedProperties configuration RuntimeSingleton setConfiguration configuration public static Object getProperty String key return RuntimeSingleton getProperty key public static boolean evaluate Context context Writer out String logTag String instring throws ParseErrorException MethodInvocationException ResourceNotFoundException IOException return evaluate context out logTag new BufferedReader new StringReader instring public static boolean evaluate Context context Writer writer String logTag InputStream instream throws ParseErrorException MethodInvocationException ResourceNotFoundException IOException BufferedReader br null String encoding null try encoding RuntimeSingleton getString INPUT_ENCODING ENCODING_DEFAULT br new BufferedReader new InputStreamReader instream encoding catch UnsupportedEncodingException uce String msg encoding logTag throw new ParseErrorException msg return evaluate context writer logTag br public static boolean evaluate Context context Writer writer String logTag Reader reader throws ParseErrorException MethodInvocationException ResourceNotFoundException IOException SimpleNode nodeTree null try nodeTree RuntimeSingleton parse reader logTag catch ParseException pex throw new ParseErrorException pex catch TemplateInitException pex throw new ParseErrorException pex if nodeTree null InternalContextAdapterImpl ica new InternalContextAdapterImpl context ica pushCurrentTemplateName logTag try try nodeTree init ica RuntimeSingleton getRuntimeServices catch TemplateInitException pex throw new ParseErrorException pex catch RuntimeException throw catch Exception getLog error logTag nodeTree render ica writer finally ica popCurrentTemplateName return true return false public static boolean invokeVelocimacro String vmName String logTag String params Context context Writer writer if vmName null params null context null writer null logTag null getLog error return false if RuntimeSingleton isVelocimacro vmName logTag getLog error vmName return false StringBuffer construct new StringBuffer construct append vmName construct append for int params length construct append construct append params construct append try return evaluate context writer logTag construct toString catch ParseErrorException pee throw pee catch MethodInvocationException mie throw mie catch ResourceNotFoundException rnfe throw rnfe catch IOException ioe getLog error ioe catch RuntimeException re throw re return false public static boolean mergeTemplate String templateName Context context Writer writer throws ResourceNotFoundException ParseErrorException MethodInvocationException Exception return mergeTemplate templateName RuntimeSingleton getString INPUT_ENCODING ENCODING_DEFAULT context writer public static boolean mergeTemplate String templateName String encoding Context context Writer writer throws ResourceNotFoundException ParseErrorException MethodInvocationException Exception Template template RuntimeSingleton getTemplate templateName encoding if template null getLog error templateName return false else template merge context writer return true public static Template getTemplate String name throws ResourceNotFoundException ParseErrorException Exception return RuntimeSingleton getTemplate name public static Template getTemplate String name String encoding throws ResourceNotFoundException ParseErrorException Exception return RuntimeSingleton getTemplate name encoding public static boolean resourceExists String resourceName return RuntimeSingleton getLoaderNameForResource resourceName null public static Log getLog return RuntimeSingleton getLog public static void warn Object message getLog warn message public static void info Object message getLog info message public static void error Object message getLog error message public static void debug Object message getLog debug message public static void setApplicationAttribute Object key Object value RuntimeSingleton getRuntimeInstance setApplicationAttribute key value public static boolean templateExists String resourceName return resourceExists resourceName public class URLResourceLoader extends ResourceLoader private String roots null protected HashMap templateRoots null public void init ExtendedProperties configuration log trace roots configuration getStringArray if log isInfoEnabled for int roots length log info roots templateRoots new HashMap log trace public synchronized InputStream getResourceStream String name throws ResourceNotFoundException if StringUtils isEmpty name throw new ResourceNotFoundException InputStream inputStream null Exception exception null for int roots length try URL new URL roots name inputStream openStream if inputStream null if log isDebugEnabled log debug name roots templateRoots put name roots break catch IOException ioe if log isDebugEnabled log debug name roots ioe if exception null exception ioe if inputStream null String msg if exception null msg name else msg exception getMessage throw new ResourceNotFoundException msg return inputStream public boolean isSourceModified Resource resource long fileLastModified getLastModified resource if fileLastModified fileLastModified resource getLastModified return true return false public long getLastModified Resource resource String name resource getName String root String templateRoots get name try URL new URL root name URLConnection conn openConnection return conn getLastModified catch IOException ioe log warn name root ioe return public class RuntimeSingleton implements RuntimeConstants private static RuntimeInstance ri new RuntimeInstance public synchronized static void init throws Exception ri init public static boolean isInitialized return ri isInitialized public static RuntimeServices getRuntimeServices return ri public static void setProperty String key Object value ri setProperty key value public static void setConfiguration ExtendedProperties configuration ri setConfiguration configuration public static void addProperty String key Object value ri addProperty key value public static void clearProperty String key ri clearProperty key public static Object getProperty String key return ri getProperty key public static void init Properties throws Exception ri init public static void init String configurationFile throws Exception ri init configurationFile public static SimpleNode parse Reader reader String templateName throws ParseException return ri parse reader templateName public static SimpleNode parse Reader reader String templateName boolean dumpNamespace throws ParseException return ri parse reader templateName dumpNamespace public static Template getTemplate String name throws ResourceNotFoundException ParseErrorException Exception return ri getTemplate name public static Template getTemplate String name String encoding throws ResourceNotFoundException ParseErrorException Exception return ri getTemplate name encoding public static ContentResource getContent String name throws ResourceNotFoundException ParseErrorException Exception return ri getContent name public static ContentResource getContent String name String encoding throws ResourceNotFoundException ParseErrorException Exception return ri getContent name encoding public static String getLoaderNameForResource String resourceName return ri getLoaderNameForResource resourceName public static Log getLog return ri getLog public static void warn Object message getLog warn message public static void info Object message getLog info message public static void error Object message getLog error message public static void debug Object message getLog debug message public static String getString String key String defaultValue return ri getString key defaultValue public static Directive getVelocimacro String vmName String templateName return ri getVelocimacro vmName templateName public static boolean addVelocimacro String name String macro String argArray String sourceTemplate return ri addVelocimacro name macro argArray sourceTemplate public static boolean isVelocimacro String vmName String templateName return ri isVelocimacro vmName templateName public static boolean dumpVMNamespace String namespace return ri dumpVMNamespace namespace public static String getString String key return ri getString key public static int getInt String key return ri getInt key public static int getInt String key int defaultValue return ri getInt key defaultValue public static boolean getBoolean String key boolean def return ri getBoolean key def public static ExtendedProperties getConfiguration return ri getConfiguration public static Introspector getIntrospector return ri getIntrospector public EventCartridge getEventCartridge return ri getApplicationEventCartridge public static Object getApplicationAttribute Object key return ri getApplicationAttribute key public static Uberspect getUberspect return ri getUberspect public static RuntimeInstance getRuntimeInstance return ri public interface InternalWrapperContext Context getInternalUserContext InternalContextAdapter getBaseContext Object localPut final String key final Object value public class IntrospectionCacheData public Object thingy public Class contextData public class ASTComment extends SimpleNode private static final char ZILCH toCharArray private char carr public ASTComment int id super id public ASTComment Parser int id super id public Object jjtAccept ParserVisitor visitor Object data return visitor visit this data public Object init InternalContextAdapter context Object data Token getFirstToken int loc1 image indexOf int loc2 image indexOf if loc1 loc2 carr ZILCH else carr image substring loc1 loc2 loc1 toCharArray return data public boolean render InternalContextAdapter context Writer writer throws IOException MethodInvocationException ParseErrorException ResourceNotFoundException if context getAllowRendering writer write carr return true 